

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul 13 16:24:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F14K22 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK0
    92  001984                     __pidataBANK0:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for LCD_SetCursor@F2916
    96  001984  0000               	dw	0
    97  001986  0040               	dw	64
    98                           
    99                           ;initializer for _moji
   100  001988  48                 	db	72
   101  001989  65                 	db	101
   102  00198A  6C                 	db	108
   103  00198B  6C                 	db	108
   104  00198C  6F                 	db	111
   105  00198D  2C                 	db	44
   106  00198E  20                 	db	32
   107  00198F  50                 	db	80
   108  001990  49                 	db	73
   109  001991  43                 	db	67
   110  001992  20                 	db	32
   111  001993  57                 	db	87
   112  001994  6F                 	db	111
   113  001995  72                 	db	114
   114  001996  6C                 	db	108
   115  001997  64                 	db	100
   116  001998  00                 	db	0
   117                           
   118                           ;initializer for _moji2
   119  001999  57                 	db	87
   120  00199A  61                 	db	97
   121  00199B  6B                 	db	107
   122  00199C  2D                 	db	45
   123  00199D  74                 	db	116
   124  00199E  65                 	db	101
   125  00199F  63                 	db	99
   126  0019A0  68                 	db	104
   127  0019A1  00                 	db	0
   128  0000                     _LATCbits	set	3979
   129  0000                     _LATBbits	set	3978
   130  0000                     _RCONbits	set	4048
   131  0000                     _PIR2bits	set	4001
   132  0000                     _SSPSTATbits	set	4039
   133  0000                     _SSPMSK	set	3951
   134  0000                     _SSPBUF	set	4041
   135  0000                     _SSPCON2bits	set	4037
   136  0000                     _SSPADD	set	4040
   137  0000                     _SSPCON2	set	4037
   138  0000                     _SSPCON1	set	4038
   139  0000                     _SSPSTAT	set	4039
   140  0000                     _PIR1bits	set	3998
   141  0000                     _PIE1bits	set	3997
   142  0000                     _SSPCON1bits	set	4038
   143  0000                     _INTCONbits	set	4082
   144  0000                     _INTCON2bits	set	4081
   145  0000                     _WPUA	set	3959
   146  0000                     _WPUB	set	3960
   147  0000                     _ANSELH	set	3967
   148  0000                     _ANSEL	set	3966
   149  0000                     _TRISC	set	3988
   150  0000                     _TRISB	set	3987
   151  0000                     _TRISA	set	3986
   152  0000                     _LATC	set	3979
   153  0000                     _LATB	set	3978
   154  0000                     _LATA	set	3977
   155  0000                     _OSCTUNE	set	3995
   156  0000                     _OSCCON2	set	4050
   157  0000                     _OSCCON	set	4051
   158  0000                     _GIE	set	32663
   159  0000                     _PEIE	set	32662
   160  0000                     _BCLIE	set	32003
   161  0000                     _SSPIE	set	31979
   162  0000                     _BCLIF	set	32011
   163  0000                     _SSPIF	set	31987
   164                           
   165                           	psect	smallconst
   166  000200                     __psmallconst:
   167                           	opt callstack 0
   168  000200  00                 	db	0
   169  000201                     STR_3:
   170  000201  42                 	db	66	;'B'
   171  000202  3A                 	db	58	;':'
   172  000203  30                 	db	48	;'0'
   173  000204  78                 	db	120	;'x'
   174  000205  25                 	db	37
   175  000206  30                 	db	48	;'0'
   176  000207  34                 	db	52	;'4'
   177  000208  78                 	db	120	;'x'
   178  000209  00                 	db	0
   179  00020A                     STR_2:
   180  00020A  47                 	db	71	;'G'
   181  00020B  3A                 	db	58	;':'
   182  00020C  30                 	db	48	;'0'
   183  00020D  78                 	db	120	;'x'
   184  00020E  25                 	db	37
   185  00020F  30                 	db	48	;'0'
   186  000210  34                 	db	52	;'4'
   187  000211  78                 	db	120	;'x'
   188  000212  00                 	db	0
   189  000213                     STR_4:
   190  000213  49                 	db	73	;'I'
   191  000214  3A                 	db	58	;':'
   192  000215  30                 	db	48	;'0'
   193  000216  78                 	db	120	;'x'
   194  000217  25                 	db	37
   195  000218  30                 	db	48	;'0'
   196  000219  34                 	db	52	;'4'
   197  00021A  78                 	db	120	;'x'
   198  00021B  00                 	db	0
   199  00021C                     STR_1:
   200  00021C  52                 	db	82	;'R'
   201  00021D  3A                 	db	58	;':'
   202  00021E  30                 	db	48	;'0'
   203  00021F  78                 	db	120	;'x'
   204  000220  25                 	db	37
   205  000221  30                 	db	48	;'0'
   206  000222  34                 	db	52	;'4'
   207  000223  78                 	db	120	;'x'
   208  000224  00                 	db	0
   209  0000                     
   210                           ; #config settings
   211  000225  00                 	db	0	; dummy byte at the end
   212  0000                     
   213                           	psect	cinit
   214  0016C6                     __pcinit:
   215                           	opt callstack 0
   216  0016C6                     start_initialization:
   217                           	opt callstack 0
   218  0016C6                     __initialization:
   219                           	opt callstack 0
   220                           
   221                           ; Initialize objects allocated to BANK0 (30 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223  0016C6  0E84               	movlw	low __pidataBANK0
   224  0016C8  6EF6               	movwf	tblptrl,c
   225  0016CA  0E19               	movlw	high __pidataBANK0
   226  0016CC  6EF7               	movwf	tblptrh,c
   227  0016CE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228  0016D0  6EF8               	movwf	tblptru,c
   229  0016D2  EE00  F0D6         	lfsr	0,__pdataBANK0
   230  0016D6  EE10 F01E          	lfsr	1,30
   231  0016DA                     copy_data0:
   232  0016DA  0009               	tblrd		*+
   233  0016DC  CFF5 FFEE          	movff	tablat,postinc0
   234  0016E0  50E5               	movf	postdec1,w,c
   235  0016E2  50E1               	movf	fsr1l,w,c
   236  0016E4  E1FA               	bnz	copy_data0
   237                           
   238                           ; Clear objects allocated to BANK0 (68 bytes)
   239  0016E6  EE00  F060         	lfsr	0,__pbssBANK0
   240  0016EA  0E44               	movlw	68
   241  0016EC                     clear_0:
   242  0016EC  6AEE               	clrf	postinc0,c
   243  0016EE  06E8               	decf	wreg,f,c
   244  0016F0  E1FD               	bnz	clear_0
   245                           
   246                           ; Clear objects allocated to COMRAM (4 bytes)
   247  0016F2  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   248  0016F4  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   249  0016F6  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   250  0016F8  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   251  0016FA                     end_of_initialization:
   252                           	opt callstack 0
   253  0016FA                     __end_of__initialization:
   254                           	opt callstack 0
   255  0016FA  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   256  0016FC  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257  0016FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   258  001700  6EF8               	movwf	tblptru,c
   259  001702  0100               	movlb	0
   260  001704  EF9A  F007         	goto	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMRAM
   263  00005A                     __pbssCOMRAM:
   264                           	opt callstack 0
   265  00005A                     _LCD_ColumnSu:
   266                           	opt callstack 0
   267  00005A                     	ds	2
   268  00005C                     _CollisionCheck:
   269                           	opt callstack 0
   270  00005C                     	ds	2
   271                           
   272                           	psect	bssBANK0
   273  000060                     __pbssBANK0:
   274                           	opt callstack 0
   275  000060                     _c:
   276                           	opt callstack 0
   277  000060                     	ds	8
   278  000068                     _b:
   279                           	opt callstack 0
   280  000068                     	ds	4
   281  00006C                     _a:
   282                           	opt callstack 0
   283  00006C                     	ds	4
   284  000070                     _nout:
   285                           	opt callstack 0
   286  000070                     	ds	2
   287  000072                     _width:
   288                           	opt callstack 0
   289  000072                     	ds	2
   290  000074                     _prec:
   291                           	opt callstack 0
   292  000074                     	ds	2
   293  000076                     _flags:
   294                           	opt callstack 0
   295  000076                     	ds	2
   296  000078                     _ContSet_DT:
   297                           	opt callstack 0
   298  000078                     	ds	2
   299  00007A                     _FuncSet_DT:
   300                           	opt callstack 0
   301  00007A                     	ds	2
   302  00007C                     _LCD_NowPage:
   303                           	opt callstack 0
   304  00007C                     	ds	2
   305  00007E                     _AckCheck:
   306                           	opt callstack 0
   307  00007E                     	ds	2
   308  000080                     _i2c_driver_i2cISR:
   309                           	opt callstack 0
   310  000080                     	ds	2
   311  000082                     _i2c_driver_busCollisionISR:
   312                           	opt callstack 0
   313  000082                     	ds	2
   314  000084                     _dbuf:
   315                           	opt callstack 0
   316  000084                     	ds	32
   317                           
   318                           	psect	dataBANK0
   319  0000D6                     __pdataBANK0:
   320                           	opt callstack 0
   321  0000D6                     LCD_SetCursor@F2916:
   322                           	opt callstack 0
   323  0000D6                     	ds	4
   324  0000DA                     _moji:
   325                           	opt callstack 0
   326  0000DA                     	ds	17
   327  0000EB                     _moji2:
   328                           	opt callstack 0
   329  0000EB                     	ds	9
   330                           
   331                           	psect	cstackBANK0
   332  0000A4                     __pcstackBANK0:
   333                           	opt callstack 0
   334  0000A4                     ?_vfprintf:
   335                           	opt callstack 0
   336  0000A4                     vfprintf@fp:
   337                           	opt callstack 0
   338                           
   339                           ; 2 bytes @ 0x0
   340  0000A4                     	ds	2
   341  0000A6                     vfprintf@fmt:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  0000A6                     	ds	2
   346  0000A8                     vfprintf@ap:
   347                           	opt callstack 0
   348                           
   349                           ; 2 bytes @ 0x4
   350  0000A8                     	ds	2
   351  0000AA                     vfprintf@cfmt:
   352                           	opt callstack 0
   353                           
   354                           ; 2 bytes @ 0x6
   355  0000AA                     	ds	2
   356  0000AC                     ?_sprintf:
   357                           	opt callstack 0
   358  0000AC                     sprintf@s:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x8
   362  0000AC                     	ds	2
   363  0000AE                     sprintf@fmt:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0xA
   367  0000AE                     	ds	6
   368  0000B4                     sprintf@ap:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x10
   372  0000B4                     	ds	2
   373  0000B6                     sprintf@f:
   374                           	opt callstack 0
   375                           
   376                           ; 6 bytes @ 0x12
   377  0000B6                     	ds	6
   378  0000BC                     ??_Color:
   379  0000BC                     ??_Color_Read:
   380                           
   381                           ; 1 bytes @ 0x18
   382  0000BC                     	ds	4
   383  0000C0                     Color_Read@buf:
   384                           	opt callstack 0
   385  0000C0                     Color@buf:
   386                           	opt callstack 0
   387                           
   388                           ; 16 bytes @ 0x1C
   389  0000C0                     	ds	16
   390  0000D0                     Color_Read@ans:
   391                           	opt callstack 0
   392  0000D0                     Color@ans:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x2C
   396  0000D0                     	ds	2
   397  0000D2                     Color_Read@i:
   398                           	opt callstack 0
   399  0000D2                     Color@i:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x2E
   403  0000D2                     	ds	2
   404  0000D4                     ??_main:
   405                           
   406                           ; 1 bytes @ 0x30
   407  0000D4                     	ds	2
   408                           
   409                           	psect	cstackCOMRAM
   410  000001                     __pcstackCOMRAM:
   411                           	opt callstack 0
   412  000001                     ??_I2C_IdleCheck:
   413  000001                     ?_strlen:
   414                           	opt callstack 0
   415  000001                     ?_isupper:
   416                           	opt callstack 0
   417  000001                     ?_isalpha:
   418                           	opt callstack 0
   419  000001                     ?_isdigit:
   420                           	opt callstack 0
   421  000001                     ?_isspace:
   422                           	opt callstack 0
   423  000001                     ?_islower:
   424                           	opt callstack 0
   425  000001                     ?___wmul:
   426                           	opt callstack 0
   427  000001                     Wait10ms@num:
   428                           	opt callstack 0
   429  000001                     InitI2C_Master@speed:
   430                           	opt callstack 0
   431  000001                     ___wmul@multiplier:
   432                           	opt callstack 0
   433  000001                     isalpha@c:
   434                           	opt callstack 0
   435  000001                     isdigit@c:
   436                           	opt callstack 0
   437  000001                     isspace@c:
   438                           	opt callstack 0
   439  000001                     isupper@c:
   440                           	opt callstack 0
   441  000001                     fputc@c:
   442                           	opt callstack 0
   443  000001                     strlen@s:
   444                           	opt callstack 0
   445  000001                     islower@c:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x0
   449  000001                     	ds	1
   450  000002                     I2C_IdleCheck@mask:
   451                           	opt callstack 0
   452                           
   453                           ; 1 bytes @ 0x1
   454  000002                     	ds	1
   455  000003                     ??_I2C_Send:
   456  000003                     ??_isupper:
   457  000003                     ??_isalpha:
   458  000003                     ??_isdigit:
   459  000003                     ??_isspace:
   460  000003                     ??_islower:
   461  000003                     ??_Wait10ms:
   462  000003                     ?_I2C_Start:
   463                           	opt callstack 0
   464  000003                     ?_I2C_rStart:
   465                           	opt callstack 0
   466  000003                     ?_I2C_Receive:
   467                           	opt callstack 0
   468  000003                     I2C_Start@adrs:
   469                           	opt callstack 0
   470  000003                     I2C_rStart@adrs:
   471                           	opt callstack 0
   472  000003                     I2C_Receive@ack:
   473                           	opt callstack 0
   474  000003                     ___wmul@multiplicand:
   475                           	opt callstack 0
   476  000003                     fputc@fp:
   477                           	opt callstack 0
   478  000003                     strlen@a:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x2
   482  000003                     	ds	1
   483  000004                     I2C_Send@dt:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0x3
   487  000004                     	ds	1
   488  000005                     ??_fputc:
   489  000005                     I2C_Start@rw:
   490                           	opt callstack 0
   491  000005                     I2C_rStart@rw:
   492                           	opt callstack 0
   493  000005                     I2C_Receive@dt:
   494                           	opt callstack 0
   495  000005                     ___wmul@product:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x4
   499  000005                     	ds	2
   500  000007                     ??_I2C_Start:
   501  000007                     ??_I2C_rStart:
   502  000007                     ?_toupper:
   503                           	opt callstack 0
   504  000007                     _isspace$1671:
   505                           	opt callstack 0
   506  000007                     toupper@c:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x6
   510  000007                     	ds	1
   511  000008                     ?_atoi:
   512                           	opt callstack 0
   513  000008                     LCD_Command@ans:
   514                           	opt callstack 0
   515  000008                     LCD_Puts@s:
   516                           	opt callstack 0
   517  000008                     atoi@s:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x7
   521  000008                     	ds	1
   522  000009                     ??_toupper:
   523                           
   524                           ; 1 bytes @ 0x8
   525  000009                     	ds	1
   526  00000A                     ??_LCD_Puts:
   527  00000A                     ??_atoi:
   528  00000A                     LCD_Command@c:
   529                           	opt callstack 0
   530  00000A                     fputs@s:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x9
   534  00000A                     	ds	1
   535  00000B                     ??_LCD_Clear:
   536  00000B                     LCD_SetCursor@col:
   537                           	opt callstack 0
   538  00000B                     LCD_Puts@ans:
   539                           	opt callstack 0
   540  00000B                     LCD_Init_ST7032i@icon:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0xA
   544  00000B                     	ds	1
   545  00000C                     fputs@fp:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0xB
   549  00000C                     	ds	1
   550  00000D                     LCD_SetCursor@row:
   551                           	opt callstack 0
   552  00000D                     LCD_Init_ST7032i@contrast:
   553                           	opt callstack 0
   554  00000D                     _toupper$1747:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0xC
   558  00000D                     	ds	1
   559  00000E                     fputs@c:
   560                           	opt callstack 0
   561  00000E                     atoi@neg:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0xD
   565  00000E                     	ds	1
   566  00000F                     LCD_Init_ST7032i@bon:
   567                           	opt callstack 0
   568  00000F                     fputs@i:
   569                           	opt callstack 0
   570  00000F                     LCD_SetCursor@row_offsets:
   571                           	opt callstack 0
   572                           
   573                           ; 4 bytes @ 0xE
   574  00000F                     	ds	1
   575  000010                     _atoi$1644:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0xF
   579  000010                     	ds	1
   580  000011                     ?_pad:
   581                           	opt callstack 0
   582  000011                     LCD_Init_ST7032i@colsu:
   583                           	opt callstack 0
   584  000011                     pad@fp:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x10
   588  000011                     	ds	1
   589  000012                     _atoi$1646:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x11
   593  000012                     	ds	1
   594  000013                     ??_LCD_Init_ST7032i:
   595  000013                     pad@buf:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x12
   599  000013                     	ds	1
   600  000014                     _atoi$1645:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x13
   604  000014                     	ds	1
   605  000015                     pad@p:
   606                           	opt callstack 0
   607  000015                     atoi@n:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x14
   611  000015                     	ds	1
   612  000016                     LCD_Init_ST7032i@d:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x15
   616  000016                     	ds	1
   617  000017                     ??_pad:
   618                           
   619                           ; 1 bytes @ 0x16
   620  000017                     	ds	1
   621  000018                     pad@i:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x17
   625  000018                     	ds	2
   626  00001A                     pad@w:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0x19
   630  00001A                     	ds	2
   631  00001C                     ?_xtoa:
   632                           	opt callstack 0
   633  00001C                     xtoa@fp:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x1B
   637  00001C                     	ds	2
   638  00001E                     xtoa@d:
   639                           	opt callstack 0
   640                           
   641                           ; 8 bytes @ 0x1D
   642  00001E                     	ds	8
   643  000026                     xtoa@x:
   644                           	opt callstack 0
   645                           
   646                           ; 1 bytes @ 0x25
   647  000026                     	ds	1
   648  000027                     ??_xtoa:
   649                           
   650                           ; 1 bytes @ 0x26
   651  000027                     	ds	8
   652  00002F                     _xtoa$1173:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x2E
   656  00002F                     	ds	2
   657  000031                     _xtoa$1174:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x30
   661  000031                     	ds	2
   662  000033                     xtoa@p:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x32
   666  000033                     	ds	2
   667  000035                     xtoa@w:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x34
   671  000035                     	ds	2
   672  000037                     xtoa@n:
   673                           	opt callstack 0
   674                           
   675                           ; 8 bytes @ 0x36
   676  000037                     	ds	8
   677  00003F                     xtoa@i:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0x3E
   681  00003F                     	ds	2
   682  000041                     xtoa@c:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x40
   686  000041                     	ds	2
   687  000043                     ?_vfpfcnvrt:
   688                           	opt callstack 0
   689  000043                     vfpfcnvrt@fp:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x42
   693  000043                     	ds	2
   694  000045                     vfpfcnvrt@fmt:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x44
   698  000045                     	ds	2
   699  000047                     vfpfcnvrt@ap:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x46
   703  000047                     	ds	2
   704  000049                     ??_vfpfcnvrt:
   705                           
   706                           ; 1 bytes @ 0x48
   707  000049                     	ds	4
   708  00004D                     vfpfcnvrt@llu:
   709                           	opt callstack 0
   710                           
   711                           ; 8 bytes @ 0x4C
   712  00004D                     	ds	8
   713  000055                     vfpfcnvrt@c:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x54
   717  000055                     	ds	1
   718  000056                     vfpfcnvrt@done:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0x55
   722  000056                     	ds	2
   723  000058                     _vfpfcnvrt$1189:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x57
   727  000058                     	ds	2
   728  00005A                     
   729                           ; 1 bytes @ 0x59
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   732 ;;
   733 ;; *************** function _main *****************
   734 ;; Defined at:
   735 ;;		line 70 in file "main.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  buf            16    0        unsigned char [16]
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1
   749 ;;      Params:         0       0       0
   750 ;;      Locals:         0       0       0
   751 ;;      Temps:          0       2       0
   752 ;;      Totals:         0       2       0
   753 ;;Total ram usage:        2 bytes
   754 ;; Hardware stack levels required when called:   10
   755 ;; This function calls:
   756 ;;		_Color
   757 ;;		_Color_Read
   758 ;;		_InitI2C_Master
   759 ;;		_LCD_Clear
   760 ;;		_LCD_Command
   761 ;;		_LCD_Init_ST7032i
   762 ;;		_LCD_Puts
   763 ;;		_LCD_SetCursor
   764 ;;		_SYSTEM_Initialize
   765 ;; This function is called by:
   766 ;;		Startup code after reset
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text0
   771  000F34                     __ptext0:
   772                           	opt callstack 0
   773  000F34                     _main:
   774                           	opt callstack 21
   775                           
   776                           ;main.c: 73:     SYSTEM_Initialize();
   777                           
   778                           ;incstack = 0
   779  000F34  ECF4  F00C         	call	_SYSTEM_Initialize	;wreg free
   780                           
   781                           ;main.c: 80:     (INTCONbits.GIE = 1);
   782  000F38  8EF2               	bsf	4082,7,c	;volatile
   783                           
   784                           ;main.c: 86:     (INTCONbits.PEIE = 1);
   785  000F3A  8CF2               	bsf	4082,6,c	;volatile
   786                           
   787                           ;main.c: 90:      LATBbits.LATB7 = 0;
   788  000F3C  9E8A               	bcf	3978,7,c	;volatile
   789                           
   790                           ;main.c: 91:     InitI2C_Master(0);
   791  000F3E  0E00               	movlw	0
   792  000F40  6E02               	movwf	InitI2C_Master@speed+1,c
   793  000F42  0E00               	movlw	0
   794  000F44  6E01               	movwf	InitI2C_Master@speed,c
   795  000F46  EC85  F00C         	call	_InitI2C_Master	;wreg free
   796                           
   797                           ;main.c: 92:     LCD_Init_ST7032i(0,50,1,16);
   798  000F4A  0E00               	movlw	0
   799  000F4C  6E0C               	movwf	LCD_Init_ST7032i@icon+1,c
   800  000F4E  0E00               	movlw	0
   801  000F50  6E0B               	movwf	LCD_Init_ST7032i@icon,c
   802  000F52  0E00               	movlw	0
   803  000F54  6E0E               	movwf	LCD_Init_ST7032i@contrast+1,c
   804  000F56  0E32               	movlw	50
   805  000F58  6E0D               	movwf	LCD_Init_ST7032i@contrast,c
   806  000F5A  0E00               	movlw	0
   807  000F5C  6E10               	movwf	LCD_Init_ST7032i@bon+1,c
   808  000F5E  0E01               	movlw	1
   809  000F60  6E0F               	movwf	LCD_Init_ST7032i@bon,c
   810  000F62  0E00               	movlw	0
   811  000F64  6E12               	movwf	LCD_Init_ST7032i@colsu+1,c
   812  000F66  0E10               	movlw	16
   813  000F68  6E11               	movwf	LCD_Init_ST7032i@colsu,c
   814  000F6A  ECE8  F008         	call	_LCD_Init_ST7032i	;wreg free
   815                           
   816                           ;main.c: 93:      LATBbits.LATB7 = 1;
   817  000F6E  8E8A               	bsf	3978,7,c	;volatile
   818                           
   819                           ;main.c: 96:         LATBbits.LATB7 = ~LATBbits.LATB7;
   820  000F70  AE8A               	btfss	3978,7,c	;volatile
   821  000F72  D002               	goto	u2900
   822  000F74  0E01               	movlw	1
   823  000F76  D001               	goto	u2906
   824  000F78                     u2900:
   825  000F78  0E00               	movlw	0
   826  000F7A                     u2906:
   827  000F7A  0AFF               	xorlw	255
   828  000F7C  0100               	movlb	0	; () banked
   829  000F7E  6FD4               	movwf	??_main& (0+255),b
   830  000F80  33D4               	rrcf	??_main& (0+255),f,b
   831  000F82  33D4               	rrcf	??_main& (0+255),f,b
   832  000F84  508A               	movf	3978,w,c	;volatile
   833  000F86  19D4               	xorwf	??_main& (0+255),w,b
   834  000F88  0B7F               	andlw	-129
   835  000F8A  19D4               	xorwf	??_main& (0+255),w,b
   836  000F8C  6E8A               	movwf	3978,c	;volatile
   837                           
   838                           ; BSR set to: 0
   839                           ;main.c: 97:         LCD_Clear() ;
   840  000F8E  ECF7  F00B         	call	_LCD_Clear	;wreg free
   841                           
   842                           ;main.c: 98:         _delay((unsigned long)((100)*(16000000/4000.0)));
   843  000F92  0E03               	movlw	3
   844  000F94  0100               	movlb	0	; () banked
   845  000F96  6FD5               	movwf	(??_main+1)& (0+255),b
   846  000F98  0E08               	movlw	8
   847  000F9A  6FD4               	movwf	??_main& (0+255),b
   848  000F9C  0E77               	movlw	119
   849  000F9E                     u3007:
   850  000F9E  2EE8               	decfsz	wreg,f,c
   851  000FA0  D7FE               	bra	u3007
   852  000FA2  2FD4               	decfsz	??_main& (0+255),f,b
   853  000FA4  D7FC               	bra	u3007
   854  000FA6  2FD5               	decfsz	(??_main+1)& (0+255),f,b
   855  000FA8  D7FA               	bra	u3007
   856                           
   857                           ;main.c: 99:         LCD_SetCursor(0,0);
   858  000FAA  0E00               	movlw	0
   859  000FAC  6E0C               	movwf	LCD_SetCursor@col+1,c
   860  000FAE  0E00               	movlw	0
   861  000FB0  6E0B               	movwf	LCD_SetCursor@col,c
   862  000FB2  0E00               	movlw	0
   863  000FB4  6E0E               	movwf	LCD_SetCursor@row+1,c
   864  000FB6  0E00               	movlw	0
   865  000FB8  6E0D               	movwf	LCD_SetCursor@row,c
   866  000FBA  EC59  F00C         	call	_LCD_SetCursor	;wreg free
   867                           
   868                           ;main.c: 100:         _delay((unsigned long)((100)*(16000000/4000.0)));
   869  000FBE  0E03               	movlw	3
   870  000FC0  0100               	movlb	0	; () banked
   871  000FC2  6FD5               	movwf	(??_main+1)& (0+255),b
   872  000FC4  0E08               	movlw	8
   873  000FC6  6FD4               	movwf	??_main& (0+255),b
   874  000FC8  0E77               	movlw	119
   875  000FCA                     u3017:
   876  000FCA  2EE8               	decfsz	wreg,f,c
   877  000FCC  D7FE               	bra	u3017
   878  000FCE  2FD4               	decfsz	??_main& (0+255),f,b
   879  000FD0  D7FC               	bra	u3017
   880  000FD2  2FD5               	decfsz	(??_main+1)& (0+255),f,b
   881  000FD4  D7FA               	bra	u3017
   882                           
   883                           ;main.c: 101:         LCD_Puts(moji);
   884  000FD6  0EDA               	movlw	low _moji
   885  000FD8  6E08               	movwf	LCD_Puts@s,c
   886  000FDA  0E00               	movlw	high _moji
   887  000FDC  6E09               	movwf	LCD_Puts@s+1,c
   888  000FDE  EC69  F00A         	call	_LCD_Puts	;wreg free
   889                           
   890                           ;main.c: 102:         _delay((unsigned long)((1000)*(16000000/4000.0)));
   891  000FE2  0E15               	movlw	21
   892  000FE4  0100               	movlb	0	; () banked
   893  000FE6  6FD5               	movwf	(??_main+1)& (0+255),b
   894  000FE8  0E4B               	movlw	75
   895  000FEA  6FD4               	movwf	??_main& (0+255),b
   896  000FEC  0EBE               	movlw	190
   897  000FEE                     u3027:
   898  000FEE  2EE8               	decfsz	wreg,f,c
   899  000FF0  D7FE               	bra	u3027
   900  000FF2  2FD4               	decfsz	??_main& (0+255),f,b
   901  000FF4  D7FC               	bra	u3027
   902  000FF6  2FD5               	decfsz	(??_main+1)& (0+255),f,b
   903  000FF8  D7FA               	bra	u3027
   904  000FFA  F000               	nop	
   905                           
   906                           ;main.c: 103:         LCD_SetCursor(0,1);
   907  000FFC  0E00               	movlw	0
   908  000FFE  6E0C               	movwf	LCD_SetCursor@col+1,c
   909  001000  0E00               	movlw	0
   910  001002  6E0B               	movwf	LCD_SetCursor@col,c
   911  001004  0E00               	movlw	0
   912  001006  6E0E               	movwf	LCD_SetCursor@row+1,c
   913  001008  0E01               	movlw	1
   914  00100A  6E0D               	movwf	LCD_SetCursor@row,c
   915  00100C  EC59  F00C         	call	_LCD_SetCursor	;wreg free
   916                           
   917                           ;main.c: 104:         _delay((unsigned long)((40)*(16000000/4000.0)));
   918  001010  0ED0               	movlw	208
   919  001012  0100               	movlb	0	; () banked
   920  001014  6FD4               	movwf	??_main& (0+255),b
   921  001016  0EC9               	movlw	201
   922  001018                     u3037:
   923  001018  2EE8               	decfsz	wreg,f,c
   924  00101A  D7FE               	bra	u3037
   925  00101C  2FD4               	decfsz	??_main& (0+255),f,b
   926  00101E  D7FC               	bra	u3037
   927  001020  D000               	nop2	
   928                           
   929                           ;main.c: 105:         LCD_Puts(moji2);
   930  001022  0EEB               	movlw	low _moji2
   931  001024  6E08               	movwf	LCD_Puts@s,c
   932  001026  0E00               	movlw	high _moji2
   933  001028  6E09               	movwf	LCD_Puts@s+1,c
   934  00102A  EC69  F00A         	call	_LCD_Puts	;wreg free
   935                           
   936                           ;main.c: 106:         _delay((unsigned long)((1000)*(16000000/4000.0)));
   937  00102E  0E15               	movlw	21
   938  001030  0100               	movlb	0	; () banked
   939  001032  6FD5               	movwf	(??_main+1)& (0+255),b
   940  001034  0E4B               	movlw	75
   941  001036  6FD4               	movwf	??_main& (0+255),b
   942  001038  0EBE               	movlw	190
   943  00103A                     u3047:
   944  00103A  2EE8               	decfsz	wreg,f,c
   945  00103C  D7FE               	bra	u3047
   946  00103E  2FD4               	decfsz	??_main& (0+255),f,b
   947  001040  D7FC               	bra	u3047
   948  001042  2FD5               	decfsz	(??_main+1)& (0+255),f,b
   949  001044  D7FA               	bra	u3047
   950  001046  F000               	nop	
   951                           
   952                           ;main.c: 107:         LCD_Command(0x01);
   953  001048  0E01               	movlw	1
   954  00104A  ECA3  F00B         	call	_LCD_Command
   955                           
   956                           ;main.c: 108:         _delay((unsigned long)((200)*(16000000/4000.0)));
   957  00104E  0E05               	movlw	5
   958  001050  0100               	movlb	0	; () banked
   959  001052  6FD5               	movwf	(??_main+1)& (0+255),b
   960  001054  0E0F               	movlw	15
   961  001056  6FD4               	movwf	??_main& (0+255),b
   962  001058  0EF1               	movlw	241
   963  00105A                     u3057:
   964  00105A  2EE8               	decfsz	wreg,f,c
   965  00105C  D7FE               	bra	u3057
   966  00105E  2FD4               	decfsz	??_main& (0+255),f,b
   967  001060  D7FC               	bra	u3057
   968  001062  2FD5               	decfsz	(??_main+1)& (0+255),f,b
   969  001064  D7FA               	bra	u3057
   970                           
   971                           ;main.c: 110:         Color();
   972  001066  EC13  F001         	call	_Color	;wreg free
   973  00106A                     l4109:
   974                           
   975                           ;main.c: 113:             Color_Read();
   976  00106A  EC2A  F003         	call	_Color_Read	;wreg free
   977                           
   978                           ;main.c: 114:             if(c[0]>=0x0300){
   979  00106E  0E03               	movlw	3
   980  001070  0100               	movlb	0	; () banked
   981  001072  5D61               	subwf	(_c+1)& (0+255),w,b
   982  001074  A0D8               	btfss	status,0,c
   983  001076  D002               	goto	l4113
   984                           
   985                           ; BSR set to: 0
   986                           
   987                           ;main.c: 115:                 do { LATBbits.LATB7 = 1; } while(0);
   988  001078  8E8A               	bsf	3978,7,c	;volatile
   989                           
   990                           ;main.c: 116:                 do { LATCbits.LATC7 = 0; } while(0);
   991  00107A  D008               	goto	l286
   992  00107C                     l4113:
   993                           
   994                           ; BSR set to: 0
   995  00107C  0E03               	movlw	3
   996  00107E  5D65               	subwf	(_c+5)& (0+255),w,b
   997  001080  A0D8               	btfss	status,0,c
   998  001082  D003               	goto	l284
   999                           
  1000                           ; BSR set to: 0
  1001                           
  1002                           ;main.c: 119:                 do { LATCbits.LATC7 = 1; } while(0);
  1003  001084  8E8B               	bsf	3979,7,c	;volatile
  1004                           
  1005                           ; BSR set to: 0
  1006                           
  1007                           ;main.c: 120:                 do { LATBbits.LATB7 = 0; } while(0);
  1008  001086  9E8A               	bcf	3978,7,c	;volatile
  1009  001088  D7F0               	goto	l4109
  1010  00108A                     l284:
  1011                           
  1012                           ; BSR set to: 0
  1013  00108A  9E8A               	bcf	3978,7,c	;volatile
  1014  00108C                     l286:
  1015                           
  1016                           ; BSR set to: 0
  1017  00108C  9E8B               	bcf	3979,7,c	;volatile
  1018  00108E  D7ED               	goto	l4109
  1019  001090                     __end_of_main:
  1020                           	opt callstack 0
  1021                           
  1022 ;; *************** function _SYSTEM_Initialize *****************
  1023 ;; Defined at:
  1024 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1
  1038 ;;      Params:         0       0       0
  1039 ;;      Locals:         0       0       0
  1040 ;;      Temps:          0       0       0
  1041 ;;      Totals:         0       0       0
  1042 ;;Total ram usage:        0 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    2
  1045 ;; This function calls:
  1046 ;;		_INTERRUPT_Initialize
  1047 ;;		_OSCILLATOR_Initialize
  1048 ;;		_PIN_MANAGER_Initialize
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text1
  1055  0019E8                     __ptext1:
  1056                           	opt callstack 0
  1057  0019E8                     _SYSTEM_Initialize:
  1058                           	opt callstack 28
  1059                           
  1060                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;incstack = 0
  1064  0019E8  EC07  F00D         	call	_INTERRUPT_Initialize	;wreg free
  1065                           
  1066                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1067  0019EC  EC70  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  1068                           
  1069                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1070  0019F0  ECFB  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  1071  0019F4  0012               	return		;funcret
  1072  0019F6                     __end_of_SYSTEM_Initialize:
  1073                           	opt callstack 0
  1074                           
  1075 ;; *************** function _PIN_MANAGER_Initialize *****************
  1076 ;; Defined at:
  1077 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1
  1091 ;;      Params:         0       0       0
  1092 ;;      Locals:         0       0       0
  1093 ;;      Temps:          0       0       0
  1094 ;;      Totals:         0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_SYSTEM_Initialize
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text2
  1106  0018E0                     __ptext2:
  1107                           	opt callstack 0
  1108  0018E0                     _PIN_MANAGER_Initialize:
  1109                           	opt callstack 28
  1110                           
  1111                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1112                           
  1113                           ;incstack = 0
  1114  0018E0  0E00               	movlw	0
  1115  0018E2  6E89               	movwf	3977,c	;volatile
  1116                           
  1117                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1118  0018E4  0E00               	movlw	0
  1119  0018E6  6E8A               	movwf	3978,c	;volatile
  1120                           
  1121                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1122  0018E8  0E00               	movlw	0
  1123  0018EA  6E8B               	movwf	3979,c	;volatile
  1124                           
  1125                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  1126  0018EC  0E37               	movlw	55
  1127  0018EE  6E92               	movwf	3986,c	;volatile
  1128                           
  1129                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  1130  0018F0  0E70               	movlw	112
  1131  0018F2  6E93               	movwf	3987,c	;volatile
  1132                           
  1133                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x7F;
  1134  0018F4  0E7F               	movlw	127
  1135  0018F6  6E94               	movwf	3988,c	;volatile
  1136                           
  1137                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0xFF;
  1138  0018F8  687E               	setf	3966,c	;volatile
  1139                           
  1140                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x09;
  1141  0018FA  0E09               	movlw	9
  1142  0018FC  6E7F               	movwf	3967,c	;volatile
  1143                           
  1144                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x50;
  1145  0018FE  0E50               	movlw	80
  1146  001900  6E78               	movwf	3960,c	;volatile
  1147                           
  1148                           ;mcc_generated_files/pin_manager.c: 81:     WPUA = 0x00;
  1149  001902  0E00               	movlw	0
  1150  001904  6E77               	movwf	3959,c	;volatile
  1151                           
  1152                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 0;
  1153  001906  9EF1               	bcf	4081,7,c	;volatile
  1154  001908  0012               	return		;funcret
  1155  00190A                     __end_of_PIN_MANAGER_Initialize:
  1156                           	opt callstack 0
  1157                           
  1158 ;; *************** function _OSCILLATOR_Initialize *****************
  1159 ;; Defined at:
  1160 ;;		line 58 in file "mcc_generated_files/mcc.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1
  1174 ;;      Params:         0       0       0
  1175 ;;      Locals:         0       0       0
  1176 ;;      Temps:          0       0       0
  1177 ;;      Totals:         0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_SYSTEM_Initialize
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text3
  1189  0019F6                     __ptext3:
  1190                           	opt callstack 0
  1191  0019F6                     _OSCILLATOR_Initialize:
  1192                           	opt callstack 28
  1193                           
  1194                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  1195                           
  1196                           ;incstack = 0
  1197  0019F6  0E70               	movlw	112
  1198  0019F8  6ED3               	movwf	4051,c	;volatile
  1199                           
  1200                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x04;
  1201  0019FA  0E04               	movlw	4
  1202  0019FC  6ED2               	movwf	4050,c	;volatile
  1203                           
  1204                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  1205  0019FE  0E00               	movlw	0
  1206  001A00  6E9B               	movwf	3995,c	;volatile
  1207  001A02  0012               	return		;funcret
  1208  001A04                     __end_of_OSCILLATOR_Initialize:
  1209                           	opt callstack 0
  1210                           
  1211 ;; *************** function _INTERRUPT_Initialize *****************
  1212 ;; Defined at:
  1213 ;;		line 55 in file "mcc_generated_files/interrupt_manager.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		None
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1
  1227 ;;      Params:         0       0       0
  1228 ;;      Locals:         0       0       0
  1229 ;;      Temps:          0       0       0
  1230 ;;      Totals:         0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_SYSTEM_Initialize
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text4
  1242  001A0E                     __ptext4:
  1243                           	opt callstack 0
  1244  001A0E                     _INTERRUPT_Initialize:
  1245                           	opt callstack 28
  1246                           
  1247                           ;mcc_generated_files/interrupt_manager.c: 58:     RCONbits.IPEN = 0;
  1248                           
  1249                           ;incstack = 0
  1250  001A0E  9ED0               	bcf	4048,7,c	;volatile
  1251  001A10  0012               	return		;funcret
  1252  001A12                     __end_of_INTERRUPT_Initialize:
  1253                           	opt callstack 0
  1254                           
  1255 ;; *************** function _LCD_Init_ST7032i *****************
  1256 ;; Defined at:
  1257 ;;		line 329 in file "skI2CLCDlib.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  icon            2   10[COMRAM] int 
  1260 ;;  contrast        2   12[COMRAM] int 
  1261 ;;  bon             2   14[COMRAM] int 
  1262 ;;  colsu           2   16[COMRAM] int 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  d               2   21[COMRAM] unsigned int 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1
  1274 ;;      Params:         8       0       0
  1275 ;;      Locals:         2       0       0
  1276 ;;      Temps:          3       0       0
  1277 ;;      Totals:        13       0       0
  1278 ;;Total ram usage:       13 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    4
  1281 ;; This function calls:
  1282 ;;		_LCD_Command
  1283 ;;		_Wait10ms
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text5
  1290  0011D0                     __ptext5:
  1291                           	opt callstack 0
  1292  0011D0                     _LCD_Init_ST7032i:
  1293                           	opt callstack 26
  1294                           
  1295                           ;skI2CLCDlib.c: 329: void LCD_Init_ST7032i(int icon, int contrast, int bon, int colsu);s
      +                          kI2CLCDlib.c: 330: {;skI2CLCDlib.c: 331:      unsigned int d ;;skI2CLCDlib.c: 332:      
      +                          _delay((unsigned long)((400)*(16000000/4000.0)));
  1296                           
  1297                           ;incstack = 0
  1298  0011D0  0E09               	movlw	9
  1299  0011D2  6E14               	movwf	(??_LCD_Init_ST7032i+1)& (0+255),c
  1300  0011D4  0E1E               	movlw	30
  1301  0011D6  6E13               	movwf	??_LCD_Init_ST7032i& (0+255),c
  1302  0011D8  0EE4               	movlw	228
  1303  0011DA                     u3067:
  1304  0011DA  2EE8               	decfsz	wreg,f,c
  1305  0011DC  D7FE               	bra	u3067
  1306  0011DE  2E13               	decfsz	??_LCD_Init_ST7032i& (0+255),f,c
  1307  0011E0  D7FC               	bra	u3067
  1308  0011E2  2E14               	decfsz	(??_LCD_Init_ST7032i+1)& (0+255),f,c
  1309  0011E4  D7FA               	bra	u3067
  1310  0011E6  D000               	nop2	
  1311                           
  1312                           ;skI2CLCDlib.c: 333:      LCD_ColumnSu = colsu ;
  1313  0011E8  C011  F05A         	movff	LCD_Init_ST7032i@colsu,_LCD_ColumnSu
  1314  0011EC  C012  F05B         	movff	LCD_Init_ST7032i@colsu+1,_LCD_ColumnSu+1
  1315                           
  1316                           ;skI2CLCDlib.c: 334:      Wait10ms(4) ;
  1317  0011F0  0E00               	movlw	0
  1318  0011F2  6E02               	movwf	Wait10ms@num+1,c
  1319  0011F4  0E04               	movlw	4
  1320  0011F6  6E01               	movwf	Wait10ms@num,c
  1321  0011F8  ECD1  F00C         	call	_Wait10ms	;wreg free
  1322                           
  1323                           ;skI2CLCDlib.c: 335:      FuncSet_DT = 0x38 ;
  1324  0011FC  0E00               	movlw	0
  1325  0011FE  0100               	movlb	0	; () banked
  1326  001200  6F7B               	movwf	(_FuncSet_DT+1)& (0+255),b
  1327  001202  0E38               	movlw	56
  1328  001204  6F7A               	movwf	_FuncSet_DT& (0+255),b
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;skI2CLCDlib.c: 336:      LCD_Command(FuncSet_DT);
  1332  001206  517A               	movf	_FuncSet_DT& (0+255),w,b
  1333  001208  ECA3  F00B         	call	_LCD_Command
  1334                           
  1335                           ;skI2CLCDlib.c: 337:      LCD_Command(0x39) ;
  1336  00120C  0E39               	movlw	57
  1337  00120E  ECA3  F00B         	call	_LCD_Command
  1338                           
  1339                           ;skI2CLCDlib.c: 338:      LCD_Command(0x14) ;
  1340  001212  0E14               	movlw	20
  1341  001214  ECA3  F00B         	call	_LCD_Command
  1342                           
  1343                           ;skI2CLCDlib.c: 339:      d = 0x70 | (contrast & 0x0F) ;
  1344  001218  0E0F               	movlw	15
  1345  00121A  140D               	andwf	LCD_Init_ST7032i@contrast,w,c
  1346  00121C  6E13               	movwf	??_LCD_Init_ST7032i& (0+255),c
  1347  00121E  0E00               	movlw	0
  1348  001220  140E               	andwf	LCD_Init_ST7032i@contrast+1,w,c
  1349  001222  6E14               	movwf	(??_LCD_Init_ST7032i+1)& (0+255),c
  1350  001224  0E70               	movlw	112
  1351  001226  1013               	iorwf	??_LCD_Init_ST7032i,w,c
  1352  001228  6E16               	movwf	LCD_Init_ST7032i@d,c
  1353  00122A  5014               	movf	??_LCD_Init_ST7032i+1,w,c
  1354  00122C  6E17               	movwf	LCD_Init_ST7032i@d+1,c
  1355                           
  1356                           ;skI2CLCDlib.c: 340:      LCD_Command(d) ;
  1357  00122E  5016               	movf	LCD_Init_ST7032i@d,w,c
  1358  001230  ECA3  F00B         	call	_LCD_Command
  1359                           
  1360                           ;skI2CLCDlib.c: 341:      d = 0x50 | ((contrast & 0x30) >> 4) ;
  1361  001234  C00D  F013         	movff	LCD_Init_ST7032i@contrast,??_LCD_Init_ST7032i
  1362  001238  C00E  F014         	movff	LCD_Init_ST7032i@contrast+1,??_LCD_Init_ST7032i+1
  1363  00123C  0E04               	movlw	4
  1364  00123E  6E15               	movwf	(??_LCD_Init_ST7032i+2)& (0+255),c
  1365  001240                     u1925:
  1366  001240  3414               	rlcf	??_LCD_Init_ST7032i+1,w,c
  1367  001242  3214               	rrcf	??_LCD_Init_ST7032i+1,f,c
  1368  001244  3213               	rrcf	??_LCD_Init_ST7032i,f,c
  1369  001246  2E15               	decfsz	(??_LCD_Init_ST7032i+2)& (0+255),f,c
  1370  001248  D7FB               	goto	u1925
  1371  00124A  0E03               	movlw	3
  1372  00124C  1613               	andwf	??_LCD_Init_ST7032i,f,c
  1373  00124E  0E00               	movlw	0
  1374  001250  1614               	andwf	??_LCD_Init_ST7032i+1,f,c
  1375  001252  0E50               	movlw	80
  1376  001254  1013               	iorwf	??_LCD_Init_ST7032i,w,c
  1377  001256  6E16               	movwf	LCD_Init_ST7032i@d,c
  1378  001258  5014               	movf	??_LCD_Init_ST7032i+1,w,c
  1379  00125A  6E17               	movwf	LCD_Init_ST7032i@d+1,c
  1380                           
  1381                           ;skI2CLCDlib.c: 342:      if (icon == 1) d = d | 0x08 ;
  1382  00125C  040B               	decf	LCD_Init_ST7032i@icon,w,c
  1383  00125E  100C               	iorwf	LCD_Init_ST7032i@icon+1,w,c
  1384  001260  A4D8               	btfss	status,2,c
  1385  001262  D005               	goto	l395
  1386  001264  0E08               	movlw	8
  1387  001266  1016               	iorwf	LCD_Init_ST7032i@d,w,c
  1388  001268  6E16               	movwf	LCD_Init_ST7032i@d,c
  1389  00126A  5017               	movf	LCD_Init_ST7032i@d+1,w,c
  1390  00126C  6E17               	movwf	LCD_Init_ST7032i@d+1,c
  1391  00126E                     l395:
  1392                           
  1393                           ;skI2CLCDlib.c: 343:      if (bon == 1) d = d | 0x04 ;
  1394  00126E  040F               	decf	LCD_Init_ST7032i@bon,w,c
  1395  001270  1010               	iorwf	LCD_Init_ST7032i@bon+1,w,c
  1396  001272  A4D8               	btfss	status,2,c
  1397  001274  D005               	goto	l3067
  1398  001276  0E04               	movlw	4
  1399  001278  1016               	iorwf	LCD_Init_ST7032i@d,w,c
  1400  00127A  6E16               	movwf	LCD_Init_ST7032i@d,c
  1401  00127C  5017               	movf	LCD_Init_ST7032i@d+1,w,c
  1402  00127E  6E17               	movwf	LCD_Init_ST7032i@d+1,c
  1403  001280                     l3067:
  1404                           
  1405                           ;skI2CLCDlib.c: 344:      ContSet_DT = d ;
  1406  001280  C016  F078         	movff	LCD_Init_ST7032i@d,_ContSet_DT
  1407  001284  C017  F079         	movff	LCD_Init_ST7032i@d+1,_ContSet_DT+1
  1408                           
  1409                           ;skI2CLCDlib.c: 345:      LCD_Command(0x56) ;
  1410  001288  0E56               	movlw	86
  1411  00128A  ECA3  F00B         	call	_LCD_Command
  1412                           
  1413                           ;skI2CLCDlib.c: 346:      LCD_Command(0x6C) ;
  1414  00128E  0E6C               	movlw	108
  1415  001290  ECA3  F00B         	call	_LCD_Command
  1416                           
  1417                           ;skI2CLCDlib.c: 347:      Wait10ms(20) ;
  1418  001294  0E00               	movlw	0
  1419  001296  6E02               	movwf	Wait10ms@num+1,c
  1420  001298  0E14               	movlw	20
  1421  00129A  6E01               	movwf	Wait10ms@num,c
  1422  00129C  ECD1  F00C         	call	_Wait10ms	;wreg free
  1423                           
  1424                           ;skI2CLCDlib.c: 348:      LCD_Command(FuncSet_DT);
  1425  0012A0  0100               	movlb	0	; () banked
  1426  0012A2  517A               	movf	_FuncSet_DT& (0+255),w,b
  1427  0012A4  ECA3  F00B         	call	_LCD_Command
  1428                           
  1429                           ;skI2CLCDlib.c: 349:      LCD_Command(0x01) ;
  1430  0012A8  0E01               	movlw	1
  1431  0012AA  ECA3  F00B         	call	_LCD_Command
  1432                           
  1433                           ;skI2CLCDlib.c: 350:      LCD_Command(0x0C) ;
  1434  0012AE  0E0C               	movlw	12
  1435  0012B0  ECA3  F00B         	call	_LCD_Command
  1436  0012B4  0012               	return		;funcret
  1437  0012B6                     __end_of_LCD_Init_ST7032i:
  1438                           	opt callstack 0
  1439                           
  1440 ;; *************** function _Wait10ms *****************
  1441 ;; Defined at:
  1442 ;;		line 48 in file "skI2CLCDlib.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  num             2    0[COMRAM] unsigned int 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1
  1456 ;;      Params:         2       0       0
  1457 ;;      Locals:         0       0       0
  1458 ;;      Temps:          1       0       0
  1459 ;;      Totals:         3       0       0
  1460 ;;Total ram usage:        3 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_LCD_Init_ST7032i
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text6
  1471  0019A2                     __ptext6:
  1472                           	opt callstack 0
  1473  0019A2                     _Wait10ms:
  1474                           	opt callstack 28
  1475                           
  1476                           ;skI2CLCDlib.c: 51:           _delay((unsigned long)((10)*(16000000/4000.0))) ;
  1477                           
  1478                           ;incstack = 0
  1479                           ;skI2CLCDlib.c: 48: void Wait10ms(unsigned int num);skI2CLCDlib.c: 49: {;skI2CLCDlib.c: 
      +                          50:      do {
  1480  0019A2  0E34               	movlw	52
  1481  0019A4  6E03               	movwf	??_Wait10ms& (0+255),c
  1482  0019A6  0EF2               	movlw	242
  1483  0019A8                     u3077:
  1484  0019A8  2EE8               	decfsz	wreg,f,c
  1485  0019AA  D7FE               	bra	u3077
  1486  0019AC  2E03               	decfsz	??_Wait10ms& (0+255),f,c
  1487  0019AE  D7FC               	bra	u3077
  1488                           
  1489                           ;skI2CLCDlib.c: 52:      } while(--num != 0);
  1490  0019B0  0601               	decf	Wait10ms@num,f,c
  1491  0019B2  A0D8               	btfss	status,0,c
  1492  0019B4  0602               	decf	Wait10ms@num+1,f,c
  1493  0019B6  5001               	movf	Wait10ms@num,w,c
  1494  0019B8  1002               	iorwf	Wait10ms@num+1,w,c
  1495  0019BA  B4D8               	btfsc	status,2,c
  1496  0019BC  0012               	return	
  1497  0019BE  D7F1               	goto	_Wait10ms
  1498  0019C0                     __end_of_Wait10ms:
  1499                           	opt callstack 0
  1500                           
  1501 ;; *************** function _InitI2C_Master *****************
  1502 ;; Defined at:
  1503 ;;		line 78 in file "skI2Clib.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  speed           2    0[COMRAM] int 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1
  1517 ;;      Params:         2       0       0
  1518 ;;      Locals:         0       0       0
  1519 ;;      Temps:          0       0       0
  1520 ;;      Totals:         2       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text7
  1532  00190A                     __ptext7:
  1533                           	opt callstack 0
  1534  00190A                     _InitI2C_Master:
  1535                           	opt callstack 29
  1536                           
  1537                           ;skI2Clib.c: 78: void InitI2C_Master(int speed);skI2Clib.c: 79: {;skI2Clib.c: 80:     SS
      +                          PCON1= 0b00101000 ;
  1538                           
  1539                           ;incstack = 0
  1540  00190A  0E28               	movlw	40
  1541  00190C  6EC6               	movwf	4038,c	;volatile
  1542                           
  1543                           ;skI2Clib.c: 81:      SSPSTAT= 0b10000000 ;
  1544  00190E  0E80               	movlw	128
  1545  001910  6EC7               	movwf	4039,c	;volatile
  1546                           
  1547                           ;skI2Clib.c: 83:      if (speed == 0) {
  1548  001912  5001               	movf	InitI2C_Master@speed,w,c
  1549  001914  1002               	iorwf	InitI2C_Master@speed+1,w,c
  1550  001916  A4D8               	btfss	status,2,c
  1551  001918  D003               	goto	l3025
  1552                           
  1553                           ;skI2Clib.c: 84:           SSPADD = 0x27 ;
  1554  00191A  0E27               	movlw	39
  1555  00191C  6EC8               	movwf	4040,c	;volatile
  1556                           
  1557                           ;skI2Clib.c: 85:      } else {
  1558  00191E  D003               	goto	l3029
  1559  001920                     l3025:
  1560                           
  1561                           ;skI2Clib.c: 86:           SSPADD = 0x09 ;
  1562  001920  0E09               	movlw	9
  1563  001922  6EC8               	movwf	4040,c	;volatile
  1564                           
  1565                           ;skI2Clib.c: 87:           SSPSTATbits.SMP = 0 ;
  1566  001924  9EC7               	bcf	4039,7,c	;volatile
  1567  001926                     l3029:
  1568                           
  1569                           ;skI2Clib.c: 89:      SSPIE = 1 ;
  1570  001926  869D               	bsf	3997,3,c	;volatile
  1571                           
  1572                           ;skI2Clib.c: 90:      BCLIE = 1 ;
  1573  001928  86A0               	bsf	4000,3,c	;volatile
  1574                           
  1575                           ;skI2Clib.c: 91:      PEIE = 1 ;
  1576  00192A  8CF2               	bsf	4082,6,c	;volatile
  1577                           
  1578                           ;skI2Clib.c: 92:      GIE = 1 ;
  1579  00192C  8EF2               	bsf	4082,7,c	;volatile
  1580                           
  1581                           ;skI2Clib.c: 93:      SSPIF = 0 ;
  1582  00192E  969E               	bcf	3998,3,c	;volatile
  1583                           
  1584                           ;skI2Clib.c: 94:      BCLIF = 0 ;
  1585  001930  96A1               	bcf	4001,3,c	;volatile
  1586  001932  0012               	return		;funcret
  1587  001934                     __end_of_InitI2C_Master:
  1588                           	opt callstack 0
  1589                           
  1590 ;; *************** function _Color_Read *****************
  1591 ;; Defined at:
  1592 ;;		line 120 in file "skS11059-02DT.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  buf            16   28[BANK0 ] unsigned char [16]
  1597 ;;  i               2   46[BANK0 ] int 
  1598 ;;  ans             2   44[BANK0 ] int 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1
  1608 ;;      Params:         0       0       0
  1609 ;;      Locals:         0      20       0
  1610 ;;      Temps:          0       4       0
  1611 ;;      Totals:         0      24       0
  1612 ;;Total ram usage:       24 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    9
  1615 ;; This function calls:
  1616 ;;		_I2C_Receive
  1617 ;;		_I2C_Send
  1618 ;;		_I2C_Start
  1619 ;;		_I2C_Stop
  1620 ;;		_I2C_rStart
  1621 ;;		_LCD_Clear
  1622 ;;		_LCD_Puts
  1623 ;;		_LCD_SetCursor
  1624 ;;		_sprintf
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text8
  1631  000654                     __ptext8:
  1632                           	opt callstack 0
  1633  000654                     _Color_Read:
  1634                           	opt callstack 21
  1635                           
  1636                           ;skS11059-02DT.c: 122:     char buf[16];;skS11059-02DT.c: 123:     int i;;skS11059-02DT.
      +                          c: 124:     int ans ;;skS11059-02DT.c: 126:     _delay((unsigned long)((100)*(16000000/4
      +                          000.0)));
  1637                           
  1638                           ;incstack = 0
  1639  000654  0E03               	movlw	3
  1640  000656  0100               	movlb	0	; () banked
  1641  000658  6FBD               	movwf	(??_Color_Read+1)& (0+255),b
  1642  00065A  0E08               	movlw	8
  1643  00065C  6FBC               	movwf	??_Color_Read& (0+255),b
  1644  00065E  0E77               	movlw	119
  1645  000660                     u3087:
  1646  000660  2EE8               	decfsz	wreg,f,c
  1647  000662  D7FE               	bra	u3087
  1648  000664  2FBC               	decfsz	??_Color_Read& (0+255),f,b
  1649  000666  D7FC               	bra	u3087
  1650  000668  2FBD               	decfsz	(??_Color_Read+1)& (0+255),f,b
  1651  00066A  D7FA               	bra	u3087
  1652                           
  1653                           ;skS11059-02DT.c: 127:     ans =I2C_Start(0x2A,0);
  1654  00066C  0E00               	movlw	0
  1655  00066E  6E04               	movwf	I2C_Start@adrs+1,c
  1656  000670  0E2A               	movlw	42
  1657  000672  6E03               	movwf	I2C_Start@adrs,c
  1658  000674  0E00               	movlw	0
  1659  000676  6E06               	movwf	I2C_Start@rw+1,c
  1660  000678  0E00               	movlw	0
  1661  00067A  6E05               	movwf	I2C_Start@rw,c
  1662  00067C  ECF8  F009         	call	_I2C_Start	;wreg free
  1663  000680  C003  F0D0         	movff	?_I2C_Start,Color_Read@ans
  1664  000684  C004  F0D1         	movff	?_I2C_Start+1,Color_Read@ans+1
  1665                           
  1666                           ;skS11059-02DT.c: 128:     if (ans == 0) {
  1667  000688  0100               	movlb	0	; () banked
  1668  00068A  51D0               	movf	Color_Read@ans& (0+255),w,b
  1669  00068C  11D1               	iorwf	(Color_Read@ans+1)& (0+255),w,b
  1670  00068E  A4D8               	btfss	status,2,c
  1671  000690  D003               	goto	l3995
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;skS11059-02DT.c: 129:         I2C_Send(0x03);
  1675  000692  0E03               	movlw	3
  1676  000694  EC17  F00B         	call	_I2C_Send
  1677  000698                     l3995:
  1678  000698  0E00               	movlw	0
  1679  00069A  6E04               	movwf	I2C_rStart@adrs+1,c
  1680  00069C  0E2A               	movlw	42
  1681  00069E  6E03               	movwf	I2C_rStart@adrs,c
  1682  0006A0  0E00               	movlw	0
  1683  0006A2  6E06               	movwf	I2C_rStart@rw+1,c
  1684  0006A4  0E01               	movlw	1
  1685  0006A6  6E05               	movwf	I2C_rStart@rw,c
  1686  0006A8  EC31  F00A         	call	_I2C_rStart	;wreg free
  1687                           
  1688                           ;skS11059-02DT.c: 132:     i=0;
  1689  0006AC  0E00               	movlw	0
  1690  0006AE  0100               	movlb	0	; () banked
  1691  0006B0  6FD3               	movwf	(Color_Read@i+1)& (0+255),b
  1692  0006B2  0E00               	movlw	0
  1693  0006B4  6FD2               	movwf	Color_Read@i& (0+255),b
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;skS11059-02DT.c: 133:     a[i]=I2C_Receive(0);
  1697  0006B6  0E00               	movlw	0
  1698  0006B8  6E04               	movwf	I2C_Receive@ack+1,c
  1699  0006BA  0E00               	movlw	0
  1700  0006BC  6E03               	movwf	I2C_Receive@ack,c
  1701  0006BE  ECC4  F00A         	call	_I2C_Receive	;wreg free
  1702  0006C2  5003               	movf	?_I2C_Receive,w,c
  1703  0006C4  0100               	movlb	0	; () banked
  1704  0006C6  6F6C               	movwf	_a& (0+255),b
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;skS11059-02DT.c: 134:     b[i]=I2C_Receive(0);
  1708  0006C8  0E00               	movlw	0
  1709  0006CA  6E04               	movwf	I2C_Receive@ack+1,c
  1710  0006CC  0E00               	movlw	0
  1711  0006CE  6E03               	movwf	I2C_Receive@ack,c
  1712  0006D0  ECC4  F00A         	call	_I2C_Receive	;wreg free
  1713  0006D4  5003               	movf	?_I2C_Receive,w,c
  1714  0006D6  0100               	movlb	0	; () banked
  1715  0006D8  6F68               	movwf	_b& (0+255),b
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;skS11059-02DT.c: 135:     c[i]=(a[i]<<8)|b[i];
  1719  0006DA  5168               	movf	_b& (0+255),w,b
  1720  0006DC  C06C  F0BC         	movff	_a,??_Color_Read
  1721  0006E0  6BBD               	clrf	(??_Color_Read+1)& (0+255),b
  1722  0006E2  C0BC  F0BD         	movff	??_Color_Read,??_Color_Read+1
  1723  0006E6  6BBC               	clrf	??_Color_Read& (0+255),b
  1724  0006E8  11BC               	iorwf	??_Color_Read& (0+255),w,b
  1725  0006EA  6F60               	movwf	_c& (0+255),b
  1726  0006EC  51BD               	movf	(??_Color_Read+1)& (0+255),w,b
  1727  0006EE  6F61               	movwf	(_c+1)& (0+255),b
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;skS11059-02DT.c: 136:     i++;
  1731  0006F0  4BD2               	infsnz	Color_Read@i& (0+255),f,b
  1732  0006F2  2BD3               	incf	(Color_Read@i+1)& (0+255),f,b
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;skS11059-02DT.c: 137:     a[i]=I2C_Receive(0);
  1736  0006F4  0E6C               	movlw	low _a
  1737  0006F6  25D2               	addwf	Color_Read@i& (0+255),w,b
  1738  0006F8  6ED9               	movwf	fsr2l,c
  1739  0006FA  0E00               	movlw	high _a
  1740  0006FC  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1741  0006FE  6EDA               	movwf	fsr2h,c
  1742  000700  0E00               	movlw	0
  1743  000702  6E04               	movwf	I2C_Receive@ack+1,c
  1744  000704  0E00               	movlw	0
  1745  000706  6E03               	movwf	I2C_Receive@ack,c
  1746  000708  ECC4  F00A         	call	_I2C_Receive	;wreg free
  1747  00070C  5003               	movf	?_I2C_Receive,w,c
  1748  00070E  6EDF               	movwf	indf2,c
  1749                           
  1750                           ;skS11059-02DT.c: 138:     b[i]=I2C_Receive(0);
  1751  000710  0E68               	movlw	low _b
  1752  000712  0100               	movlb	0	; () banked
  1753  000714  25D2               	addwf	Color_Read@i& (0+255),w,b
  1754  000716  6ED9               	movwf	fsr2l,c
  1755  000718  0E00               	movlw	high _b
  1756  00071A  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1757  00071C  6EDA               	movwf	fsr2h,c
  1758  00071E  0E00               	movlw	0
  1759  000720  6E04               	movwf	I2C_Receive@ack+1,c
  1760  000722  0E00               	movlw	0
  1761  000724  6E03               	movwf	I2C_Receive@ack,c
  1762  000726  ECC4  F00A         	call	_I2C_Receive	;wreg free
  1763  00072A  5003               	movf	?_I2C_Receive,w,c
  1764  00072C  6EDF               	movwf	indf2,c
  1765                           
  1766                           ;skS11059-02DT.c: 139:     c[i]=(a[i]<<8)|b[i];
  1767  00072E  0E6C               	movlw	low _a
  1768  000730  0100               	movlb	0	; () banked
  1769  000732  25D2               	addwf	Color_Read@i& (0+255),w,b
  1770  000734  6ED9               	movwf	fsr2l,c
  1771  000736  0E00               	movlw	high _a
  1772  000738  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1773  00073A  6EDA               	movwf	fsr2h,c
  1774  00073C  50DF               	movf	indf2,w,c
  1775  00073E  6FBC               	movwf	??_Color_Read& (0+255),b
  1776  000740  51BC               	movf	??_Color_Read& (0+255),w,b
  1777  000742  6FBE               	movwf	(??_Color_Read+2)& (0+255),b
  1778  000744  6BBD               	clrf	(??_Color_Read+1)& (0+255),b
  1779  000746  0E68               	movlw	low _b
  1780  000748  25D2               	addwf	Color_Read@i& (0+255),w,b
  1781  00074A  6ED9               	movwf	fsr2l,c
  1782  00074C  0E00               	movlw	high _b
  1783  00074E  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1784  000750  6EDA               	movwf	fsr2h,c
  1785  000752  50DF               	movf	indf2,w,c
  1786  000754  6FBF               	movwf	(??_Color_Read+3)& (0+255),b
  1787  000756  51BF               	movf	(??_Color_Read+3)& (0+255),w,b
  1788  000758  13BD               	iorwf	(??_Color_Read+1)& (0+255),f,b
  1789  00075A  0E00               	movlw	0
  1790  00075C  13BE               	iorwf	(??_Color_Read+2)& (0+255),f,b
  1791  00075E  90D8               	bcf	status,0,c
  1792  000760  35D2               	rlcf	Color_Read@i& (0+255),w,b
  1793  000762  6ED9               	movwf	fsr2l,c
  1794  000764  35D3               	rlcf	(Color_Read@i+1)& (0+255),w,b
  1795  000766  6EDA               	movwf	fsr2h,c
  1796  000768  0E60               	movlw	low _c
  1797  00076A  26D9               	addwf	fsr2l,f,c
  1798  00076C  0E00               	movlw	high _c
  1799  00076E  22DA               	addwfc	fsr2h,f,c
  1800  000770  C0BD  FFDE         	movff	??_Color_Read+1,postinc2
  1801  000774  C0BE  FFDD         	movff	??_Color_Read+2,postdec2
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;skS11059-02DT.c: 140:     i++;
  1805  000778  4BD2               	infsnz	Color_Read@i& (0+255),f,b
  1806  00077A  2BD3               	incf	(Color_Read@i+1)& (0+255),f,b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;skS11059-02DT.c: 141:     a[i]=I2C_Receive(0);
  1810  00077C  0E6C               	movlw	low _a
  1811  00077E  25D2               	addwf	Color_Read@i& (0+255),w,b
  1812  000780  6ED9               	movwf	fsr2l,c
  1813  000782  0E00               	movlw	high _a
  1814  000784  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1815  000786  6EDA               	movwf	fsr2h,c
  1816  000788  0E00               	movlw	0
  1817  00078A  6E04               	movwf	I2C_Receive@ack+1,c
  1818  00078C  0E00               	movlw	0
  1819  00078E  6E03               	movwf	I2C_Receive@ack,c
  1820  000790  ECC4  F00A         	call	_I2C_Receive	;wreg free
  1821  000794  5003               	movf	?_I2C_Receive,w,c
  1822  000796  6EDF               	movwf	indf2,c
  1823                           
  1824                           ;skS11059-02DT.c: 142:     b[i]=I2C_Receive(0);
  1825  000798  0E68               	movlw	low _b
  1826  00079A  0100               	movlb	0	; () banked
  1827  00079C  25D2               	addwf	Color_Read@i& (0+255),w,b
  1828  00079E  6ED9               	movwf	fsr2l,c
  1829  0007A0  0E00               	movlw	high _b
  1830  0007A2  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1831  0007A4  6EDA               	movwf	fsr2h,c
  1832  0007A6  0E00               	movlw	0
  1833  0007A8  6E04               	movwf	I2C_Receive@ack+1,c
  1834  0007AA  0E00               	movlw	0
  1835  0007AC  6E03               	movwf	I2C_Receive@ack,c
  1836  0007AE  ECC4  F00A         	call	_I2C_Receive	;wreg free
  1837  0007B2  5003               	movf	?_I2C_Receive,w,c
  1838  0007B4  6EDF               	movwf	indf2,c
  1839                           
  1840                           ;skS11059-02DT.c: 143:     c[i]=(a[i]<<8)|b[i];
  1841  0007B6  0E6C               	movlw	low _a
  1842  0007B8  0100               	movlb	0	; () banked
  1843  0007BA  25D2               	addwf	Color_Read@i& (0+255),w,b
  1844  0007BC  6ED9               	movwf	fsr2l,c
  1845  0007BE  0E00               	movlw	high _a
  1846  0007C0  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1847  0007C2  6EDA               	movwf	fsr2h,c
  1848  0007C4  50DF               	movf	indf2,w,c
  1849  0007C6  6FBC               	movwf	??_Color_Read& (0+255),b
  1850  0007C8  51BC               	movf	??_Color_Read& (0+255),w,b
  1851  0007CA  6FBE               	movwf	(??_Color_Read+2)& (0+255),b
  1852  0007CC  6BBD               	clrf	(??_Color_Read+1)& (0+255),b
  1853  0007CE  0E68               	movlw	low _b
  1854  0007D0  25D2               	addwf	Color_Read@i& (0+255),w,b
  1855  0007D2  6ED9               	movwf	fsr2l,c
  1856  0007D4  0E00               	movlw	high _b
  1857  0007D6  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1858  0007D8  6EDA               	movwf	fsr2h,c
  1859  0007DA  50DF               	movf	indf2,w,c
  1860  0007DC  6FBF               	movwf	(??_Color_Read+3)& (0+255),b
  1861  0007DE  51BF               	movf	(??_Color_Read+3)& (0+255),w,b
  1862  0007E0  13BD               	iorwf	(??_Color_Read+1)& (0+255),f,b
  1863  0007E2  0E00               	movlw	0
  1864  0007E4  13BE               	iorwf	(??_Color_Read+2)& (0+255),f,b
  1865  0007E6  90D8               	bcf	status,0,c
  1866  0007E8  35D2               	rlcf	Color_Read@i& (0+255),w,b
  1867  0007EA  6ED9               	movwf	fsr2l,c
  1868  0007EC  35D3               	rlcf	(Color_Read@i+1)& (0+255),w,b
  1869  0007EE  6EDA               	movwf	fsr2h,c
  1870  0007F0  0E60               	movlw	low _c
  1871  0007F2  26D9               	addwf	fsr2l,f,c
  1872  0007F4  0E00               	movlw	high _c
  1873  0007F6  22DA               	addwfc	fsr2h,f,c
  1874  0007F8  C0BD  FFDE         	movff	??_Color_Read+1,postinc2
  1875  0007FC  C0BE  FFDD         	movff	??_Color_Read+2,postdec2
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;skS11059-02DT.c: 144:     i++;
  1879  000800  4BD2               	infsnz	Color_Read@i& (0+255),f,b
  1880  000802  2BD3               	incf	(Color_Read@i+1)& (0+255),f,b
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;skS11059-02DT.c: 145:     a[i]=I2C_Receive(0);
  1884  000804  0E6C               	movlw	low _a
  1885  000806  25D2               	addwf	Color_Read@i& (0+255),w,b
  1886  000808  6ED9               	movwf	fsr2l,c
  1887  00080A  0E00               	movlw	high _a
  1888  00080C  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1889  00080E  6EDA               	movwf	fsr2h,c
  1890  000810  0E00               	movlw	0
  1891  000812  6E04               	movwf	I2C_Receive@ack+1,c
  1892  000814  0E00               	movlw	0
  1893  000816  6E03               	movwf	I2C_Receive@ack,c
  1894  000818  ECC4  F00A         	call	_I2C_Receive	;wreg free
  1895  00081C  5003               	movf	?_I2C_Receive,w,c
  1896  00081E  6EDF               	movwf	indf2,c
  1897                           
  1898                           ;skS11059-02DT.c: 146:     b[i]=I2C_Receive(1);
  1899  000820  0E68               	movlw	low _b
  1900  000822  0100               	movlb	0	; () banked
  1901  000824  25D2               	addwf	Color_Read@i& (0+255),w,b
  1902  000826  6ED9               	movwf	fsr2l,c
  1903  000828  0E00               	movlw	high _b
  1904  00082A  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1905  00082C  6EDA               	movwf	fsr2h,c
  1906  00082E  0E00               	movlw	0
  1907  000830  6E04               	movwf	I2C_Receive@ack+1,c
  1908  000832  0E01               	movlw	1
  1909  000834  6E03               	movwf	I2C_Receive@ack,c
  1910  000836  ECC4  F00A         	call	_I2C_Receive	;wreg free
  1911  00083A  5003               	movf	?_I2C_Receive,w,c
  1912  00083C  6EDF               	movwf	indf2,c
  1913                           
  1914                           ;skS11059-02DT.c: 147:     c[i]=(a[i]<<8)|b[i];
  1915  00083E  0E6C               	movlw	low _a
  1916  000840  0100               	movlb	0	; () banked
  1917  000842  25D2               	addwf	Color_Read@i& (0+255),w,b
  1918  000844  6ED9               	movwf	fsr2l,c
  1919  000846  0E00               	movlw	high _a
  1920  000848  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1921  00084A  6EDA               	movwf	fsr2h,c
  1922  00084C  50DF               	movf	indf2,w,c
  1923  00084E  6FBC               	movwf	??_Color_Read& (0+255),b
  1924  000850  51BC               	movf	??_Color_Read& (0+255),w,b
  1925  000852  6FBE               	movwf	(??_Color_Read+2)& (0+255),b
  1926  000854  6BBD               	clrf	(??_Color_Read+1)& (0+255),b
  1927  000856  0E68               	movlw	low _b
  1928  000858  25D2               	addwf	Color_Read@i& (0+255),w,b
  1929  00085A  6ED9               	movwf	fsr2l,c
  1930  00085C  0E00               	movlw	high _b
  1931  00085E  21D3               	addwfc	(Color_Read@i+1)& (0+255),w,b
  1932  000860  6EDA               	movwf	fsr2h,c
  1933  000862  50DF               	movf	indf2,w,c
  1934  000864  6FBF               	movwf	(??_Color_Read+3)& (0+255),b
  1935  000866  51BF               	movf	(??_Color_Read+3)& (0+255),w,b
  1936  000868  13BD               	iorwf	(??_Color_Read+1)& (0+255),f,b
  1937  00086A  0E00               	movlw	0
  1938  00086C  13BE               	iorwf	(??_Color_Read+2)& (0+255),f,b
  1939  00086E  90D8               	bcf	status,0,c
  1940  000870  35D2               	rlcf	Color_Read@i& (0+255),w,b
  1941  000872  6ED9               	movwf	fsr2l,c
  1942  000874  35D3               	rlcf	(Color_Read@i+1)& (0+255),w,b
  1943  000876  6EDA               	movwf	fsr2h,c
  1944  000878  0E60               	movlw	low _c
  1945  00087A  26D9               	addwf	fsr2l,f,c
  1946  00087C  0E00               	movlw	high _c
  1947  00087E  22DA               	addwfc	fsr2h,f,c
  1948  000880  C0BD  FFDE         	movff	??_Color_Read+1,postinc2
  1949  000884  C0BE  FFDD         	movff	??_Color_Read+2,postdec2
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;skS11059-02DT.c: 149:     I2C_Stop();
  1953  000888  ECEB  F00C         	call	_I2C_Stop	;wreg free
  1954                           
  1955                           ;skS11059-02DT.c: 151:     LCD_Clear() ;
  1956  00088C  ECF7  F00B         	call	_LCD_Clear	;wreg free
  1957                           
  1958                           ;skS11059-02DT.c: 152:     _delay((unsigned long)((20)*(16000000/4000.0)));
  1959  000890  0E68               	movlw	104
  1960  000892  0100               	movlb	0	; () banked
  1961  000894  6FBC               	movwf	??_Color_Read& (0+255),b
  1962  000896  0EE4               	movlw	228
  1963  000898                     u3097:
  1964  000898  2EE8               	decfsz	wreg,f,c
  1965  00089A  D7FE               	bra	u3097
  1966  00089C  2FBC               	decfsz	??_Color_Read& (0+255),f,b
  1967  00089E  D7FC               	bra	u3097
  1968  0008A0  F000               	nop	
  1969                           
  1970                           ;skS11059-02DT.c: 154:     i=0;
  1971  0008A2  0E00               	movlw	0
  1972  0008A4  0100               	movlb	0	; () banked
  1973  0008A6  6FD3               	movwf	(Color_Read@i+1)& (0+255),b
  1974  0008A8  0E00               	movlw	0
  1975  0008AA  6FD2               	movwf	Color_Read@i& (0+255),b
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;skS11059-02DT.c: 155:     sprintf(buf,"R:0x%04x",c[i]);
  1979  0008AC  0EC0               	movlw	low Color_Read@buf
  1980  0008AE  6FAC               	movwf	sprintf@s& (0+255),b
  1981  0008B0  0E00               	movlw	high Color_Read@buf
  1982  0008B2  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1983  0008B4  0E1C               	movlw	low STR_1
  1984  0008B6  6FAE               	movwf	sprintf@fmt& (0+255),b
  1985  0008B8  0E02               	movlw	high STR_1
  1986  0008BA  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1987  0008BC  C060  F0B0         	movff	_c,?_sprintf+4
  1988  0008C0  C061  F0B1         	movff	_c+1,?_sprintf+5
  1989  0008C4  ECEE  F00A         	call	_sprintf	;wreg free
  1990                           
  1991                           ;skS11059-02DT.c: 156:     LCD_Puts(buf);
  1992  0008C8  0EC0               	movlw	low Color_Read@buf
  1993  0008CA  6E08               	movwf	LCD_Puts@s,c
  1994  0008CC  0E00               	movlw	high Color_Read@buf
  1995  0008CE  6E09               	movwf	LCD_Puts@s+1,c
  1996  0008D0  EC69  F00A         	call	_LCD_Puts	;wreg free
  1997                           
  1998                           ;skS11059-02DT.c: 157:     _delay((unsigned long)((10)*(16000000/4000.0)));
  1999  0008D4  0E34               	movlw	52
  2000  0008D6  0100               	movlb	0	; () banked
  2001  0008D8  6FBC               	movwf	??_Color_Read& (0+255),b
  2002  0008DA  0EF1               	movlw	241
  2003  0008DC                     u3107:
  2004  0008DC  2EE8               	decfsz	wreg,f,c
  2005  0008DE  D7FE               	bra	u3107
  2006  0008E0  2FBC               	decfsz	??_Color_Read& (0+255),f,b
  2007  0008E2  D7FC               	bra	u3107
  2008  0008E4  D000               	nop2	
  2009                           
  2010                           ;skS11059-02DT.c: 158:     i++;
  2011  0008E6  0100               	movlb	0	; () banked
  2012  0008E8  4BD2               	infsnz	Color_Read@i& (0+255),f,b
  2013  0008EA  2BD3               	incf	(Color_Read@i+1)& (0+255),f,b
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;skS11059-02DT.c: 160:     sprintf(buf,"G:0x%04x",c[i]);
  2017  0008EC  0EC0               	movlw	low Color_Read@buf
  2018  0008EE  6FAC               	movwf	sprintf@s& (0+255),b
  2019  0008F0  0E00               	movlw	high Color_Read@buf
  2020  0008F2  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2021  0008F4  0E0A               	movlw	low STR_2
  2022  0008F6  6FAE               	movwf	sprintf@fmt& (0+255),b
  2023  0008F8  0E02               	movlw	high STR_2
  2024  0008FA  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2025  0008FC  90D8               	bcf	status,0,c
  2026  0008FE  35D2               	rlcf	Color_Read@i& (0+255),w,b
  2027  000900  6ED9               	movwf	fsr2l,c
  2028  000902  35D3               	rlcf	(Color_Read@i+1)& (0+255),w,b
  2029  000904  6EDA               	movwf	fsr2h,c
  2030  000906  0E60               	movlw	low _c
  2031  000908  26D9               	addwf	fsr2l,f,c
  2032  00090A  0E00               	movlw	high _c
  2033  00090C  22DA               	addwfc	fsr2h,f,c
  2034  00090E  CFDE F0B0          	movff	postinc2,?_sprintf+4
  2035  000912  CFDD F0B1          	movff	postdec2,?_sprintf+5
  2036  000916  ECEE  F00A         	call	_sprintf	;wreg free
  2037                           
  2038                           ;skS11059-02DT.c: 161:     LCD_Puts(buf);
  2039  00091A  0EC0               	movlw	low Color_Read@buf
  2040  00091C  6E08               	movwf	LCD_Puts@s,c
  2041  00091E  0E00               	movlw	high Color_Read@buf
  2042  000920  6E09               	movwf	LCD_Puts@s+1,c
  2043  000922  EC69  F00A         	call	_LCD_Puts	;wreg free
  2044                           
  2045                           ;skS11059-02DT.c: 162:     _delay((unsigned long)((10)*(16000000/4000.0)));
  2046  000926  0E34               	movlw	52
  2047  000928  0100               	movlb	0	; () banked
  2048  00092A  6FBC               	movwf	??_Color_Read& (0+255),b
  2049  00092C  0EF1               	movlw	241
  2050  00092E                     u3117:
  2051  00092E  2EE8               	decfsz	wreg,f,c
  2052  000930  D7FE               	bra	u3117
  2053  000932  2FBC               	decfsz	??_Color_Read& (0+255),f,b
  2054  000934  D7FC               	bra	u3117
  2055  000936  D000               	nop2	
  2056                           
  2057                           ;skS11059-02DT.c: 163:     i++;
  2058  000938  0100               	movlb	0	; () banked
  2059  00093A  4BD2               	infsnz	Color_Read@i& (0+255),f,b
  2060  00093C  2BD3               	incf	(Color_Read@i+1)& (0+255),f,b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;skS11059-02DT.c: 165:     LCD_SetCursor(0,1);
  2064  00093E  0E00               	movlw	0
  2065  000940  6E0C               	movwf	LCD_SetCursor@col+1,c
  2066  000942  0E00               	movlw	0
  2067  000944  6E0B               	movwf	LCD_SetCursor@col,c
  2068  000946  0E00               	movlw	0
  2069  000948  6E0E               	movwf	LCD_SetCursor@row+1,c
  2070  00094A  0E01               	movlw	1
  2071  00094C  6E0D               	movwf	LCD_SetCursor@row,c
  2072  00094E  EC59  F00C         	call	_LCD_SetCursor	;wreg free
  2073                           
  2074                           ;skS11059-02DT.c: 166:     _delay((unsigned long)((10)*(16000000/4000.0)));
  2075  000952  0E34               	movlw	52
  2076  000954  0100               	movlb	0	; () banked
  2077  000956  6FBC               	movwf	??_Color_Read& (0+255),b
  2078  000958  0EF1               	movlw	241
  2079  00095A                     u3127:
  2080  00095A  2EE8               	decfsz	wreg,f,c
  2081  00095C  D7FE               	bra	u3127
  2082  00095E  2FBC               	decfsz	??_Color_Read& (0+255),f,b
  2083  000960  D7FC               	bra	u3127
  2084  000962  D000               	nop2	
  2085                           
  2086                           ;skS11059-02DT.c: 168:     sprintf(buf,"B:0x%04x",c[i]);
  2087  000964  0EC0               	movlw	low Color_Read@buf
  2088  000966  0100               	movlb	0	; () banked
  2089  000968  6FAC               	movwf	sprintf@s& (0+255),b
  2090  00096A  0E00               	movlw	high Color_Read@buf
  2091  00096C  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2092  00096E  0E01               	movlw	low STR_3
  2093  000970  6FAE               	movwf	sprintf@fmt& (0+255),b
  2094  000972  0E02               	movlw	high STR_3
  2095  000974  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2096  000976  90D8               	bcf	status,0,c
  2097  000978  35D2               	rlcf	Color_Read@i& (0+255),w,b
  2098  00097A  6ED9               	movwf	fsr2l,c
  2099  00097C  35D3               	rlcf	(Color_Read@i+1)& (0+255),w,b
  2100  00097E  6EDA               	movwf	fsr2h,c
  2101  000980  0E60               	movlw	low _c
  2102  000982  26D9               	addwf	fsr2l,f,c
  2103  000984  0E00               	movlw	high _c
  2104  000986  22DA               	addwfc	fsr2h,f,c
  2105  000988  CFDE F0B0          	movff	postinc2,?_sprintf+4
  2106  00098C  CFDD F0B1          	movff	postdec2,?_sprintf+5
  2107  000990  ECEE  F00A         	call	_sprintf	;wreg free
  2108                           
  2109                           ;skS11059-02DT.c: 169:     LCD_Puts(buf);
  2110  000994  0EC0               	movlw	low Color_Read@buf
  2111  000996  6E08               	movwf	LCD_Puts@s,c
  2112  000998  0E00               	movlw	high Color_Read@buf
  2113  00099A  6E09               	movwf	LCD_Puts@s+1,c
  2114  00099C  EC69  F00A         	call	_LCD_Puts	;wreg free
  2115                           
  2116                           ;skS11059-02DT.c: 170:     _delay((unsigned long)((10)*(16000000/4000.0)));
  2117  0009A0  0E34               	movlw	52
  2118  0009A2  0100               	movlb	0	; () banked
  2119  0009A4  6FBC               	movwf	??_Color_Read& (0+255),b
  2120  0009A6  0EF1               	movlw	241
  2121  0009A8                     u3137:
  2122  0009A8  2EE8               	decfsz	wreg,f,c
  2123  0009AA  D7FE               	bra	u3137
  2124  0009AC  2FBC               	decfsz	??_Color_Read& (0+255),f,b
  2125  0009AE  D7FC               	bra	u3137
  2126  0009B0  D000               	nop2	
  2127                           
  2128                           ;skS11059-02DT.c: 171:     i++;
  2129  0009B2  0100               	movlb	0	; () banked
  2130  0009B4  4BD2               	infsnz	Color_Read@i& (0+255),f,b
  2131  0009B6  2BD3               	incf	(Color_Read@i+1)& (0+255),f,b
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;skS11059-02DT.c: 173:     sprintf(buf,"I:0x%04x",c[i]);
  2135  0009B8  0EC0               	movlw	low Color_Read@buf
  2136  0009BA  6FAC               	movwf	sprintf@s& (0+255),b
  2137  0009BC  0E00               	movlw	high Color_Read@buf
  2138  0009BE  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2139  0009C0  0E13               	movlw	low STR_4
  2140  0009C2  6FAE               	movwf	sprintf@fmt& (0+255),b
  2141  0009C4  0E02               	movlw	high STR_4
  2142  0009C6  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2143  0009C8  90D8               	bcf	status,0,c
  2144  0009CA  35D2               	rlcf	Color_Read@i& (0+255),w,b
  2145  0009CC  6ED9               	movwf	fsr2l,c
  2146  0009CE  35D3               	rlcf	(Color_Read@i+1)& (0+255),w,b
  2147  0009D0  6EDA               	movwf	fsr2h,c
  2148  0009D2  0E60               	movlw	low _c
  2149  0009D4  26D9               	addwf	fsr2l,f,c
  2150  0009D6  0E00               	movlw	high _c
  2151  0009D8  22DA               	addwfc	fsr2h,f,c
  2152  0009DA  CFDE F0B0          	movff	postinc2,?_sprintf+4
  2153  0009DE  CFDD F0B1          	movff	postdec2,?_sprintf+5
  2154  0009E2  ECEE  F00A         	call	_sprintf	;wreg free
  2155                           
  2156                           ;skS11059-02DT.c: 174:     LCD_Puts(buf);
  2157  0009E6  0EC0               	movlw	low Color_Read@buf
  2158  0009E8  6E08               	movwf	LCD_Puts@s,c
  2159  0009EA  0E00               	movlw	high Color_Read@buf
  2160  0009EC  6E09               	movwf	LCD_Puts@s+1,c
  2161  0009EE  EC69  F00A         	call	_LCD_Puts	;wreg free
  2162                           
  2163                           ;skS11059-02DT.c: 175:     _delay((unsigned long)((10)*(16000000/4000.0)));
  2164  0009F2  0E34               	movlw	52
  2165  0009F4  0100               	movlb	0	; () banked
  2166  0009F6  6FBC               	movwf	??_Color_Read& (0+255),b
  2167  0009F8  0EF1               	movlw	241
  2168  0009FA                     u3147:
  2169  0009FA  2EE8               	decfsz	wreg,f,c
  2170  0009FC  D7FE               	bra	u3147
  2171  0009FE  2FBC               	decfsz	??_Color_Read& (0+255),f,b
  2172  000A00  D7FC               	bra	u3147
  2173  000A02  D000               	nop2	
  2174  000A04  0012               	return		;funcret
  2175  000A06                     __end_of_Color_Read:
  2176                           	opt callstack 0
  2177                           
  2178 ;; *************** function _Color *****************
  2179 ;; Defined at:
  2180 ;;		line 183 in file "skS11059-02DT.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  buf            16   28[BANK0 ] unsigned char [16]
  2185 ;;  i               2   46[BANK0 ] int 
  2186 ;;  ans             2   44[BANK0 ] int 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1
  2196 ;;      Params:         0       0       0
  2197 ;;      Locals:         0      20       0
  2198 ;;      Temps:          0       4       0
  2199 ;;      Totals:         0      24       0
  2200 ;;Total ram usage:       24 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    9
  2203 ;; This function calls:
  2204 ;;		_I2C_Receive
  2205 ;;		_I2C_Send
  2206 ;;		_I2C_Start
  2207 ;;		_I2C_Stop
  2208 ;;		_I2C_rStart
  2209 ;;		_LCD_Clear
  2210 ;;		_LCD_Puts
  2211 ;;		_LCD_SetCursor
  2212 ;;		_sprintf
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text9
  2219  000226                     __ptext9:
  2220                           	opt callstack 0
  2221  000226                     _Color:
  2222                           	opt callstack 21
  2223                           
  2224                           ;skS11059-02DT.c: 185:     char buf[16];;skS11059-02DT.c: 186:     int i;;skS11059-02DT.
      +                          c: 187:     int ans ;;skS11059-02DT.c: 189:     ans =I2C_Start(0x2A,0);
  2225                           
  2226                           ;incstack = 0
  2227  000226  0E00               	movlw	0
  2228  000228  6E04               	movwf	I2C_Start@adrs+1,c
  2229  00022A  0E2A               	movlw	42
  2230  00022C  6E03               	movwf	I2C_Start@adrs,c
  2231  00022E  0E00               	movlw	0
  2232  000230  6E06               	movwf	I2C_Start@rw+1,c
  2233  000232  0E00               	movlw	0
  2234  000234  6E05               	movwf	I2C_Start@rw,c
  2235  000236  ECF8  F009         	call	_I2C_Start	;wreg free
  2236  00023A  C003  F0D0         	movff	?_I2C_Start,Color@ans
  2237  00023E  C004  F0D1         	movff	?_I2C_Start+1,Color@ans+1
  2238                           
  2239                           ;skS11059-02DT.c: 190:     if (ans == 0) {
  2240  000242  0100               	movlb	0	; () banked
  2241  000244  51D0               	movf	Color@ans& (0+255),w,b
  2242  000246  11D1               	iorwf	(Color@ans+1)& (0+255),w,b
  2243  000248  A4D8               	btfss	status,2,c
  2244  00024A  D006               	goto	l3899
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;skS11059-02DT.c: 191:         I2C_Send(0x00);
  2248  00024C  0E00               	movlw	0
  2249  00024E  EC17  F00B         	call	_I2C_Send
  2250                           
  2251                           ;skS11059-02DT.c: 192:         I2C_Send(0x8A);
  2252  000252  0E8A               	movlw	138
  2253  000254  EC17  F00B         	call	_I2C_Send
  2254  000258                     l3899:
  2255                           
  2256                           ;skS11059-02DT.c: 194:     _delay((unsigned long)((10)*(16000000/4000.0)));
  2257  000258  0E34               	movlw	52
  2258  00025A  0100               	movlb	0	; () banked
  2259  00025C  6FBC               	movwf	??_Color& (0+255),b
  2260  00025E  0EF1               	movlw	241
  2261  000260                     u3157:
  2262  000260  2EE8               	decfsz	wreg,f,c
  2263  000262  D7FE               	bra	u3157
  2264  000264  2FBC               	decfsz	??_Color& (0+255),f,b
  2265  000266  D7FC               	bra	u3157
  2266  000268  D000               	nop2	
  2267                           
  2268                           ;skS11059-02DT.c: 196:     ans =I2C_rStart(0x2A,0);
  2269  00026A  0E00               	movlw	0
  2270  00026C  6E04               	movwf	I2C_rStart@adrs+1,c
  2271  00026E  0E2A               	movlw	42
  2272  000270  6E03               	movwf	I2C_rStart@adrs,c
  2273  000272  0E00               	movlw	0
  2274  000274  6E06               	movwf	I2C_rStart@rw+1,c
  2275  000276  0E00               	movlw	0
  2276  000278  6E05               	movwf	I2C_rStart@rw,c
  2277  00027A  EC31  F00A         	call	_I2C_rStart	;wreg free
  2278  00027E  C003  F0D0         	movff	?_I2C_rStart,Color@ans
  2279  000282  C004  F0D1         	movff	?_I2C_rStart+1,Color@ans+1
  2280                           
  2281                           ;skS11059-02DT.c: 197:     if (ans == 0) {
  2282  000286  0100               	movlb	0	; () banked
  2283  000288  51D0               	movf	Color@ans& (0+255),w,b
  2284  00028A  11D1               	iorwf	(Color@ans+1)& (0+255),w,b
  2285  00028C  A4D8               	btfss	status,2,c
  2286  00028E  D006               	goto	l519
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;skS11059-02DT.c: 198:         I2C_Send(0x00);
  2290  000290  0E00               	movlw	0
  2291  000292  EC17  F00B         	call	_I2C_Send
  2292                           
  2293                           ;skS11059-02DT.c: 199:         I2C_Send(0x0A);
  2294  000296  0E0A               	movlw	10
  2295  000298  EC17  F00B         	call	_I2C_Send
  2296  00029C                     l519:
  2297                           
  2298                           ;skS11059-02DT.c: 201:     I2C_Stop();
  2299  00029C  ECEB  F00C         	call	_I2C_Stop	;wreg free
  2300                           
  2301                           ;skS11059-02DT.c: 204:     _delay((unsigned long)((120)*(16000000/4000.0)));
  2302  0002A0  0E03               	movlw	3
  2303  0002A2  0100               	movlb	0	; () banked
  2304  0002A4  6FBD               	movwf	(??_Color+1)& (0+255),b
  2305  0002A6  0E70               	movlw	112
  2306  0002A8  6FBC               	movwf	??_Color& (0+255),b
  2307  0002AA  0E5C               	movlw	92
  2308  0002AC                     u3167:
  2309  0002AC  2EE8               	decfsz	wreg,f,c
  2310  0002AE  D7FE               	bra	u3167
  2311  0002B0  2FBC               	decfsz	??_Color& (0+255),f,b
  2312  0002B2  D7FC               	bra	u3167
  2313  0002B4  2FBD               	decfsz	(??_Color+1)& (0+255),f,b
  2314  0002B6  D7FA               	bra	u3167
  2315  0002B8  F000               	nop	
  2316                           
  2317                           ;skS11059-02DT.c: 205:     ans =I2C_Start(0x2A,0);
  2318  0002BA  0E00               	movlw	0
  2319  0002BC  6E04               	movwf	I2C_Start@adrs+1,c
  2320  0002BE  0E2A               	movlw	42
  2321  0002C0  6E03               	movwf	I2C_Start@adrs,c
  2322  0002C2  0E00               	movlw	0
  2323  0002C4  6E06               	movwf	I2C_Start@rw+1,c
  2324  0002C6  0E00               	movlw	0
  2325  0002C8  6E05               	movwf	I2C_Start@rw,c
  2326  0002CA  ECF8  F009         	call	_I2C_Start	;wreg free
  2327  0002CE  C003  F0D0         	movff	?_I2C_Start,Color@ans
  2328  0002D2  C004  F0D1         	movff	?_I2C_Start+1,Color@ans+1
  2329                           
  2330                           ;skS11059-02DT.c: 206:     if (ans == 0) {
  2331  0002D6  0100               	movlb	0	; () banked
  2332  0002D8  51D0               	movf	Color@ans& (0+255),w,b
  2333  0002DA  11D1               	iorwf	(Color@ans+1)& (0+255),w,b
  2334  0002DC  A4D8               	btfss	status,2,c
  2335  0002DE  D003               	goto	l3915
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;skS11059-02DT.c: 207:         I2C_Send(0x03);
  2339  0002E0  0E03               	movlw	3
  2340  0002E2  EC17  F00B         	call	_I2C_Send
  2341  0002E6                     l3915:
  2342  0002E6  0E00               	movlw	0
  2343  0002E8  6E04               	movwf	I2C_rStart@adrs+1,c
  2344  0002EA  0E2A               	movlw	42
  2345  0002EC  6E03               	movwf	I2C_rStart@adrs,c
  2346  0002EE  0E00               	movlw	0
  2347  0002F0  6E06               	movwf	I2C_rStart@rw+1,c
  2348  0002F2  0E01               	movlw	1
  2349  0002F4  6E05               	movwf	I2C_rStart@rw,c
  2350  0002F6  EC31  F00A         	call	_I2C_rStart	;wreg free
  2351                           
  2352                           ;skS11059-02DT.c: 210:     i=0;
  2353  0002FA  0E00               	movlw	0
  2354  0002FC  0100               	movlb	0	; () banked
  2355  0002FE  6FD3               	movwf	(Color@i+1)& (0+255),b
  2356  000300  0E00               	movlw	0
  2357  000302  6FD2               	movwf	Color@i& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;skS11059-02DT.c: 211:     a[i]=I2C_Receive(0);
  2361  000304  0E00               	movlw	0
  2362  000306  6E04               	movwf	I2C_Receive@ack+1,c
  2363  000308  0E00               	movlw	0
  2364  00030A  6E03               	movwf	I2C_Receive@ack,c
  2365  00030C  ECC4  F00A         	call	_I2C_Receive	;wreg free
  2366  000310  5003               	movf	?_I2C_Receive,w,c
  2367  000312  0100               	movlb	0	; () banked
  2368  000314  6F6C               	movwf	_a& (0+255),b
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;skS11059-02DT.c: 212:     b[i]=I2C_Receive(0);
  2372  000316  0E00               	movlw	0
  2373  000318  6E04               	movwf	I2C_Receive@ack+1,c
  2374  00031A  0E00               	movlw	0
  2375  00031C  6E03               	movwf	I2C_Receive@ack,c
  2376  00031E  ECC4  F00A         	call	_I2C_Receive	;wreg free
  2377  000322  5003               	movf	?_I2C_Receive,w,c
  2378  000324  0100               	movlb	0	; () banked
  2379  000326  6F68               	movwf	_b& (0+255),b
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;skS11059-02DT.c: 213:     c[i]=(a[i]<<8)|b[i];
  2383  000328  5168               	movf	_b& (0+255),w,b
  2384  00032A  C06C  F0BC         	movff	_a,??_Color
  2385  00032E  6BBD               	clrf	(??_Color+1)& (0+255),b
  2386  000330  C0BC  F0BD         	movff	??_Color,??_Color+1
  2387  000334  6BBC               	clrf	??_Color& (0+255),b
  2388  000336  11BC               	iorwf	??_Color& (0+255),w,b
  2389  000338  6F60               	movwf	_c& (0+255),b
  2390  00033A  51BD               	movf	(??_Color+1)& (0+255),w,b
  2391  00033C  6F61               	movwf	(_c+1)& (0+255),b
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;skS11059-02DT.c: 214:     i++;
  2395  00033E  4BD2               	infsnz	Color@i& (0+255),f,b
  2396  000340  2BD3               	incf	(Color@i+1)& (0+255),f,b
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;skS11059-02DT.c: 215:     a[i]=I2C_Receive(0);
  2400  000342  0E6C               	movlw	low _a
  2401  000344  25D2               	addwf	Color@i& (0+255),w,b
  2402  000346  6ED9               	movwf	fsr2l,c
  2403  000348  0E00               	movlw	high _a
  2404  00034A  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2405  00034C  6EDA               	movwf	fsr2h,c
  2406  00034E  0E00               	movlw	0
  2407  000350  6E04               	movwf	I2C_Receive@ack+1,c
  2408  000352  0E00               	movlw	0
  2409  000354  6E03               	movwf	I2C_Receive@ack,c
  2410  000356  ECC4  F00A         	call	_I2C_Receive	;wreg free
  2411  00035A  5003               	movf	?_I2C_Receive,w,c
  2412  00035C  6EDF               	movwf	indf2,c
  2413                           
  2414                           ;skS11059-02DT.c: 216:     b[i]=I2C_Receive(0);
  2415  00035E  0E68               	movlw	low _b
  2416  000360  0100               	movlb	0	; () banked
  2417  000362  25D2               	addwf	Color@i& (0+255),w,b
  2418  000364  6ED9               	movwf	fsr2l,c
  2419  000366  0E00               	movlw	high _b
  2420  000368  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2421  00036A  6EDA               	movwf	fsr2h,c
  2422  00036C  0E00               	movlw	0
  2423  00036E  6E04               	movwf	I2C_Receive@ack+1,c
  2424  000370  0E00               	movlw	0
  2425  000372  6E03               	movwf	I2C_Receive@ack,c
  2426  000374  ECC4  F00A         	call	_I2C_Receive	;wreg free
  2427  000378  5003               	movf	?_I2C_Receive,w,c
  2428  00037A  6EDF               	movwf	indf2,c
  2429                           
  2430                           ;skS11059-02DT.c: 217:     c[i]=(a[i]<<8)|b[i];
  2431  00037C  0E6C               	movlw	low _a
  2432  00037E  0100               	movlb	0	; () banked
  2433  000380  25D2               	addwf	Color@i& (0+255),w,b
  2434  000382  6ED9               	movwf	fsr2l,c
  2435  000384  0E00               	movlw	high _a
  2436  000386  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2437  000388  6EDA               	movwf	fsr2h,c
  2438  00038A  50DF               	movf	indf2,w,c
  2439  00038C  6FBC               	movwf	??_Color& (0+255),b
  2440  00038E  51BC               	movf	??_Color& (0+255),w,b
  2441  000390  6FBE               	movwf	(??_Color+2)& (0+255),b
  2442  000392  6BBD               	clrf	(??_Color+1)& (0+255),b
  2443  000394  0E68               	movlw	low _b
  2444  000396  25D2               	addwf	Color@i& (0+255),w,b
  2445  000398  6ED9               	movwf	fsr2l,c
  2446  00039A  0E00               	movlw	high _b
  2447  00039C  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2448  00039E  6EDA               	movwf	fsr2h,c
  2449  0003A0  50DF               	movf	indf2,w,c
  2450  0003A2  6FBF               	movwf	(??_Color+3)& (0+255),b
  2451  0003A4  51BF               	movf	(??_Color+3)& (0+255),w,b
  2452  0003A6  13BD               	iorwf	(??_Color+1)& (0+255),f,b
  2453  0003A8  0E00               	movlw	0
  2454  0003AA  13BE               	iorwf	(??_Color+2)& (0+255),f,b
  2455  0003AC  90D8               	bcf	status,0,c
  2456  0003AE  35D2               	rlcf	Color@i& (0+255),w,b
  2457  0003B0  6ED9               	movwf	fsr2l,c
  2458  0003B2  35D3               	rlcf	(Color@i+1)& (0+255),w,b
  2459  0003B4  6EDA               	movwf	fsr2h,c
  2460  0003B6  0E60               	movlw	low _c
  2461  0003B8  26D9               	addwf	fsr2l,f,c
  2462  0003BA  0E00               	movlw	high _c
  2463  0003BC  22DA               	addwfc	fsr2h,f,c
  2464  0003BE  C0BD  FFDE         	movff	??_Color+1,postinc2
  2465  0003C2  C0BE  FFDD         	movff	??_Color+2,postdec2
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;skS11059-02DT.c: 218:     i++;
  2469  0003C6  4BD2               	infsnz	Color@i& (0+255),f,b
  2470  0003C8  2BD3               	incf	(Color@i+1)& (0+255),f,b
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;skS11059-02DT.c: 219:     a[i]=I2C_Receive(0);
  2474  0003CA  0E6C               	movlw	low _a
  2475  0003CC  25D2               	addwf	Color@i& (0+255),w,b
  2476  0003CE  6ED9               	movwf	fsr2l,c
  2477  0003D0  0E00               	movlw	high _a
  2478  0003D2  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2479  0003D4  6EDA               	movwf	fsr2h,c
  2480  0003D6  0E00               	movlw	0
  2481  0003D8  6E04               	movwf	I2C_Receive@ack+1,c
  2482  0003DA  0E00               	movlw	0
  2483  0003DC  6E03               	movwf	I2C_Receive@ack,c
  2484  0003DE  ECC4  F00A         	call	_I2C_Receive	;wreg free
  2485  0003E2  5003               	movf	?_I2C_Receive,w,c
  2486  0003E4  6EDF               	movwf	indf2,c
  2487                           
  2488                           ;skS11059-02DT.c: 220:     b[i]=I2C_Receive(0);
  2489  0003E6  0E68               	movlw	low _b
  2490  0003E8  0100               	movlb	0	; () banked
  2491  0003EA  25D2               	addwf	Color@i& (0+255),w,b
  2492  0003EC  6ED9               	movwf	fsr2l,c
  2493  0003EE  0E00               	movlw	high _b
  2494  0003F0  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2495  0003F2  6EDA               	movwf	fsr2h,c
  2496  0003F4  0E00               	movlw	0
  2497  0003F6  6E04               	movwf	I2C_Receive@ack+1,c
  2498  0003F8  0E00               	movlw	0
  2499  0003FA  6E03               	movwf	I2C_Receive@ack,c
  2500  0003FC  ECC4  F00A         	call	_I2C_Receive	;wreg free
  2501  000400  5003               	movf	?_I2C_Receive,w,c
  2502  000402  6EDF               	movwf	indf2,c
  2503                           
  2504                           ;skS11059-02DT.c: 221:     c[i]=(a[i]<<8)|b[i];
  2505  000404  0E6C               	movlw	low _a
  2506  000406  0100               	movlb	0	; () banked
  2507  000408  25D2               	addwf	Color@i& (0+255),w,b
  2508  00040A  6ED9               	movwf	fsr2l,c
  2509  00040C  0E00               	movlw	high _a
  2510  00040E  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2511  000410  6EDA               	movwf	fsr2h,c
  2512  000412  50DF               	movf	indf2,w,c
  2513  000414  6FBC               	movwf	??_Color& (0+255),b
  2514  000416  51BC               	movf	??_Color& (0+255),w,b
  2515  000418  6FBE               	movwf	(??_Color+2)& (0+255),b
  2516  00041A  6BBD               	clrf	(??_Color+1)& (0+255),b
  2517  00041C  0E68               	movlw	low _b
  2518  00041E  25D2               	addwf	Color@i& (0+255),w,b
  2519  000420  6ED9               	movwf	fsr2l,c
  2520  000422  0E00               	movlw	high _b
  2521  000424  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2522  000426  6EDA               	movwf	fsr2h,c
  2523  000428  50DF               	movf	indf2,w,c
  2524  00042A  6FBF               	movwf	(??_Color+3)& (0+255),b
  2525  00042C  51BF               	movf	(??_Color+3)& (0+255),w,b
  2526  00042E  13BD               	iorwf	(??_Color+1)& (0+255),f,b
  2527  000430  0E00               	movlw	0
  2528  000432  13BE               	iorwf	(??_Color+2)& (0+255),f,b
  2529  000434  90D8               	bcf	status,0,c
  2530  000436  35D2               	rlcf	Color@i& (0+255),w,b
  2531  000438  6ED9               	movwf	fsr2l,c
  2532  00043A  35D3               	rlcf	(Color@i+1)& (0+255),w,b
  2533  00043C  6EDA               	movwf	fsr2h,c
  2534  00043E  0E60               	movlw	low _c
  2535  000440  26D9               	addwf	fsr2l,f,c
  2536  000442  0E00               	movlw	high _c
  2537  000444  22DA               	addwfc	fsr2h,f,c
  2538  000446  C0BD  FFDE         	movff	??_Color+1,postinc2
  2539  00044A  C0BE  FFDD         	movff	??_Color+2,postdec2
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;skS11059-02DT.c: 222:     i++;
  2543  00044E  4BD2               	infsnz	Color@i& (0+255),f,b
  2544  000450  2BD3               	incf	(Color@i+1)& (0+255),f,b
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;skS11059-02DT.c: 223:     a[i]=I2C_Receive(0);
  2548  000452  0E6C               	movlw	low _a
  2549  000454  25D2               	addwf	Color@i& (0+255),w,b
  2550  000456  6ED9               	movwf	fsr2l,c
  2551  000458  0E00               	movlw	high _a
  2552  00045A  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2553  00045C  6EDA               	movwf	fsr2h,c
  2554  00045E  0E00               	movlw	0
  2555  000460  6E04               	movwf	I2C_Receive@ack+1,c
  2556  000462  0E00               	movlw	0
  2557  000464  6E03               	movwf	I2C_Receive@ack,c
  2558  000466  ECC4  F00A         	call	_I2C_Receive	;wreg free
  2559  00046A  5003               	movf	?_I2C_Receive,w,c
  2560  00046C  6EDF               	movwf	indf2,c
  2561                           
  2562                           ;skS11059-02DT.c: 224:     b[i]=I2C_Receive(1);
  2563  00046E  0E68               	movlw	low _b
  2564  000470  0100               	movlb	0	; () banked
  2565  000472  25D2               	addwf	Color@i& (0+255),w,b
  2566  000474  6ED9               	movwf	fsr2l,c
  2567  000476  0E00               	movlw	high _b
  2568  000478  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2569  00047A  6EDA               	movwf	fsr2h,c
  2570  00047C  0E00               	movlw	0
  2571  00047E  6E04               	movwf	I2C_Receive@ack+1,c
  2572  000480  0E01               	movlw	1
  2573  000482  6E03               	movwf	I2C_Receive@ack,c
  2574  000484  ECC4  F00A         	call	_I2C_Receive	;wreg free
  2575  000488  5003               	movf	?_I2C_Receive,w,c
  2576  00048A  6EDF               	movwf	indf2,c
  2577                           
  2578                           ;skS11059-02DT.c: 225:     c[i]=(a[i]<<8)|b[i];
  2579  00048C  0E6C               	movlw	low _a
  2580  00048E  0100               	movlb	0	; () banked
  2581  000490  25D2               	addwf	Color@i& (0+255),w,b
  2582  000492  6ED9               	movwf	fsr2l,c
  2583  000494  0E00               	movlw	high _a
  2584  000496  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2585  000498  6EDA               	movwf	fsr2h,c
  2586  00049A  50DF               	movf	indf2,w,c
  2587  00049C  6FBC               	movwf	??_Color& (0+255),b
  2588  00049E  51BC               	movf	??_Color& (0+255),w,b
  2589  0004A0  6FBE               	movwf	(??_Color+2)& (0+255),b
  2590  0004A2  6BBD               	clrf	(??_Color+1)& (0+255),b
  2591  0004A4  0E68               	movlw	low _b
  2592  0004A6  25D2               	addwf	Color@i& (0+255),w,b
  2593  0004A8  6ED9               	movwf	fsr2l,c
  2594  0004AA  0E00               	movlw	high _b
  2595  0004AC  21D3               	addwfc	(Color@i+1)& (0+255),w,b
  2596  0004AE  6EDA               	movwf	fsr2h,c
  2597  0004B0  50DF               	movf	indf2,w,c
  2598  0004B2  6FBF               	movwf	(??_Color+3)& (0+255),b
  2599  0004B4  51BF               	movf	(??_Color+3)& (0+255),w,b
  2600  0004B6  13BD               	iorwf	(??_Color+1)& (0+255),f,b
  2601  0004B8  0E00               	movlw	0
  2602  0004BA  13BE               	iorwf	(??_Color+2)& (0+255),f,b
  2603  0004BC  90D8               	bcf	status,0,c
  2604  0004BE  35D2               	rlcf	Color@i& (0+255),w,b
  2605  0004C0  6ED9               	movwf	fsr2l,c
  2606  0004C2  35D3               	rlcf	(Color@i+1)& (0+255),w,b
  2607  0004C4  6EDA               	movwf	fsr2h,c
  2608  0004C6  0E60               	movlw	low _c
  2609  0004C8  26D9               	addwf	fsr2l,f,c
  2610  0004CA  0E00               	movlw	high _c
  2611  0004CC  22DA               	addwfc	fsr2h,f,c
  2612  0004CE  C0BD  FFDE         	movff	??_Color+1,postinc2
  2613  0004D2  C0BE  FFDD         	movff	??_Color+2,postdec2
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;skS11059-02DT.c: 227:     I2C_Stop();
  2617  0004D6  ECEB  F00C         	call	_I2C_Stop	;wreg free
  2618                           
  2619                           ;skS11059-02DT.c: 229:     LCD_Clear() ;
  2620  0004DA  ECF7  F00B         	call	_LCD_Clear	;wreg free
  2621                           
  2622                           ;skS11059-02DT.c: 230:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2623  0004DE  0E68               	movlw	104
  2624  0004E0  0100               	movlb	0	; () banked
  2625  0004E2  6FBC               	movwf	??_Color& (0+255),b
  2626  0004E4  0EE4               	movlw	228
  2627  0004E6                     u3177:
  2628  0004E6  2EE8               	decfsz	wreg,f,c
  2629  0004E8  D7FE               	bra	u3177
  2630  0004EA  2FBC               	decfsz	??_Color& (0+255),f,b
  2631  0004EC  D7FC               	bra	u3177
  2632  0004EE  F000               	nop	
  2633                           
  2634                           ;skS11059-02DT.c: 232:     i=0;
  2635  0004F0  0E00               	movlw	0
  2636  0004F2  0100               	movlb	0	; () banked
  2637  0004F4  6FD3               	movwf	(Color@i+1)& (0+255),b
  2638  0004F6  0E00               	movlw	0
  2639  0004F8  6FD2               	movwf	Color@i& (0+255),b
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;skS11059-02DT.c: 233:     sprintf(buf,"R:0x%04x",c[i]);
  2643  0004FA  0EC0               	movlw	low Color@buf
  2644  0004FC  6FAC               	movwf	sprintf@s& (0+255),b
  2645  0004FE  0E00               	movlw	high Color@buf
  2646  000500  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2647  000502  0E1C               	movlw	low STR_1
  2648  000504  6FAE               	movwf	sprintf@fmt& (0+255),b
  2649  000506  0E02               	movlw	high STR_1
  2650  000508  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2651  00050A  C060  F0B0         	movff	_c,?_sprintf+4
  2652  00050E  C061  F0B1         	movff	_c+1,?_sprintf+5
  2653  000512  ECEE  F00A         	call	_sprintf	;wreg free
  2654                           
  2655                           ;skS11059-02DT.c: 234:     LCD_Puts(buf);
  2656  000516  0EC0               	movlw	low Color@buf
  2657  000518  6E08               	movwf	LCD_Puts@s,c
  2658  00051A  0E00               	movlw	high Color@buf
  2659  00051C  6E09               	movwf	LCD_Puts@s+1,c
  2660  00051E  EC69  F00A         	call	_LCD_Puts	;wreg free
  2661                           
  2662                           ;skS11059-02DT.c: 235:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2663  000522  0E68               	movlw	104
  2664  000524  0100               	movlb	0	; () banked
  2665  000526  6FBC               	movwf	??_Color& (0+255),b
  2666  000528  0EE4               	movlw	228
  2667  00052A                     u3187:
  2668  00052A  2EE8               	decfsz	wreg,f,c
  2669  00052C  D7FE               	bra	u3187
  2670  00052E  2FBC               	decfsz	??_Color& (0+255),f,b
  2671  000530  D7FC               	bra	u3187
  2672  000532  F000               	nop	
  2673                           
  2674                           ;skS11059-02DT.c: 236:     i++;
  2675  000534  0100               	movlb	0	; () banked
  2676  000536  4BD2               	infsnz	Color@i& (0+255),f,b
  2677  000538  2BD3               	incf	(Color@i+1)& (0+255),f,b
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;skS11059-02DT.c: 238:     sprintf(buf,"G:0x%04x",c[i]);
  2681  00053A  0EC0               	movlw	low Color@buf
  2682  00053C  6FAC               	movwf	sprintf@s& (0+255),b
  2683  00053E  0E00               	movlw	high Color@buf
  2684  000540  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2685  000542  0E0A               	movlw	low STR_2
  2686  000544  6FAE               	movwf	sprintf@fmt& (0+255),b
  2687  000546  0E02               	movlw	high STR_2
  2688  000548  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2689  00054A  90D8               	bcf	status,0,c
  2690  00054C  35D2               	rlcf	Color@i& (0+255),w,b
  2691  00054E  6ED9               	movwf	fsr2l,c
  2692  000550  35D3               	rlcf	(Color@i+1)& (0+255),w,b
  2693  000552  6EDA               	movwf	fsr2h,c
  2694  000554  0E60               	movlw	low _c
  2695  000556  26D9               	addwf	fsr2l,f,c
  2696  000558  0E00               	movlw	high _c
  2697  00055A  22DA               	addwfc	fsr2h,f,c
  2698  00055C  CFDE F0B0          	movff	postinc2,?_sprintf+4
  2699  000560  CFDD F0B1          	movff	postdec2,?_sprintf+5
  2700  000564  ECEE  F00A         	call	_sprintf	;wreg free
  2701                           
  2702                           ;skS11059-02DT.c: 239:     LCD_Puts(buf);
  2703  000568  0EC0               	movlw	low Color@buf
  2704  00056A  6E08               	movwf	LCD_Puts@s,c
  2705  00056C  0E00               	movlw	high Color@buf
  2706  00056E  6E09               	movwf	LCD_Puts@s+1,c
  2707  000570  EC69  F00A         	call	_LCD_Puts	;wreg free
  2708                           
  2709                           ;skS11059-02DT.c: 240:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2710  000574  0E68               	movlw	104
  2711  000576  0100               	movlb	0	; () banked
  2712  000578  6FBC               	movwf	??_Color& (0+255),b
  2713  00057A  0EE4               	movlw	228
  2714  00057C                     u3197:
  2715  00057C  2EE8               	decfsz	wreg,f,c
  2716  00057E  D7FE               	bra	u3197
  2717  000580  2FBC               	decfsz	??_Color& (0+255),f,b
  2718  000582  D7FC               	bra	u3197
  2719  000584  F000               	nop	
  2720                           
  2721                           ;skS11059-02DT.c: 241:     i++;
  2722  000586  0100               	movlb	0	; () banked
  2723  000588  4BD2               	infsnz	Color@i& (0+255),f,b
  2724  00058A  2BD3               	incf	(Color@i+1)& (0+255),f,b
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;skS11059-02DT.c: 243:     LCD_SetCursor(0,1);
  2728  00058C  0E00               	movlw	0
  2729  00058E  6E0C               	movwf	LCD_SetCursor@col+1,c
  2730  000590  0E00               	movlw	0
  2731  000592  6E0B               	movwf	LCD_SetCursor@col,c
  2732  000594  0E00               	movlw	0
  2733  000596  6E0E               	movwf	LCD_SetCursor@row+1,c
  2734  000598  0E01               	movlw	1
  2735  00059A  6E0D               	movwf	LCD_SetCursor@row,c
  2736  00059C  EC59  F00C         	call	_LCD_SetCursor	;wreg free
  2737                           
  2738                           ;skS11059-02DT.c: 244:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2739  0005A0  0E68               	movlw	104
  2740  0005A2  0100               	movlb	0	; () banked
  2741  0005A4  6FBC               	movwf	??_Color& (0+255),b
  2742  0005A6  0EE4               	movlw	228
  2743  0005A8                     u3207:
  2744  0005A8  2EE8               	decfsz	wreg,f,c
  2745  0005AA  D7FE               	bra	u3207
  2746  0005AC  2FBC               	decfsz	??_Color& (0+255),f,b
  2747  0005AE  D7FC               	bra	u3207
  2748  0005B0  F000               	nop	
  2749                           
  2750                           ;skS11059-02DT.c: 246:     sprintf(buf,"B:0x%04x",c[i]);
  2751  0005B2  0EC0               	movlw	low Color@buf
  2752  0005B4  0100               	movlb	0	; () banked
  2753  0005B6  6FAC               	movwf	sprintf@s& (0+255),b
  2754  0005B8  0E00               	movlw	high Color@buf
  2755  0005BA  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2756  0005BC  0E01               	movlw	low STR_3
  2757  0005BE  6FAE               	movwf	sprintf@fmt& (0+255),b
  2758  0005C0  0E02               	movlw	high STR_3
  2759  0005C2  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2760  0005C4  90D8               	bcf	status,0,c
  2761  0005C6  35D2               	rlcf	Color@i& (0+255),w,b
  2762  0005C8  6ED9               	movwf	fsr2l,c
  2763  0005CA  35D3               	rlcf	(Color@i+1)& (0+255),w,b
  2764  0005CC  6EDA               	movwf	fsr2h,c
  2765  0005CE  0E60               	movlw	low _c
  2766  0005D0  26D9               	addwf	fsr2l,f,c
  2767  0005D2  0E00               	movlw	high _c
  2768  0005D4  22DA               	addwfc	fsr2h,f,c
  2769  0005D6  CFDE F0B0          	movff	postinc2,?_sprintf+4
  2770  0005DA  CFDD F0B1          	movff	postdec2,?_sprintf+5
  2771  0005DE  ECEE  F00A         	call	_sprintf	;wreg free
  2772                           
  2773                           ;skS11059-02DT.c: 247:     LCD_Puts(buf);
  2774  0005E2  0EC0               	movlw	low Color@buf
  2775  0005E4  6E08               	movwf	LCD_Puts@s,c
  2776  0005E6  0E00               	movlw	high Color@buf
  2777  0005E8  6E09               	movwf	LCD_Puts@s+1,c
  2778  0005EA  EC69  F00A         	call	_LCD_Puts	;wreg free
  2779                           
  2780                           ;skS11059-02DT.c: 248:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2781  0005EE  0E68               	movlw	104
  2782  0005F0  0100               	movlb	0	; () banked
  2783  0005F2  6FBC               	movwf	??_Color& (0+255),b
  2784  0005F4  0EE4               	movlw	228
  2785  0005F6                     u3217:
  2786  0005F6  2EE8               	decfsz	wreg,f,c
  2787  0005F8  D7FE               	bra	u3217
  2788  0005FA  2FBC               	decfsz	??_Color& (0+255),f,b
  2789  0005FC  D7FC               	bra	u3217
  2790  0005FE  F000               	nop	
  2791                           
  2792                           ;skS11059-02DT.c: 249:     i++;
  2793  000600  0100               	movlb	0	; () banked
  2794  000602  4BD2               	infsnz	Color@i& (0+255),f,b
  2795  000604  2BD3               	incf	(Color@i+1)& (0+255),f,b
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;skS11059-02DT.c: 251:     sprintf(buf,"I:0x%04x",c[i]);
  2799  000606  0EC0               	movlw	low Color@buf
  2800  000608  6FAC               	movwf	sprintf@s& (0+255),b
  2801  00060A  0E00               	movlw	high Color@buf
  2802  00060C  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2803  00060E  0E13               	movlw	low STR_4
  2804  000610  6FAE               	movwf	sprintf@fmt& (0+255),b
  2805  000612  0E02               	movlw	high STR_4
  2806  000614  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2807  000616  90D8               	bcf	status,0,c
  2808  000618  35D2               	rlcf	Color@i& (0+255),w,b
  2809  00061A  6ED9               	movwf	fsr2l,c
  2810  00061C  35D3               	rlcf	(Color@i+1)& (0+255),w,b
  2811  00061E  6EDA               	movwf	fsr2h,c
  2812  000620  0E60               	movlw	low _c
  2813  000622  26D9               	addwf	fsr2l,f,c
  2814  000624  0E00               	movlw	high _c
  2815  000626  22DA               	addwfc	fsr2h,f,c
  2816  000628  CFDE F0B0          	movff	postinc2,?_sprintf+4
  2817  00062C  CFDD F0B1          	movff	postdec2,?_sprintf+5
  2818  000630  ECEE  F00A         	call	_sprintf	;wreg free
  2819                           
  2820                           ;skS11059-02DT.c: 252:     LCD_Puts(buf);
  2821  000634  0EC0               	movlw	low Color@buf
  2822  000636  6E08               	movwf	LCD_Puts@s,c
  2823  000638  0E00               	movlw	high Color@buf
  2824  00063A  6E09               	movwf	LCD_Puts@s+1,c
  2825  00063C  EC69  F00A         	call	_LCD_Puts	;wreg free
  2826                           
  2827                           ;skS11059-02DT.c: 253:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2828  000640  0E68               	movlw	104
  2829  000642  0100               	movlb	0	; () banked
  2830  000644  6FBC               	movwf	??_Color& (0+255),b
  2831  000646  0EE4               	movlw	228
  2832  000648                     u3227:
  2833  000648  2EE8               	decfsz	wreg,f,c
  2834  00064A  D7FE               	bra	u3227
  2835  00064C  2FBC               	decfsz	??_Color& (0+255),f,b
  2836  00064E  D7FC               	bra	u3227
  2837  000650  F000               	nop	
  2838  000652  0012               	return		;funcret
  2839  000654                     __end_of_Color:
  2840                           	opt callstack 0
  2841                           
  2842 ;; *************** function _sprintf *****************
  2843 ;; Defined at:
  2844 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  s               2    8[BANK0 ] PTR unsigned char 
  2847 ;;		 -> Color@buf(16), Color_Read@buf(16), 
  2848 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
  2849 ;;		 -> STR_8(9), STR_7(9), STR_6(9), STR_5(9), 
  2850 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  f               6   18[BANK0 ] struct _IO_FILE
  2853 ;;  ap              2   16[BANK0 ] PTR void [1]
  2854 ;;		 -> ?_sprintf(2), 
  2855 ;;  ret             2    0        int 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2    8[BANK0 ] int 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1
  2865 ;;      Params:         0       6       0
  2866 ;;      Locals:         0      10       0
  2867 ;;      Temps:          0       0       0
  2868 ;;      Totals:         0      16       0
  2869 ;;Total ram usage:       16 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    8
  2872 ;; This function calls:
  2873 ;;		_vfprintf
  2874 ;; This function is called by:
  2875 ;;		_Color_Read
  2876 ;;		_Color
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text10
  2881  0015DC                     __ptext10:
  2882                           	opt callstack 0
  2883  0015DC                     _sprintf:
  2884                           	opt callstack 21
  2885                           
  2886                           ;incstack = 0
  2887  0015DC  0EB0               	movlw	low (?_sprintf+4)
  2888  0015DE  0100               	movlb	0	; () banked
  2889  0015E0  6FB4               	movwf	sprintf@ap& (0+255),b
  2890  0015E2  0E00               	movlw	high (?_sprintf+4)
  2891  0015E4  6FB5               	movwf	(sprintf@ap+1)& (0+255),b
  2892  0015E6  C0AC  F0B6         	movff	sprintf@s,sprintf@f
  2893  0015EA  C0AD  F0B7         	movff	sprintf@s+1,sprintf@f+1
  2894                           
  2895                           ; BSR set to: 0
  2896  0015EE  0E00               	movlw	0
  2897  0015F0  6FB9               	movwf	(sprintf@f+3)& (0+255),b
  2898  0015F2  0E00               	movlw	0
  2899  0015F4  6FB8               	movwf	(sprintf@f+2)& (0+255),b
  2900                           
  2901                           ; BSR set to: 0
  2902  0015F6  0E00               	movlw	0
  2903  0015F8  6FBB               	movwf	(sprintf@f+5)& (0+255),b
  2904  0015FA  0E00               	movlw	0
  2905  0015FC  6FBA               	movwf	(sprintf@f+4)& (0+255),b
  2906                           
  2907                           ; BSR set to: 0
  2908  0015FE  0EB6               	movlw	low sprintf@f
  2909  001600  6FA4               	movwf	vfprintf@fp& (0+255),b
  2910  001602  0E00               	movlw	high sprintf@f
  2911  001604  6FA5               	movwf	(vfprintf@fp+1)& (0+255),b
  2912  001606  C0AE  F0A6         	movff	sprintf@fmt,vfprintf@fmt
  2913  00160A  C0AF  F0A7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2914  00160E  0EB4               	movlw	low sprintf@ap
  2915  001610  6FA8               	movwf	vfprintf@ap& (0+255),b
  2916  001612  0E00               	movlw	high sprintf@ap
  2917  001614  6FA9               	movwf	(vfprintf@ap+1)& (0+255),b
  2918  001616  EC99  F00A         	call	_vfprintf	;wreg free
  2919  00161A  0100               	movlb	0	; () banked
  2920  00161C  51B8               	movf	(sprintf@f+2)& (0+255),w,b
  2921  00161E  25AC               	addwf	sprintf@s& (0+255),w,b
  2922  001620  6ED9               	movwf	fsr2l,c
  2923  001622  51B9               	movf	(sprintf@f+3)& (0+255),w,b
  2924  001624  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  2925  001626  6EDA               	movwf	fsr2h,c
  2926  001628  0E00               	movlw	0
  2927  00162A  6EDF               	movwf	indf2,c
  2928                           
  2929                           ; BSR set to: 0
  2930  00162C  0012               	return		;funcret
  2931  00162E                     __end_of_sprintf:
  2932                           	opt callstack 0
  2933                           
  2934 ;; *************** function _vfprintf *****************
  2935 ;; Defined at:
  2936 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2939 ;;		 -> sprintf@f(6), 
  2940 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2941 ;;		 -> STR_8(9), STR_7(9), STR_6(9), STR_5(9), 
  2942 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  2943 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2944 ;;		 -> sprintf@ap(2), 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  2947 ;;		 -> STR_8(9), STR_7(9), STR_6(9), STR_5(9), 
  2948 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2    0[BANK0 ] int 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1
  2958 ;;      Params:         0       6       0
  2959 ;;      Locals:         0       2       0
  2960 ;;      Temps:          0       0       0
  2961 ;;      Totals:         0       8       0
  2962 ;;Total ram usage:        8 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    7
  2965 ;; This function calls:
  2966 ;;		_vfpfcnvrt
  2967 ;; This function is called by:
  2968 ;;		_sprintf
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text11
  2973  001532                     __ptext11:
  2974                           	opt callstack 0
  2975  001532                     _vfprintf:
  2976                           	opt callstack 21
  2977                           
  2978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;incstack = 0
  2982  001532  C0A6  F0AA         	movff	vfprintf@fmt,vfprintf@cfmt
  2983  001536  C0A7  F0AB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2984                           
  2985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2986  00153A  0E00               	movlw	0
  2987  00153C  0100               	movlb	0	; () banked
  2988  00153E  6F71               	movwf	(_nout+1)& (0+255),b
  2989  001540  0E00               	movlw	0
  2990  001542  6F70               	movwf	_nout& (0+255),b
  2991                           
  2992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2993  001544  D013               	goto	l3879
  2994  001546                     l3877:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2998  001546  C0A4  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2999  00154A  C0A5  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3000  00154E  0EAA               	movlw	low vfprintf@cfmt
  3001  001550  6E45               	movwf	vfpfcnvrt@fmt,c
  3002  001552  0E00               	movlw	high vfprintf@cfmt
  3003  001554  6E46               	movwf	vfpfcnvrt@fmt+1,c
  3004  001556  C0A8  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3005  00155A  C0A9  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3006  00155E  EC03  F005         	call	_vfpfcnvrt	;wreg free
  3007  001562  5043               	movf	?_vfpfcnvrt,w,c
  3008  001564  0100               	movlb	0	; () banked
  3009  001566  2770               	addwf	_nout& (0+255),f,b
  3010  001568  5044               	movf	?_vfpfcnvrt+1,w,c
  3011  00156A  2371               	addwfc	(_nout+1)& (0+255),f,b
  3012  00156C                     l3879:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3016  00156C  C0AA  FFF6         	movff	vfprintf@cfmt,tblptrl
  3017  001570  C0AB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3018  001574                     	if	0	;tblptru may be non-zero
  3019  001574                     	endif
  3020  001574                     	if	0	;tblptru may be non-zero
  3021  001574                     	endif
  3022  001574  0008               	tblrd		*
  3023  001576  50F5               	movf	tablat,w,c
  3024  001578  0900               	iorlw	0
  3025  00157A  A4D8               	btfss	status,2,c
  3026  00157C  D7E4               	goto	l3877
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3030  00157E  C070  F0A4         	movff	_nout,?_vfprintf
  3031  001582  C071  F0A5         	movff	_nout+1,?_vfprintf+1
  3032                           
  3033                           ; BSR set to: 0
  3034  001586  0012               	return		;funcret
  3035  001588                     __end_of_vfprintf:
  3036                           	opt callstack 0
  3037                           
  3038 ;; *************** function _vfpfcnvrt *****************
  3039 ;; Defined at:
  3040 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3043 ;;		 -> sprintf@f(6), 
  3044 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3045 ;;		 -> vfprintf@cfmt(2), 
  3046 ;;  ap              2   70[COMRAM] PTR PTR void 
  3047 ;;		 -> sprintf@ap(2), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  llu             8   76[COMRAM] unsigned long long 
  3050 ;;  ll              8    0        long long 
  3051 ;;  f               4    0        long long 
  3052 ;;  vp              3    0        PTR void 
  3053 ;;  ct              3    0        unsigned char [3]
  3054 ;;  cp              3    0        PTR unsigned char 
  3055 ;;  done            2   85[COMRAM] int 
  3056 ;;  i               2    0        int 
  3057 ;;  c               1   84[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  2   66[COMRAM] int 
  3060 ;; Registers used:
  3061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1
  3067 ;;      Params:         6       0       0
  3068 ;;      Locals:        13       0       0
  3069 ;;      Temps:          4       0       0
  3070 ;;      Totals:        23       0       0
  3071 ;;Total ram usage:       23 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    6
  3074 ;; This function calls:
  3075 ;;		_atoi
  3076 ;;		_fputc
  3077 ;;		_isdigit
  3078 ;;		_xtoa
  3079 ;; This function is called by:
  3080 ;;		_vfprintf
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text12
  3085  000A06                     __ptext12:
  3086                           	opt callstack 0
  3087  000A06                     _vfpfcnvrt:
  3088                           	opt callstack 21
  3089                           
  3090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;incstack = 0
  3094  000A06  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3095  000A0A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3096  000A0E  CFDE FFF6          	movff	postinc2,tblptrl
  3097  000A12  CFDD FFF7          	movff	postdec2,tblptrh
  3098  000A16                     	if	0	;tblptru may be non-zero
  3099  000A16                     	endif
  3100  000A16                     	if	0	;tblptru may be non-zero
  3101  000A16                     	endif
  3102  000A16  0008               	tblrd		*
  3103  000A18  50F5               	movf	tablat,w,c
  3104  000A1A  0A25               	xorlw	37
  3105  000A1C  A4D8               	btfss	status,2,c
  3106  000A1E  D158               	goto	l3859
  3107                           
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3109  000A20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3110  000A24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3111  000A28  2ADE               	incf	postinc2,f,c
  3112  000A2A  0E00               	movlw	0
  3113  000A2C  22DD               	addwfc	postdec2,f,c
  3114                           
  3115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3116  000A2E  0E00               	movlw	0
  3117  000A30  0100               	movlb	0	; () banked
  3118  000A32  6F73               	movwf	(_width+1)& (0+255),b
  3119  000A34  0E00               	movlw	0
  3120  000A36  6F72               	movwf	_width& (0+255),b
  3121  000A38  C072  F076         	movff	_width,_flags
  3122  000A3C  C073  F077         	movff	_width+1,_flags+1
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3126  000A40  6974               	setf	_prec& (0+255),b
  3127  000A42  6975               	setf	(_prec+1)& (0+255),b
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3131  000A44  0E00               	movlw	0
  3132  000A46  6E57               	movwf	vfpfcnvrt@done+1,c
  3133  000A48  0E00               	movlw	0
  3134  000A4A  D019               	goto	L1
  3135  000A4C                     l3781:
  3136                           
  3137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3138  000A4C  0100               	movlb	0	; () banked
  3139  000A4E  8176               	bsf	_flags& (0+255),0,b
  3140  000A50                     l3783:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3144  000A50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3145  000A54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3146  000A58  2ADE               	incf	postinc2,f,c
  3147  000A5A  0E00               	movlw	0
  3148  000A5C  22DD               	addwfc	postdec2,f,c
  3149                           
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3151  000A5E  D032               	goto	l3807
  3152  000A60                     l3785:
  3153                           
  3154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3155  000A60  0100               	movlb	0	; () banked
  3156  000A62  8376               	bsf	_flags& (0+255),1,b
  3157  000A64  D7F5               	goto	l3783
  3158  000A66                     l3789:
  3159                           
  3160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3161  000A66  0100               	movlb	0	; () banked
  3162  000A68  8576               	bsf	_flags& (0+255),2,b
  3163  000A6A  D7F2               	goto	l3783
  3164  000A6C                     l3793:
  3165                           
  3166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3167  000A6C  0100               	movlb	0	; () banked
  3168  000A6E  8776               	bsf	_flags& (0+255),3,b
  3169  000A70  D7EF               	goto	l3783
  3170  000A72                     l3797:
  3171                           
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3173  000A72  0100               	movlb	0	; () banked
  3174  000A74  8976               	bsf	_flags& (0+255),4,b
  3175  000A76  D7EC               	goto	l3783
  3176  000A78                     l3801:
  3177                           
  3178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3179  000A78  0E00               	movlw	0
  3180  000A7A  6E57               	movwf	vfpfcnvrt@done+1,c
  3181  000A7C  0E01               	movlw	1
  3182  000A7E                     L1:
  3183  000A7E  6E56               	movwf	vfpfcnvrt@done,c
  3184                           
  3185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3186  000A80  D021               	goto	l3807
  3187  000A82                     l3805:
  3188  000A82  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3189  000A86  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3190  000A8A  CFDE FFF6          	movff	postinc2,tblptrl
  3191  000A8E  CFDD FFF7          	movff	postdec2,tblptrh
  3192  000A92                     	if	0	;tblptru may be non-zero
  3193  000A92                     	endif
  3194  000A92                     	if	0	;tblptru may be non-zero
  3195  000A92                     	endif
  3196  000A92  0008               	tblrd		*
  3197  000A94  50F5               	movf	tablat,w,c
  3198  000A96  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  3199  000A98  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3200                           
  3201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3202                           ; Switch size 1, requested type "simple"
  3203                           ; Number of cases is 1, Range of values is 0 to 0
  3204                           ; switch strategies available:
  3205                           ; Name         Instructions Cycles
  3206                           ; simple_byte            4     3 (average)
  3207                           ;	Chosen strategy is simple_byte
  3208  000A9A  504A               	movf	??_vfpfcnvrt+1,w,c
  3209  000A9C  0A00               	xorlw	0	; case 0
  3210  000A9E  A4D8               	btfss	status,2,c
  3211  000AA0  D7EB               	goto	l3801
  3212                           
  3213                           ; Switch size 1, requested type "simple"
  3214                           ; Number of cases is 5, Range of values is 32 to 48
  3215                           ; switch strategies available:
  3216                           ; Name         Instructions Cycles
  3217                           ; simple_byte           16     9 (average)
  3218                           ;	Chosen strategy is simple_byte
  3219  000AA2  5049               	movf	??_vfpfcnvrt,w,c
  3220  000AA4  0A20               	xorlw	32	; case 32
  3221  000AA6  B4D8               	btfsc	status,2,c
  3222  000AA8  D7E1               	goto	l3793
  3223  000AAA  0A03               	xorlw	3	; case 35
  3224  000AAC  B4D8               	btfsc	status,2,c
  3225  000AAE  D7E1               	goto	l3797
  3226  000AB0  0A08               	xorlw	8	; case 43
  3227  000AB2  B4D8               	btfsc	status,2,c
  3228  000AB4  D7D8               	goto	l3789
  3229  000AB6  0A06               	xorlw	6	; case 45
  3230  000AB8  B4D8               	btfsc	status,2,c
  3231  000ABA  D7C8               	goto	l3781
  3232  000ABC  0A1D               	xorlw	29	; case 48
  3233  000ABE  B4D8               	btfsc	status,2,c
  3234  000AC0  D7CF               	goto	l3785
  3235  000AC2  D7DA               	goto	l3801
  3236  000AC4                     l3807:
  3237                           
  3238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3239  000AC4  5056               	movf	vfpfcnvrt@done,w,c
  3240  000AC6  1057               	iorwf	vfpfcnvrt@done+1,w,c
  3241  000AC8  B4D8               	btfsc	status,2,c
  3242  000ACA  D7DB               	goto	l3805
  3243                           
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3245  000ACC  0100               	movlb	0	; () banked
  3246  000ACE  B176               	btfsc	_flags& (0+255),0,b
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3250  000AD0  9376               	bcf	_flags& (0+255),1,b
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3254  000AD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3255  000AD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3256  000ADA  CFDE FFF6          	movff	postinc2,tblptrl
  3257  000ADE  CFDD FFF7          	movff	postdec2,tblptrh
  3258  000AE2                     	if	0	;tblptru may be non-zero
  3259  000AE2                     	endif
  3260  000AE2                     	if	0	;tblptru may be non-zero
  3261  000AE2                     	endif
  3262  000AE2  0008               	tblrd		*
  3263  000AE4  50F5               	movf	tablat,w,c
  3264  000AE6  0A2A               	xorlw	42
  3265  000AE8  A4D8               	btfss	status,2,c
  3266  000AEA  D023               	goto	l3819
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3270  000AEC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3271  000AF0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3272  000AF4  2ADE               	incf	postinc2,f,c
  3273  000AF6  0E00               	movlw	0
  3274  000AF8  22DD               	addwfc	postdec2,f,c
  3275                           
  3276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3277  000AFA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3278  000AFE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3279  000B02  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3280  000B06  0E02               	movlw	2
  3281  000B08  26DE               	addwf	postinc2,f,c
  3282  000B0A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3283  000B0E  0E00               	movlw	0
  3284  000B10  22DD               	addwfc	postdec2,f,c
  3285  000B12  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3286  000B16  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3287  000B1A  CFDE F072          	movff	postinc2,_width
  3288  000B1E  CFDD F073          	movff	postdec2,_width+1
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3292  000B22  AF73               	btfss	(_width+1)& (0+255),7,b
  3293  000B24  D03F               	goto	u2810
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3297  000B26  8176               	bsf	_flags& (0+255),0,b
  3298                           
  3299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3300  000B28  6D72               	negf	_width& (0+255),b
  3301  000B2A  1F73               	comf	(_width+1)& (0+255),f,b
  3302  000B2C  B0D8               	btfsc	status,0,c
  3303  000B2E  2B73               	incf	(_width+1)& (0+255),f,b
  3304  000B30  D039               	goto	u2810
  3305  000B32                     l3819:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3309  000B32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3310  000B36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3311  000B3A  CFDE F008          	movff	postinc2,atoi@s
  3312  000B3E  CFDD F009          	movff	postdec2,atoi@s+1
  3313  000B42  EC48  F008         	call	_atoi	;wreg free
  3314  000B46  C008  F072         	movff	?_atoi,_width
  3315  000B4A  C009  F073         	movff	?_atoi+1,_width+1
  3316                           
  3317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3318  000B4E  D007               	goto	l3823
  3319  000B50                     l3821:
  3320                           
  3321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3322  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3323  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3324  000B58  2ADE               	incf	postinc2,f,c
  3325  000B5A  0E00               	movlw	0
  3326  000B5C  22DD               	addwfc	postdec2,f,c
  3327  000B5E                     l3823:
  3328  000B5E  0ED0               	movlw	208
  3329  000B60  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  3330  000B62  0EFF               	movlw	255
  3331  000B64  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3332  000B66  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3333  000B6A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3334  000B6E  CFDE FFF6          	movff	postinc2,tblptrl
  3335  000B72  CFDD FFF7          	movff	postdec2,tblptrh
  3336  000B76                     	if	0	;tblptru may be non-zero
  3337  000B76                     	endif
  3338  000B76                     	if	0	;tblptru may be non-zero
  3339  000B76                     	endif
  3340  000B76  0008               	tblrd		*
  3341  000B78  50F5               	movf	tablat,w,c
  3342  000B7A  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3343  000B7C  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3344  000B7E  5049               	movf	??_vfpfcnvrt,w,c
  3345  000B80  264B               	addwf	??_vfpfcnvrt+2,f,c
  3346  000B82  504A               	movf	??_vfpfcnvrt+1,w,c
  3347  000B84  224C               	addwfc	??_vfpfcnvrt+3,f,c
  3348  000B86  504C               	movf	??_vfpfcnvrt+3,w,c
  3349  000B88  E106               	bnz	u2790
  3350  000B8A  0E0A               	movlw	10
  3351  000B8C  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  3352  000B8E  B0D8               	btfsc	status,0,c
  3353  000B90  D002               	goto	u2790
  3354  000B92  0E01               	movlw	1
  3355  000B94  D001               	goto	u2800
  3356  000B96                     u2790:
  3357  000B96  0E00               	movlw	0
  3358  000B98                     u2800:
  3359  000B98  6E58               	movwf	_vfpfcnvrt$1189,c
  3360  000B9A  6A59               	clrf	_vfpfcnvrt$1189+1,c
  3361  000B9C  5058               	movf	_vfpfcnvrt$1189,w,c
  3362  000B9E  1059               	iorwf	_vfpfcnvrt$1189+1,w,c
  3363  000BA0  A4D8               	btfss	status,2,c
  3364  000BA2  D7D6               	goto	l3821
  3365  000BA4                     u2810:
  3366                           
  3367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3368  000BA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3369  000BA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3370  000BAC  CFDE FFF6          	movff	postinc2,tblptrl
  3371  000BB0  CFDD FFF7          	movff	postdec2,tblptrh
  3372  000BB4                     	if	0	;tblptru may be non-zero
  3373  000BB4                     	endif
  3374  000BB4                     	if	0	;tblptru may be non-zero
  3375  000BB4                     	endif
  3376  000BB4  0008               	tblrd		*
  3377  000BB6  50F5               	movf	tablat,w,c
  3378  000BB8  0A78               	xorlw	120
  3379  000BBA  B4D8               	btfsc	status,2,c
  3380  000BBC  D00D               	goto	u2830
  3381  000BBE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3382  000BC2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3383  000BC6  CFDE FFF6          	movff	postinc2,tblptrl
  3384  000BCA  CFDD FFF7          	movff	postdec2,tblptrh
  3385  000BCE                     	if	0	;tblptru may be non-zero
  3386  000BCE                     	endif
  3387  000BCE                     	if	0	;tblptru may be non-zero
  3388  000BCE                     	endif
  3389  000BCE  0008               	tblrd		*
  3390  000BD0  50F5               	movf	tablat,w,c
  3391  000BD2  0A58               	xorlw	88
  3392  000BD4  A4D8               	btfss	status,2,c
  3393  000BD6  D04D               	goto	l3843
  3394  000BD8                     u2830:
  3395                           
  3396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3397  000BD8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3398  000BDC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3399  000BE0  CFDE FFF6          	movff	postinc2,tblptrl
  3400  000BE4  CFDD FFF7          	movff	postdec2,tblptrh
  3401  000BE8                     	if	0	;tblptru may be non-zero
  3402  000BE8                     	endif
  3403  000BE8                     	if	0	;tblptru may be non-zero
  3404  000BE8                     	endif
  3405  000BE8  0008               	tblrd		*
  3406  000BEA  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  3407                           
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3409  000BEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3410  000BF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3411  000BF6  2ADE               	incf	postinc2,f,c
  3412  000BF8  0E00               	movlw	0
  3413  000BFA  22DD               	addwfc	postdec2,f,c
  3414                           
  3415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3416  000BFC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3417  000C00  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3418  000C04  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3419  000C08  0E02               	movlw	2
  3420  000C0A  26DE               	addwf	postinc2,f,c
  3421  000C0C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3422  000C10  0E00               	movlw	0
  3423  000C12  22DD               	addwfc	postdec2,f,c
  3424  000C14  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3425  000C18  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3426  000C1C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3427  000C20  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3428  000C24  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3429  000C28  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3430  000C2C  6A4F               	clrf	vfpfcnvrt@llu+2,c
  3431  000C2E  6A50               	clrf	vfpfcnvrt@llu+3,c
  3432  000C30  6A51               	clrf	vfpfcnvrt@llu+4,c
  3433  000C32  6A52               	clrf	vfpfcnvrt@llu+5,c
  3434  000C34  6A53               	clrf	vfpfcnvrt@llu+6,c
  3435  000C36  6A54               	clrf	vfpfcnvrt@llu+7,c
  3436                           
  3437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3438  000C38  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3439  000C3C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3440  000C40  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3441  000C44  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3442  000C48  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3443  000C4C  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3444  000C50  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3445  000C54  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3446  000C58  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3447  000C5C  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3448  000C60  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  3449  000C64  EC82  F006         	call	_xtoa	;wreg free
  3450  000C68  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3451  000C6C  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3452  000C70  0012               	return	
  3453  000C72                     l3843:
  3454                           
  3455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3456  000C72  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3457  000C76  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3458  000C7A  CFDE FFF6          	movff	postinc2,tblptrl
  3459  000C7E  CFDD FFF7          	movff	postdec2,tblptrh
  3460  000C82                     	if	0	;tblptru may be non-zero
  3461  000C82                     	endif
  3462  000C82                     	if	0	;tblptru may be non-zero
  3463  000C82                     	endif
  3464  000C82  0008               	tblrd		*
  3465  000C84  50F5               	movf	tablat,w,c
  3466  000C86  0A25               	xorlw	37
  3467  000C88  A4D8               	btfss	status,2,c
  3468  000C8A  D016               	goto	l3853
  3469                           
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3471  000C8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3472  000C90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3473  000C94  2ADE               	incf	postinc2,f,c
  3474  000C96  0E00               	movlw	0
  3475  000C98  22DD               	addwfc	postdec2,f,c
  3476                           
  3477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3478  000C9A  0E00               	movlw	0
  3479  000C9C  6E02               	movwf	fputc@c+1,c
  3480  000C9E  0E25               	movlw	37
  3481  000CA0  6E01               	movwf	fputc@c,c
  3482  000CA2  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3483  000CA6  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3484  000CAA  EC5B  F009         	call	_fputc	;wreg free
  3485  000CAE                     l3849:
  3486                           
  3487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3488  000CAE  0E00               	movlw	0
  3489  000CB0  6E44               	movwf	?_vfpfcnvrt+1,c
  3490  000CB2  0E01               	movlw	1
  3491  000CB4  6E43               	movwf	?_vfpfcnvrt,c
  3492  000CB6  0012               	return	
  3493  000CB8                     l3853:
  3494                           
  3495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3496  000CB8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3497  000CBC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3498  000CC0  2ADE               	incf	postinc2,f,c
  3499  000CC2  0E00               	movlw	0
  3500  000CC4  22DD               	addwfc	postdec2,f,c
  3501                           
  3502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3503  000CC6  0E00               	movlw	0
  3504  000CC8  6E44               	movwf	?_vfpfcnvrt+1,c
  3505  000CCA  0E00               	movlw	0
  3506  000CCC  6E43               	movwf	?_vfpfcnvrt,c
  3507  000CCE  0012               	return	
  3508  000CD0                     l3859:
  3509                           
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3511  000CD0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3512  000CD4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3513  000CD8  CFDE FFF6          	movff	postinc2,tblptrl
  3514  000CDC  CFDD FFF7          	movff	postdec2,tblptrh
  3515  000CE0                     	if	0	;tblptru may be non-zero
  3516  000CE0                     	endif
  3517  000CE0                     	if	0	;tblptru may be non-zero
  3518  000CE0                     	endif
  3519  000CE0  0008               	tblrd		*
  3520  000CE2  50F5               	movf	tablat,w,c
  3521  000CE4  6E01               	movwf	fputc@c,c
  3522  000CE6  6A02               	clrf	fputc@c+1,c
  3523  000CE8  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3524  000CEC  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3525  000CF0  EC5B  F009         	call	_fputc	;wreg free
  3526                           
  3527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3528  000CF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3529  000CF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3530  000CFC  2ADE               	incf	postinc2,f,c
  3531  000CFE  0E00               	movlw	0
  3532  000D00  22DD               	addwfc	postdec2,f,c
  3533  000D02  D7D5               	goto	l3849
  3534  000D04                     __end_of_vfpfcnvrt:
  3535                           	opt callstack 0
  3536                           
  3537 ;; *************** function _xtoa *****************
  3538 ;; Defined at:
  3539 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3542 ;;		 -> sprintf@f(6), 
  3543 ;;  d               8   29[COMRAM] unsigned long long 
  3544 ;;  x               1   37[COMRAM] unsigned char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  n               8   54[COMRAM] unsigned long long 
  3547 ;;  c               2   64[COMRAM] int 
  3548 ;;  i               2   62[COMRAM] int 
  3549 ;;  w               2   52[COMRAM] int 
  3550 ;;  p               2   50[COMRAM] int 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  2   27[COMRAM] int 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1
  3560 ;;      Params:        11       0       0
  3561 ;;      Locals:        20       0       0
  3562 ;;      Temps:          8       0       0
  3563 ;;      Totals:        39       0       0
  3564 ;;Total ram usage:       39 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    5
  3567 ;; This function calls:
  3568 ;;		_isalpha
  3569 ;;		_isupper
  3570 ;;		_pad
  3571 ;;		_toupper
  3572 ;; This function is called by:
  3573 ;;		_vfpfcnvrt
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text13
  3578  000D04                     __ptext13:
  3579                           	opt callstack 0
  3580  000D04                     _xtoa:
  3581                           	opt callstack 21
  3582                           
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3584                           
  3585                           ;incstack = 0
  3586  000D04  0100               	movlb	0	; () banked
  3587  000D06  AF75               	btfss	(_prec+1)& (0+255),7,b
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3591  000D08  9376               	bcf	_flags& (0+255),1,b
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3595  000D0A  BF75               	btfsc	(_prec+1)& (0+255),7,b
  3596  000D0C  D005               	goto	u2510
  3597  000D0E  5175               	movf	(_prec+1)& (0+255),w,b
  3598  000D10  E108               	bnz	l566
  3599  000D12  0574               	decf	_prec& (0+255),w,b
  3600  000D14  B0D8               	btfsc	status,0,c
  3601  000D16  D005               	goto	l566
  3602  000D18                     u2510:
  3603                           
  3604                           ; BSR set to: 0
  3605  000D18  0E00               	movlw	0
  3606  000D1A  6E34               	movwf	xtoa@p+1,c
  3607  000D1C  0E01               	movlw	1
  3608  000D1E  6E33               	movwf	xtoa@p,c
  3609  000D20  D004               	goto	l568
  3610  000D22                     l566:
  3611                           
  3612                           ; BSR set to: 0
  3613  000D22  C074  F033         	movff	_prec,xtoa@p
  3614  000D26  C075  F034         	movff	_prec+1,xtoa@p+1
  3615  000D2A                     l568:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3619  000D2A  C072  F035         	movff	_width,xtoa@w
  3620  000D2E  C073  F036         	movff	_width+1,xtoa@w+1
  3621                           
  3622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3623  000D32  A976               	btfss	_flags& (0+255),4,b
  3624  000D34  D004               	goto	l3673
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3628  000D36  0EFE               	movlw	254
  3629  000D38  2635               	addwf	xtoa@w,f,c
  3630  000D3A  0EFF               	movlw	255
  3631  000D3C  2236               	addwfc	xtoa@w+1,f,c
  3632  000D3E                     l3673:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3636  000D3E  C01E  F037         	movff	xtoa@d,xtoa@n
  3637  000D42  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3638  000D46  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3639  000D4A  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3640  000D4E  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3641  000D52  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3642  000D56  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3643  000D5A  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3647  000D5E  0E00               	movlw	0
  3648  000D60  6E40               	movwf	xtoa@i+1,c
  3649  000D62  0E1F               	movlw	31
  3650  000D64  6E3F               	movwf	xtoa@i,c
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3654  000D66  0E00               	movlw	0
  3655  000D68  6FA3               	movwf	(_dbuf+31)& (0+255),b
  3656                           
  3657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3658  000D6A  D093               	goto	l3709
  3659  000D6C                     l3679:
  3660                           
  3661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3662  000D6C  063F               	decf	xtoa@i,f,c
  3663  000D6E  A0D8               	btfss	status,0,c
  3664  000D70  0640               	decf	xtoa@i+1,f,c
  3665                           
  3666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3667  000D72  0E0F               	movlw	15
  3668  000D74  1437               	andwf	xtoa@n,w,c
  3669  000D76  6E41               	movwf	xtoa@c,c
  3670  000D78  6A42               	clrf	xtoa@c+1,c
  3671                           
  3672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3673  000D7A  BE42               	btfsc	xtoa@c+1,7,c
  3674  000D7C  D008               	goto	l3687
  3675  000D7E  5042               	movf	xtoa@c+1,w,c
  3676  000D80  E104               	bnz	u2530
  3677  000D82  0E0A               	movlw	10
  3678  000D84  5C41               	subwf	xtoa@c,w,c
  3679  000D86  A0D8               	btfss	status,0,c
  3680  000D88  D002               	goto	l3687
  3681  000D8A                     u2530:
  3682  000D8A  0E57               	movlw	87
  3683  000D8C  D001               	goto	L2
  3684  000D8E                     l3687:
  3685  000D8E  0E30               	movlw	48
  3686  000D90                     L2:
  3687  000D90  2441               	addwf	xtoa@c,w,c
  3688  000D92  6E41               	movwf	xtoa@c,c
  3689  000D94  0E00               	movlw	0
  3690  000D96  2042               	addwfc	xtoa@c+1,w,c
  3691  000D98  6E42               	movwf	xtoa@c+1,c
  3692                           
  3693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  3694  000D9A  0EBF               	movlw	191
  3695  000D9C  6E27               	movwf	??_xtoa& (0+255),c
  3696  000D9E  0EFF               	movlw	255
  3697  000DA0  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3698  000DA2  5026               	movf	xtoa@x,w,c
  3699  000DA4  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3700  000DA6  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  3701  000DA8  5027               	movf	??_xtoa,w,c
  3702  000DAA  2629               	addwf	??_xtoa+2,f,c
  3703  000DAC  5028               	movf	??_xtoa+1,w,c
  3704  000DAE  222A               	addwfc	??_xtoa+3,f,c
  3705  000DB0  502A               	movf	??_xtoa+3,w,c
  3706  000DB2  E106               	bnz	u2540
  3707  000DB4  0E1A               	movlw	26
  3708  000DB6  5C29               	subwf	??_xtoa+2,w,c
  3709  000DB8  B0D8               	btfsc	status,0,c
  3710  000DBA  D002               	goto	u2540
  3711  000DBC  0E01               	movlw	1
  3712  000DBE  D001               	goto	u2550
  3713  000DC0                     u2540:
  3714  000DC0  0E00               	movlw	0
  3715  000DC2                     u2550:
  3716  000DC2  6E2F               	movwf	_xtoa$1173,c
  3717  000DC4  6A30               	clrf	_xtoa$1173+1,c
  3718  000DC6  502F               	movf	_xtoa$1173,w,c
  3719  000DC8  1030               	iorwf	_xtoa$1173+1,w,c
  3720  000DCA  B4D8               	btfsc	status,2,c
  3721  000DCC  D027               	goto	l3701
  3722  000DCE  0E9F               	movlw	159
  3723  000DD0  6E27               	movwf	??_xtoa& (0+255),c
  3724  000DD2  0EFF               	movlw	255
  3725  000DD4  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3726  000DD6  0E20               	movlw	32
  3727  000DD8  1041               	iorwf	xtoa@c,w,c
  3728  000DDA  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3729  000DDC  0E00               	movlw	0
  3730  000DDE  1042               	iorwf	xtoa@c+1,w,c
  3731  000DE0  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  3732  000DE2  5027               	movf	??_xtoa,w,c
  3733  000DE4  2629               	addwf	??_xtoa+2,f,c
  3734  000DE6  5028               	movf	??_xtoa+1,w,c
  3735  000DE8  222A               	addwfc	??_xtoa+3,f,c
  3736  000DEA  502A               	movf	??_xtoa+3,w,c
  3737  000DEC  E106               	bnz	u2570
  3738  000DEE  0E1A               	movlw	26
  3739  000DF0  5C29               	subwf	??_xtoa+2,w,c
  3740  000DF2  B0D8               	btfsc	status,0,c
  3741  000DF4  D002               	goto	u2570
  3742  000DF6  0E01               	movlw	1
  3743  000DF8  D001               	goto	u2580
  3744  000DFA                     u2570:
  3745  000DFA  0E00               	movlw	0
  3746  000DFC                     u2580:
  3747  000DFC  6E31               	movwf	_xtoa$1174,c
  3748  000DFE  6A32               	clrf	_xtoa$1174+1,c
  3749  000E00  5031               	movf	_xtoa$1174,w,c
  3750  000E02  1032               	iorwf	_xtoa$1174+1,w,c
  3751  000E04  B4D8               	btfsc	status,2,c
  3752  000E06  D00A               	goto	l3701
  3753                           
  3754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3755  000E08  C041  F007         	movff	xtoa@c,toupper@c
  3756  000E0C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3757  000E10  EC3E  F00B         	call	_toupper	;wreg free
  3758  000E14  C007  F041         	movff	?_toupper,xtoa@c
  3759  000E18  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3760  000E1C                     l3701:
  3761                           
  3762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3763  000E1C  0E84               	movlw	low _dbuf
  3764  000E1E  243F               	addwf	xtoa@i,w,c
  3765  000E20  6ED9               	movwf	fsr2l,c
  3766  000E22  0E00               	movlw	high _dbuf
  3767  000E24  2040               	addwfc	xtoa@i+1,w,c
  3768  000E26  6EDA               	movwf	fsr2h,c
  3769  000E28  C041  FFDF         	movff	xtoa@c,indf2
  3770                           
  3771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3772  000E2C  0633               	decf	xtoa@p,f,c
  3773  000E2E  A0D8               	btfss	status,0,c
  3774  000E30  0634               	decf	xtoa@p+1,f,c
  3775                           
  3776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3777  000E32  0635               	decf	xtoa@w,f,c
  3778  000E34  A0D8               	btfss	status,0,c
  3779  000E36  0636               	decf	xtoa@w+1,f,c
  3780                           
  3781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3782  000E38  C037  F027         	movff	xtoa@n,??_xtoa
  3783  000E3C  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3784  000E40  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3785  000E44  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3786  000E48  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3787  000E4C  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3788  000E50  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3789  000E54  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3790  000E58  0E05               	movlw	5
  3791  000E5A  D009               	goto	u2600
  3792  000E5C                     u2605:
  3793  000E5C  90D8               	bcf	status,0,c
  3794  000E5E  322E               	rrcf	??_xtoa+7,f,c
  3795  000E60  322D               	rrcf	??_xtoa+6,f,c
  3796  000E62  322C               	rrcf	??_xtoa+5,f,c
  3797  000E64  322B               	rrcf	??_xtoa+4,f,c
  3798  000E66  322A               	rrcf	??_xtoa+3,f,c
  3799  000E68  3229               	rrcf	??_xtoa+2,f,c
  3800  000E6A  3228               	rrcf	??_xtoa+1,f,c
  3801  000E6C  3227               	rrcf	??_xtoa,f,c
  3802  000E6E                     u2600:
  3803  000E6E  2EE8               	decfsz	wreg,f,c
  3804  000E70  D7F5               	goto	u2605
  3805  000E72  C027  F037         	movff	??_xtoa,xtoa@n
  3806  000E76  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3807  000E7A  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3808  000E7E  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3809  000E82  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3810  000E86  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3811  000E8A  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3812  000E8E  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3813  000E92                     l3709:
  3814                           
  3815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3816  000E92  BE40               	btfsc	xtoa@i+1,7,c
  3817  000E94  D021               	goto	u2650
  3818  000E96  5040               	movf	xtoa@i+1,w,c
  3819  000E98  E104               	bnz	u2610
  3820  000E9A  0E02               	movlw	2
  3821  000E9C  5C3F               	subwf	xtoa@i,w,c
  3822  000E9E  A0D8               	btfss	status,0,c
  3823  000EA0  D01B               	goto	u2650
  3824  000EA2                     u2610:
  3825  000EA2  5037               	movf	xtoa@n,w,c
  3826  000EA4  1038               	iorwf	xtoa@n+1,w,c
  3827  000EA6  1039               	iorwf	xtoa@n+2,w,c
  3828  000EA8  103A               	iorwf	xtoa@n+3,w,c
  3829  000EAA  103B               	iorwf	xtoa@n+4,w,c
  3830  000EAC  103C               	iorwf	xtoa@n+5,w,c
  3831  000EAE  103D               	iorwf	xtoa@n+6,w,c
  3832  000EB0  103E               	iorwf	xtoa@n+7,w,c
  3833  000EB2  A4D8               	btfss	status,2,c
  3834  000EB4  D75B               	goto	l3679
  3835  000EB6  BE34               	btfsc	xtoa@p+1,7,c
  3836  000EB8  D005               	goto	u2630
  3837  000EBA  5034               	movf	xtoa@p+1,w,c
  3838  000EBC  E102               	bnz	u2631
  3839  000EBE  0433               	decf	xtoa@p,w,c
  3840  000EC0  B0D8               	btfsc	status,0,c
  3841  000EC2                     u2631:
  3842  000EC2  D754               	goto	l3679
  3843  000EC4                     u2630:
  3844  000EC4  BE36               	btfsc	xtoa@w+1,7,c
  3845  000EC6  D008               	goto	u2650
  3846  000EC8  5036               	movf	xtoa@w+1,w,c
  3847  000ECA  E103               	bnz	u2640
  3848  000ECC  0435               	decf	xtoa@w,w,c
  3849  000ECE  A0D8               	btfss	status,0,c
  3850  000ED0  D003               	goto	u2650
  3851  000ED2                     u2640:
  3852  000ED2  0100               	movlb	0	; () banked
  3853  000ED4  B376               	btfsc	_flags& (0+255),1,b
  3854  000ED6  D74A               	goto	l3679
  3855  000ED8                     u2650:
  3856                           
  3857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3858  000ED8  0100               	movlb	0	; () banked
  3859  000EDA  A976               	btfss	_flags& (0+255),4,b
  3860  000EDC  D016               	goto	l3725
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3864  000EDE  063F               	decf	xtoa@i,f,c
  3865  000EE0  A0D8               	btfss	status,0,c
  3866  000EE2  0640               	decf	xtoa@i+1,f,c
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3870  000EE4  0E84               	movlw	low _dbuf
  3871  000EE6  243F               	addwf	xtoa@i,w,c
  3872  000EE8  6ED9               	movwf	fsr2l,c
  3873  000EEA  0E00               	movlw	high _dbuf
  3874  000EEC  2040               	addwfc	xtoa@i+1,w,c
  3875  000EEE  6EDA               	movwf	fsr2h,c
  3876  000EF0  C026  FFDF         	movff	xtoa@x,indf2
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3880  000EF4  063F               	decf	xtoa@i,f,c
  3881  000EF6  A0D8               	btfss	status,0,c
  3882  000EF8  0640               	decf	xtoa@i+1,f,c
  3883                           
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3885  000EFA  0E84               	movlw	low _dbuf
  3886  000EFC  243F               	addwf	xtoa@i,w,c
  3887  000EFE  6ED9               	movwf	fsr2l,c
  3888  000F00  0E00               	movlw	high _dbuf
  3889  000F02  2040               	addwfc	xtoa@i+1,w,c
  3890  000F04  6EDA               	movwf	fsr2h,c
  3891  000F06  0E30               	movlw	48
  3892  000F08  6EDF               	movwf	indf2,c
  3893  000F0A                     l3725:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3897  000F0A  C01C  F011         	movff	xtoa@fp,pad@fp
  3898  000F0E  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  3899  000F12  0E84               	movlw	low _dbuf
  3900  000F14  243F               	addwf	xtoa@i,w,c
  3901  000F16  6E13               	movwf	pad@buf,c
  3902  000F18  0E00               	movlw	high _dbuf
  3903  000F1A  2040               	addwfc	xtoa@i+1,w,c
  3904  000F1C  6E14               	movwf	pad@buf+1,c
  3905  000F1E  C035  F015         	movff	xtoa@w,pad@p
  3906  000F22  C036  F016         	movff	xtoa@w+1,pad@p+1
  3907  000F26  ECAB  F009         	call	_pad	;wreg free
  3908  000F2A  C011  F01C         	movff	?_pad,?_xtoa
  3909  000F2E  C012  F01D         	movff	?_pad+1,?_xtoa+1
  3910  000F32  0012               	return		;funcret
  3911  000F34                     __end_of_xtoa:
  3912                           	opt callstack 0
  3913                           
  3914 ;; *************** function _toupper *****************
  3915 ;; Defined at:
  3916 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  c               2    6[COMRAM] int 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  2    6[COMRAM] int 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1
  3930 ;;      Params:         2       0       0
  3931 ;;      Locals:         2       0       0
  3932 ;;      Temps:          4       0       0
  3933 ;;      Totals:         8       0       0
  3934 ;;Total ram usage:        8 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    2
  3937 ;; This function calls:
  3938 ;;		_islower
  3939 ;; This function is called by:
  3940 ;;		_xtoa
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text14
  3945  00167C                     __ptext14:
  3946                           	opt callstack 0
  3947  00167C                     _toupper:
  3948                           	opt callstack 23
  3949                           
  3950                           ;incstack = 0
  3951  00167C  0E9F               	movlw	159
  3952  00167E  6E09               	movwf	??_toupper& (0+255),c
  3953  001680  0EFF               	movlw	255
  3954  001682  6E0A               	movwf	(??_toupper+1)& (0+255),c
  3955  001684  C007  F00B         	movff	toupper@c,??_toupper+2
  3956  001688  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3957  00168C  5009               	movf	??_toupper,w,c
  3958  00168E  260B               	addwf	??_toupper+2,f,c
  3959  001690  500A               	movf	??_toupper+1,w,c
  3960  001692  220C               	addwfc	??_toupper+3,f,c
  3961  001694  500C               	movf	??_toupper+3,w,c
  3962  001696  E106               	bnz	u2430
  3963  001698  0E1A               	movlw	26
  3964  00169A  5C0B               	subwf	??_toupper+2,w,c
  3965  00169C  B0D8               	btfsc	status,0,c
  3966  00169E  D002               	goto	u2430
  3967  0016A0  0E01               	movlw	1
  3968  0016A2  D001               	goto	u2440
  3969  0016A4                     u2430:
  3970  0016A4  0E00               	movlw	0
  3971  0016A6                     u2440:
  3972  0016A6  6E0D               	movwf	_toupper$1747,c
  3973  0016A8  6A0E               	clrf	_toupper$1747+1,c
  3974  0016AA  500D               	movf	_toupper$1747,w,c
  3975  0016AC  100E               	iorwf	_toupper$1747+1,w,c
  3976  0016AE  B4D8               	btfsc	status,2,c
  3977  0016B0  D005               	goto	l1399
  3978  0016B2  0E5F               	movlw	95
  3979  0016B4  1407               	andwf	toupper@c,w,c
  3980  0016B6  6E07               	movwf	?_toupper,c
  3981  0016B8  6A08               	clrf	?_toupper+1,c
  3982  0016BA  0012               	return	
  3983  0016BC                     l1399:
  3984  0016BC  C007  F007         	movff	toupper@c,?_toupper
  3985  0016C0  C008  F008         	movff	toupper@c+1,?_toupper+1
  3986  0016C4  0012               	return		;funcret
  3987  0016C6                     __end_of_toupper:
  3988                           	opt callstack 0
  3989                           
  3990 ;; *************** function _islower *****************
  3991 ;; Defined at:
  3992 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  c               2    0[COMRAM] int 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  2    0[COMRAM] int 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1
  4006 ;;      Params:         2       0       0
  4007 ;;      Locals:         0       0       0
  4008 ;;      Temps:          4       0       0
  4009 ;;      Totals:         6       0       0
  4010 ;;Total ram usage:        6 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_toupper
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text15
  4021  001822                     __ptext15:
  4022                           	opt callstack 0
  4023  001822                     _islower:
  4024                           	opt callstack 23
  4025                           
  4026                           ;incstack = 0
  4027  001822  0E9F               	movlw	159
  4028  001824  6E03               	movwf	??_islower& (0+255),c
  4029  001826  0EFF               	movlw	255
  4030  001828  6E04               	movwf	(??_islower+1)& (0+255),c
  4031  00182A  C001  F005         	movff	islower@c,??_islower+2
  4032  00182E  C002  F006         	movff	islower@c+1,??_islower+3
  4033  001832  5003               	movf	??_islower,w,c
  4034  001834  2605               	addwf	??_islower+2,f,c
  4035  001836  5004               	movf	??_islower+1,w,c
  4036  001838  2206               	addwfc	??_islower+3,f,c
  4037  00183A  5006               	movf	??_islower+3,w,c
  4038  00183C  E106               	bnz	u2330
  4039  00183E  0E1A               	movlw	26
  4040  001840  5C05               	subwf	??_islower+2,w,c
  4041  001842  B0D8               	btfsc	status,0,c
  4042  001844  D002               	goto	u2330
  4043  001846  0E01               	movlw	1
  4044  001848  D001               	goto	u2340
  4045  00184A                     u2330:
  4046  00184A  0E00               	movlw	0
  4047  00184C                     u2340:
  4048  00184C  6E01               	movwf	?_islower,c
  4049  00184E  6A02               	clrf	?_islower+1,c
  4050  001850  0012               	return		;funcret
  4051  001852                     __end_of_islower:
  4052                           	opt callstack 0
  4053                           
  4054 ;; *************** function _pad *****************
  4055 ;; Defined at:
  4056 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4059 ;;		 -> sprintf@f(6), 
  4060 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4061 ;;		 -> dbuf(32), 
  4062 ;;  p               2   20[COMRAM] int 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  w               2   25[COMRAM] int 
  4065 ;;  i               2   23[COMRAM] int 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  2   16[COMRAM] int 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1
  4075 ;;      Params:         6       0       0
  4076 ;;      Locals:         4       0       0
  4077 ;;      Temps:          1       0       0
  4078 ;;      Totals:        11       0       0
  4079 ;;Total ram usage:       11 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    4
  4082 ;; This function calls:
  4083 ;;		_fputc
  4084 ;;		_fputs
  4085 ;;		_strlen
  4086 ;; This function is called by:
  4087 ;;		_xtoa
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text16
  4092  001356                     __ptext16:
  4093                           	opt callstack 0
  4094  001356                     _pad:
  4095                           	opt callstack 21
  4096                           
  4097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4098                           
  4099                           ;incstack = 0
  4100  001356  0100               	movlb	0	; () banked
  4101  001358  A176               	btfss	_flags& (0+255),0,b
  4102  00135A  D00A               	goto	l3605
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4106  00135C  C013  F00A         	movff	pad@buf,fputs@s
  4107  001360  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4108  001364  C011  F00C         	movff	pad@fp,fputs@fp
  4109  001368  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4110  00136C  ECC1  F00B         	call	_fputs	;wreg free
  4111  001370                     l3605:
  4112                           
  4113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4114  001370  BE16               	btfsc	pad@p+1,7,c
  4115  001372  D005               	goto	l3609
  4116  001374  C015  F01A         	movff	pad@p,pad@w
  4117  001378  C016  F01B         	movff	pad@p+1,pad@w+1
  4118  00137C  D004               	goto	l556
  4119  00137E                     l3609:
  4120  00137E  0E00               	movlw	0
  4121  001380  6E1B               	movwf	pad@w+1,c
  4122  001382  0E00               	movlw	0
  4123  001384  6E1A               	movwf	pad@w,c
  4124  001386                     l556:
  4125                           
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4127  001386  0E00               	movlw	0
  4128  001388  6E19               	movwf	pad@i+1,c
  4129  00138A  0E00               	movlw	0
  4130  00138C  6E18               	movwf	pad@i,c
  4131                           
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4133  00138E  D00C               	goto	l3615
  4134  001390                     l3611:
  4135                           
  4136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4137  001390  0E00               	movlw	0
  4138  001392  6E02               	movwf	fputc@c+1,c
  4139  001394  0E20               	movlw	32
  4140  001396  6E01               	movwf	fputc@c,c
  4141  001398  C011  F003         	movff	pad@fp,fputc@fp
  4142  00139C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4143  0013A0  EC5B  F009         	call	_fputc	;wreg free
  4144                           
  4145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4146  0013A4  4A18               	infsnz	pad@i,f,c
  4147  0013A6  2A19               	incf	pad@i+1,f,c
  4148  0013A8                     l3615:
  4149                           
  4150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4151  0013A8  501A               	movf	pad@w,w,c
  4152  0013AA  5C18               	subwf	pad@i,w,c
  4153  0013AC  5019               	movf	pad@i+1,w,c
  4154  0013AE  0A80               	xorlw	128
  4155  0013B0  6E17               	movwf	??_pad& (0+255),c
  4156  0013B2  501B               	movf	pad@w+1,w,c
  4157  0013B4  0A80               	xorlw	128
  4158  0013B6  5817               	subwfb	??_pad& (0+255),w,c
  4159  0013B8  A0D8               	btfss	status,0,c
  4160  0013BA  D7EA               	goto	l3611
  4161                           
  4162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4163  0013BC  0100               	movlb	0	; () banked
  4164  0013BE  B176               	btfsc	_flags& (0+255),0,b
  4165  0013C0  D00A               	goto	l3619
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4169  0013C2  C013  F00A         	movff	pad@buf,fputs@s
  4170  0013C6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4171  0013CA  C011  F00C         	movff	pad@fp,fputs@fp
  4172  0013CE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4173  0013D2  ECC1  F00B         	call	_fputs	;wreg free
  4174  0013D6                     l3619:
  4175                           
  4176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4177  0013D6  C013  F001         	movff	pad@buf,strlen@s
  4178  0013DA  C014  F002         	movff	pad@buf+1,strlen@s+1
  4179  0013DE  EC9A  F00C         	call	_strlen	;wreg free
  4180  0013E2  501A               	movf	pad@w,w,c
  4181  0013E4  2401               	addwf	?_strlen,w,c
  4182  0013E6  6E11               	movwf	?_pad,c
  4183  0013E8  501B               	movf	pad@w+1,w,c
  4184  0013EA  2002               	addwfc	?_strlen+1,w,c
  4185  0013EC  6E12               	movwf	?_pad+1,c
  4186  0013EE  0012               	return		;funcret
  4187  0013F0                     __end_of_pad:
  4188                           	opt callstack 0
  4189                           
  4190 ;; *************** function _strlen *****************
  4191 ;; Defined at:
  4192 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4195 ;;		 -> dbuf(32), 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4198 ;;		 -> dbuf(32), 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    0[COMRAM] unsigned int 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1
  4208 ;;      Params:         2       0       0
  4209 ;;      Locals:         2       0       0
  4210 ;;      Temps:          0       0       0
  4211 ;;      Totals:         4       0       0
  4212 ;;Total ram usage:        4 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    1
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_pad
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text17
  4223  001934                     __ptext17:
  4224                           	opt callstack 0
  4225  001934                     _strlen:
  4226                           	opt callstack 23
  4227                           
  4228                           ;incstack = 0
  4229  001934  C001  F003         	movff	strlen@s,strlen@a
  4230  001938  C002  F004         	movff	strlen@s+1,strlen@a+1
  4231  00193C  D002               	goto	l3591
  4232  00193E                     l3589:
  4233  00193E  4A01               	infsnz	strlen@s,f,c
  4234  001940  2A02               	incf	strlen@s+1,f,c
  4235  001942                     l3591:
  4236  001942  C001  FFD9         	movff	strlen@s,fsr2l
  4237  001946  C002  FFDA         	movff	strlen@s+1,fsr2h
  4238  00194A  50DF               	movf	indf2,w,c
  4239  00194C  A4D8               	btfss	status,2,c
  4240  00194E  D7F7               	goto	l3589
  4241  001950  5003               	movf	strlen@a,w,c
  4242  001952  5C01               	subwf	strlen@s,w,c
  4243  001954  6E01               	movwf	?_strlen,c
  4244  001956  5004               	movf	strlen@a+1,w,c
  4245  001958  5802               	subwfb	strlen@s+1,w,c
  4246  00195A  6E02               	movwf	?_strlen+1,c
  4247  00195C  0012               	return		;funcret
  4248  00195E                     __end_of_strlen:
  4249                           	opt callstack 0
  4250                           
  4251 ;; *************** function _fputs *****************
  4252 ;; Defined at:
  4253 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4256 ;;		 -> dbuf(32), 
  4257 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4258 ;;		 -> sprintf@f(6), 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  i               2   14[COMRAM] int 
  4261 ;;  c               1   13[COMRAM] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  2    9[COMRAM] int 
  4264 ;; Registers used:
  4265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1
  4271 ;;      Params:         4       0       0
  4272 ;;      Locals:         3       0       0
  4273 ;;      Temps:          0       0       0
  4274 ;;      Totals:         7       0       0
  4275 ;;Total ram usage:        7 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    3
  4278 ;; This function calls:
  4279 ;;		_fputc
  4280 ;; This function is called by:
  4281 ;;		_pad
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text18
  4286  001782                     __ptext18:
  4287                           	opt callstack 0
  4288  001782                     _fputs:
  4289                           	opt callstack 21
  4290                           
  4291                           ;incstack = 0
  4292  001782  0E00               	movlw	0
  4293  001784  6E10               	movwf	fputs@i+1,c
  4294  001786  0E00               	movlw	0
  4295  001788  6E0F               	movwf	fputs@i,c
  4296  00178A  D00B               	goto	l3585
  4297  00178C                     l3581:
  4298  00178C  C00E  F001         	movff	fputs@c,fputc@c
  4299  001790  6A02               	clrf	fputc@c+1,c
  4300  001792  C00C  F003         	movff	fputs@fp,fputc@fp
  4301  001796  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4302  00179A  EC5B  F009         	call	_fputc	;wreg free
  4303  00179E  4A0F               	infsnz	fputs@i,f,c
  4304  0017A0  2A10               	incf	fputs@i+1,f,c
  4305  0017A2                     l3585:
  4306  0017A2  500F               	movf	fputs@i,w,c
  4307  0017A4  240A               	addwf	fputs@s,w,c
  4308  0017A6  6ED9               	movwf	fsr2l,c
  4309  0017A8  5010               	movf	fputs@i+1,w,c
  4310  0017AA  200B               	addwfc	fputs@s+1,w,c
  4311  0017AC  6EDA               	movwf	fsr2h,c
  4312  0017AE  50DF               	movf	indf2,w,c
  4313  0017B0  6E0E               	movwf	fputs@c,c
  4314  0017B2  500E               	movf	fputs@c,w,c
  4315  0017B4  B4D8               	btfsc	status,2,c
  4316  0017B6  0012               	return	
  4317  0017B8  D7E9               	goto	l3581
  4318  0017BA                     __end_of_fputs:
  4319                           	opt callstack 0
  4320                           
  4321 ;; *************** function _fputc *****************
  4322 ;; Defined at:
  4323 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  c               2    0[COMRAM] int 
  4326 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4327 ;;		 -> sprintf@f(6), 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  2    0[COMRAM] int 
  4332 ;; Registers used:
  4333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1
  4339 ;;      Params:         4       0       0
  4340 ;;      Locals:         0       0       0
  4341 ;;      Temps:          5       0       0
  4342 ;;      Totals:         9       0       0
  4343 ;;Total ram usage:        9 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    2
  4346 ;; This function calls:
  4347 ;;		_putch
  4348 ;; This function is called by:
  4349 ;;		_pad
  4350 ;;		_vfpfcnvrt
  4351 ;;		_fputs
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text19
  4356  0012B6                     __ptext19:
  4357                           	opt callstack 0
  4358  0012B6                     _fputc:
  4359                           	opt callstack 21
  4360                           
  4361                           ;incstack = 0
  4362  0012B6  5003               	movf	fputc@fp,w,c
  4363  0012B8  1004               	iorwf	fputc@fp+1,w,c
  4364  0012BA  B4D8               	btfsc	status,2,c
  4365  0012BC  D004               	goto	u2280
  4366  0012BE  5003               	movf	fputc@fp,w,c
  4367  0012C0  1004               	iorwf	fputc@fp+1,w,c
  4368  0012C2  A4D8               	btfss	status,2,c
  4369  0012C4  D004               	goto	l3571
  4370  0012C6                     u2280:
  4371  0012C6  5001               	movf	fputc@c,w,c
  4372  0012C8  EC09  F00D         	call	_putch
  4373  0012CC  0012               	return	
  4374  0012CE                     l3571:
  4375  0012CE  EE20 F004          	lfsr	2,4
  4376  0012D2  5003               	movf	fputc@fp,w,c
  4377  0012D4  26D9               	addwf	fsr2l,f,c
  4378  0012D6  5004               	movf	fputc@fp+1,w,c
  4379  0012D8  22DA               	addwfc	fsr2h,f,c
  4380  0012DA  50DE               	movf	postinc2,w,c
  4381  0012DC  10DE               	iorwf	postinc2,w,c
  4382  0012DE  B4D8               	btfsc	status,2,c
  4383  0012E0  D016               	goto	u2300
  4384  0012E2  EE20 F004          	lfsr	2,4
  4385  0012E6  5003               	movf	fputc@fp,w,c
  4386  0012E8  26D9               	addwf	fsr2l,f,c
  4387  0012EA  5004               	movf	fputc@fp+1,w,c
  4388  0012EC  22DA               	addwfc	fsr2h,f,c
  4389  0012EE  EE10 F002          	lfsr	1,2
  4390  0012F2  5003               	movf	fputc@fp,w,c
  4391  0012F4  26E1               	addwf	fsr1l,f,c
  4392  0012F6  5004               	movf	fputc@fp+1,w,c
  4393  0012F8  22E2               	addwfc	fsr1h,f,c
  4394  0012FA  50DE               	movf	postinc2,w,c
  4395  0012FC  5CE6               	subwf	postinc1,w,c
  4396  0012FE  50E6               	movf	postinc1,w,c
  4397  001300  0A80               	xorlw	128
  4398  001302  6E09               	movwf	(??_fputc+4)& (0+255),c
  4399  001304  50DE               	movf	postinc2,w,c
  4400  001306  0A80               	xorlw	128
  4401  001308  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  4402  00130A  B0D8               	btfsc	status,0,c
  4403  00130C  0012               	return	
  4404  00130E                     u2300:
  4405  00130E  EE20 F002          	lfsr	2,2
  4406  001312  5003               	movf	fputc@fp,w,c
  4407  001314  26D9               	addwf	fsr2l,f,c
  4408  001316  5004               	movf	fputc@fp+1,w,c
  4409  001318  22DA               	addwfc	fsr2h,f,c
  4410  00131A  CFDE F005          	movff	postinc2,??_fputc
  4411  00131E  CFDD F006          	movff	postdec2,??_fputc+1
  4412  001322  C003  FFD9         	movff	fputc@fp,fsr2l
  4413  001326  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4414  00132A  CFDE F007          	movff	postinc2,??_fputc+2
  4415  00132E  CFDD F008          	movff	postdec2,??_fputc+3
  4416  001332  5005               	movf	??_fputc,w,c
  4417  001334  2407               	addwf	??_fputc+2,w,c
  4418  001336  6ED9               	movwf	fsr2l,c
  4419  001338  5006               	movf	??_fputc+1,w,c
  4420  00133A  2008               	addwfc	??_fputc+3,w,c
  4421  00133C  6EDA               	movwf	fsr2h,c
  4422  00133E  C001  FFDF         	movff	fputc@c,indf2
  4423  001342  EE20 F002          	lfsr	2,2
  4424  001346  5003               	movf	fputc@fp,w,c
  4425  001348  26D9               	addwf	fsr2l,f,c
  4426  00134A  5004               	movf	fputc@fp+1,w,c
  4427  00134C  22DA               	addwfc	fsr2h,f,c
  4428  00134E  2ADE               	incf	postinc2,f,c
  4429  001350  0E00               	movlw	0
  4430  001352  22DD               	addwfc	postdec2,f,c
  4431  001354  0012               	return		;funcret
  4432  001356                     __end_of_fputc:
  4433                           	opt callstack 0
  4434                           
  4435 ;; *************** function _putch *****************
  4436 ;; Defined at:
  4437 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  c               1    wreg     unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  c               1    0[COMRAM] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1
  4451 ;;      Params:         0       0       0
  4452 ;;      Locals:         0       0       0
  4453 ;;      Temps:          0       0       0
  4454 ;;      Totals:         0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    1
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_fputc
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text20
  4466  001A12                     __ptext20:
  4467                           	opt callstack 0
  4468  001A12                     _putch:
  4469                           	opt callstack 21
  4470                           
  4471                           ;incstack = 0
  4472  001A12  0012               	return		;funcret
  4473  001A14                     __end_of_putch:
  4474                           	opt callstack 0
  4475                           
  4476 ;; *************** function _isupper *****************
  4477 ;; Defined at:
  4478 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  c               2    0[COMRAM] int 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  2    0[COMRAM] int 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1
  4492 ;;      Params:         2       0       0
  4493 ;;      Locals:         0       0       0
  4494 ;;      Temps:          4       0       0
  4495 ;;      Totals:         6       0       0
  4496 ;;Total ram usage:        6 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    1
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_xtoa
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text21
  4507  001852                     __ptext21:
  4508                           	opt callstack 0
  4509  001852                     _isupper:
  4510                           	opt callstack 24
  4511                           
  4512                           ;incstack = 0
  4513  001852  0EBF               	movlw	191
  4514  001854  6E03               	movwf	??_isupper& (0+255),c
  4515  001856  0EFF               	movlw	255
  4516  001858  6E04               	movwf	(??_isupper+1)& (0+255),c
  4517  00185A  C001  F005         	movff	isupper@c,??_isupper+2
  4518  00185E  C002  F006         	movff	isupper@c+1,??_isupper+3
  4519  001862  5003               	movf	??_isupper,w,c
  4520  001864  2605               	addwf	??_isupper+2,f,c
  4521  001866  5004               	movf	??_isupper+1,w,c
  4522  001868  2206               	addwfc	??_isupper+3,f,c
  4523  00186A  5006               	movf	??_isupper+3,w,c
  4524  00186C  E106               	bnz	u2390
  4525  00186E  0E1A               	movlw	26
  4526  001870  5C05               	subwf	??_isupper+2,w,c
  4527  001872  B0D8               	btfsc	status,0,c
  4528  001874  D002               	goto	u2390
  4529  001876  0E01               	movlw	1
  4530  001878  D001               	goto	u2400
  4531  00187A                     u2390:
  4532  00187A  0E00               	movlw	0
  4533  00187C                     u2400:
  4534  00187C  6E01               	movwf	?_isupper,c
  4535  00187E  6A02               	clrf	?_isupper+1,c
  4536  001880  0012               	return		;funcret
  4537  001882                     __end_of_isupper:
  4538                           	opt callstack 0
  4539                           
  4540 ;; *************** function _isalpha *****************
  4541 ;; Defined at:
  4542 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  c               2    0[COMRAM] int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  2    0[COMRAM] int 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1
  4556 ;;      Params:         2       0       0
  4557 ;;      Locals:         0       0       0
  4558 ;;      Temps:          4       0       0
  4559 ;;      Totals:         6       0       0
  4560 ;;Total ram usage:        6 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_xtoa
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text22
  4571  0017BA                     __ptext22:
  4572                           	opt callstack 0
  4573  0017BA                     _isalpha:
  4574                           	opt callstack 24
  4575                           
  4576                           ;incstack = 0
  4577  0017BA  0E9F               	movlw	159
  4578  0017BC  6E03               	movwf	??_isalpha& (0+255),c
  4579  0017BE  0EFF               	movlw	255
  4580  0017C0  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4581  0017C2  0E20               	movlw	32
  4582  0017C4  1001               	iorwf	isalpha@c,w,c
  4583  0017C6  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4584  0017C8  0E00               	movlw	0
  4585  0017CA  1002               	iorwf	isalpha@c+1,w,c
  4586  0017CC  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4587  0017CE  5003               	movf	??_isalpha,w,c
  4588  0017D0  2605               	addwf	??_isalpha+2,f,c
  4589  0017D2  5004               	movf	??_isalpha+1,w,c
  4590  0017D4  2206               	addwfc	??_isalpha+3,f,c
  4591  0017D6  5006               	movf	??_isalpha+3,w,c
  4592  0017D8  E106               	bnz	u2410
  4593  0017DA  0E1A               	movlw	26
  4594  0017DC  5C05               	subwf	??_isalpha+2,w,c
  4595  0017DE  B0D8               	btfsc	status,0,c
  4596  0017E0  D002               	goto	u2410
  4597  0017E2  0E01               	movlw	1
  4598  0017E4  D001               	goto	u2420
  4599  0017E6                     u2410:
  4600  0017E6  0E00               	movlw	0
  4601  0017E8                     u2420:
  4602  0017E8  6E01               	movwf	?_isalpha,c
  4603  0017EA  6A02               	clrf	?_isalpha+1,c
  4604  0017EC  0012               	return		;funcret
  4605  0017EE                     __end_of_isalpha:
  4606                           	opt callstack 0
  4607                           
  4608 ;; *************** function _atoi *****************
  4609 ;; Defined at:
  4610 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  s               2    7[COMRAM] PTR const unsigned char 
  4613 ;;		 -> STR_8(9), STR_7(9), STR_6(9), STR_5(9), 
  4614 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  n               2   20[COMRAM] int 
  4617 ;;  neg             2   13[COMRAM] int 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  2    7[COMRAM] int 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1
  4627 ;;      Params:         2       0       0
  4628 ;;      Locals:         9       0       0
  4629 ;;      Temps:          4       0       0
  4630 ;;      Totals:        15       0       0
  4631 ;;Total ram usage:       15 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    2
  4634 ;; This function calls:
  4635 ;;		___wmul
  4636 ;;		_isdigit
  4637 ;;		_isspace
  4638 ;; This function is called by:
  4639 ;;		_vfpfcnvrt
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text23
  4644  001090                     __ptext23:
  4645                           	opt callstack 0
  4646  001090                     _atoi:
  4647                           	opt callstack 24
  4648                           
  4649                           ;incstack = 0
  4650  001090  0E00               	movlw	0
  4651  001092  6E16               	movwf	atoi@n+1,c
  4652  001094  0E00               	movlw	0
  4653  001096  6E15               	movwf	atoi@n,c
  4654  001098  0E00               	movlw	0
  4655  00109A  6E0F               	movwf	atoi@neg+1,c
  4656  00109C  0E00               	movlw	0
  4657  00109E  6E0E               	movwf	atoi@neg,c
  4658  0010A0  D002               	goto	l3733
  4659  0010A2                     l3731:
  4660  0010A2  4A08               	infsnz	atoi@s,f,c
  4661  0010A4  2A09               	incf	atoi@s+1,f,c
  4662  0010A6                     l3733:
  4663  0010A6  0E01               	movlw	1
  4664  0010A8  6E14               	movwf	_atoi$1645,c
  4665  0010AA  C008  FFF6         	movff	atoi@s,tblptrl
  4666  0010AE  C009  FFF7         	movff	atoi@s+1,tblptrh
  4667  0010B2                     	if	0	;tblptru may be non-zero
  4668  0010B2                     	endif
  4669  0010B2                     	if	0	;tblptru may be non-zero
  4670  0010B2                     	endif
  4671  0010B2  0008               	tblrd		*
  4672  0010B4  50F5               	movf	tablat,w,c
  4673  0010B6  0A20               	xorlw	32
  4674  0010B8  B4D8               	btfsc	status,2,c
  4675  0010BA  D018               	goto	l3741
  4676  0010BC  0EF7               	movlw	247
  4677  0010BE  6E0A               	movwf	??_atoi& (0+255),c
  4678  0010C0  0EFF               	movlw	255
  4679  0010C2  6E0B               	movwf	(??_atoi+1)& (0+255),c
  4680  0010C4  C008  FFF6         	movff	atoi@s,tblptrl
  4681  0010C8  C009  FFF7         	movff	atoi@s+1,tblptrh
  4682  0010CC                     	if	0	;tblptru may be non-zero
  4683  0010CC                     	endif
  4684  0010CC                     	if	0	;tblptru may be non-zero
  4685  0010CC                     	endif
  4686  0010CC  0008               	tblrd		*
  4687  0010CE  50F5               	movf	tablat,w,c
  4688  0010D0  6E0C               	movwf	(??_atoi+2)& (0+255),c
  4689  0010D2  6A0D               	clrf	(??_atoi+3)& (0+255),c
  4690  0010D4  500A               	movf	??_atoi,w,c
  4691  0010D6  260C               	addwf	??_atoi+2,f,c
  4692  0010D8  500B               	movf	??_atoi+1,w,c
  4693  0010DA  220D               	addwfc	??_atoi+3,f,c
  4694  0010DC  500D               	movf	??_atoi+3,w,c
  4695  0010DE  E104               	bnz	u2680
  4696  0010E0  0E05               	movlw	5
  4697  0010E2  5C0C               	subwf	??_atoi+2,w,c
  4698  0010E4  A0D8               	btfss	status,0,c
  4699  0010E6  D002               	goto	l3741
  4700  0010E8                     u2680:
  4701  0010E8  0E00               	movlw	0
  4702  0010EA  6E14               	movwf	_atoi$1645,c
  4703  0010EC                     l3741:
  4704  0010EC  C014  F010         	movff	_atoi$1645,_atoi$1644
  4705  0010F0  6A11               	clrf	_atoi$1644+1,c
  4706  0010F2  5010               	movf	_atoi$1644,w,c
  4707  0010F4  1011               	iorwf	_atoi$1644+1,w,c
  4708  0010F6  B4D8               	btfsc	status,2,c
  4709  0010F8  D008               	goto	l3751
  4710  0010FA  D7D3               	goto	l3731
  4711  0010FC                     l3747:
  4712  0010FC  0E00               	movlw	0
  4713  0010FE  6E0F               	movwf	atoi@neg+1,c
  4714  001100  0E01               	movlw	1
  4715  001102  6E0E               	movwf	atoi@neg,c
  4716  001104                     l3749:
  4717  001104  4A08               	infsnz	atoi@s,f,c
  4718  001106  2A09               	incf	atoi@s+1,f,c
  4719  001108  D02E               	goto	l3757
  4720  00110A                     l3751:
  4721  00110A  C008  FFF6         	movff	atoi@s,tblptrl
  4722  00110E  C009  FFF7         	movff	atoi@s+1,tblptrh
  4723  001112                     	if	0	;tblptru may be non-zero
  4724  001112                     	endif
  4725  001112                     	if	0	;tblptru may be non-zero
  4726  001112                     	endif
  4727  001112  0008               	tblrd		*
  4728  001114  50F5               	movf	tablat,w,c
  4729  001116  6E0A               	movwf	??_atoi& (0+255),c
  4730  001118  6A0B               	clrf	(??_atoi+1)& (0+255),c
  4731                           
  4732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4733                           ; Switch size 1, requested type "simple"
  4734                           ; Number of cases is 1, Range of values is 0 to 0
  4735                           ; switch strategies available:
  4736                           ; Name         Instructions Cycles
  4737                           ; simple_byte            4     3 (average)
  4738                           ;	Chosen strategy is simple_byte
  4739  00111A  500B               	movf	??_atoi+1,w,c
  4740  00111C  0A00               	xorlw	0	; case 0
  4741  00111E  A4D8               	btfss	status,2,c
  4742  001120  D022               	goto	l3757
  4743                           
  4744                           ; Switch size 1, requested type "simple"
  4745                           ; Number of cases is 2, Range of values is 43 to 45
  4746                           ; switch strategies available:
  4747                           ; Name         Instructions Cycles
  4748                           ; simple_byte            7     4 (average)
  4749                           ;	Chosen strategy is simple_byte
  4750  001122  500A               	movf	??_atoi,w,c
  4751  001124  0A2B               	xorlw	43	; case 43
  4752  001126  B4D8               	btfsc	status,2,c
  4753  001128  D7ED               	goto	l3749
  4754  00112A  0A06               	xorlw	6	; case 45
  4755  00112C  B4D8               	btfsc	status,2,c
  4756  00112E  D7E6               	goto	l3747
  4757  001130  D01A               	goto	l3757
  4758  001132                     l3753:
  4759  001132  C015  F001         	movff	atoi@n,___wmul@multiplier
  4760  001136  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  4761  00113A  0E00               	movlw	0
  4762  00113C  6E04               	movwf	___wmul@multiplicand+1,c
  4763  00113E  0E0A               	movlw	10
  4764  001140  6E03               	movwf	___wmul@multiplicand,c
  4765  001142  ECAF  F00C         	call	___wmul	;wreg free
  4766  001146  C008  FFF6         	movff	atoi@s,tblptrl
  4767  00114A  C009  FFF7         	movff	atoi@s+1,tblptrh
  4768  00114E                     	if	0	;tblptru may be non-zero
  4769  00114E                     	endif
  4770  00114E                     	if	0	;tblptru may be non-zero
  4771  00114E                     	endif
  4772  00114E  0008               	tblrd		*
  4773  001150  50F5               	movf	tablat,w,c
  4774  001152  5E01               	subwf	?___wmul,f,c
  4775  001154  0E00               	movlw	0
  4776  001156  5A02               	subwfb	?___wmul+1,f,c
  4777  001158  0E30               	movlw	48
  4778  00115A  2401               	addwf	?___wmul,w,c
  4779  00115C  6E15               	movwf	atoi@n,c
  4780  00115E  0E00               	movlw	0
  4781  001160  2002               	addwfc	?___wmul+1,w,c
  4782  001162  6E16               	movwf	atoi@n+1,c
  4783  001164  D7CF               	goto	l3749
  4784  001166                     l3757:
  4785  001166  0ED0               	movlw	208
  4786  001168  6E0A               	movwf	??_atoi& (0+255),c
  4787  00116A  0EFF               	movlw	255
  4788  00116C  6E0B               	movwf	(??_atoi+1)& (0+255),c
  4789  00116E  C008  FFF6         	movff	atoi@s,tblptrl
  4790  001172  C009  FFF7         	movff	atoi@s+1,tblptrh
  4791  001176                     	if	0	;tblptru may be non-zero
  4792  001176                     	endif
  4793  001176                     	if	0	;tblptru may be non-zero
  4794  001176                     	endif
  4795  001176  0008               	tblrd		*
  4796  001178  50F5               	movf	tablat,w,c
  4797  00117A  6E0C               	movwf	(??_atoi+2)& (0+255),c
  4798  00117C  6A0D               	clrf	(??_atoi+3)& (0+255),c
  4799  00117E  500A               	movf	??_atoi,w,c
  4800  001180  260C               	addwf	??_atoi+2,f,c
  4801  001182  500B               	movf	??_atoi+1,w,c
  4802  001184  220D               	addwfc	??_atoi+3,f,c
  4803  001186  500D               	movf	??_atoi+3,w,c
  4804  001188  E106               	bnz	u2700
  4805  00118A  0E0A               	movlw	10
  4806  00118C  5C0C               	subwf	??_atoi+2,w,c
  4807  00118E  B0D8               	btfsc	status,0,c
  4808  001190  D002               	goto	u2700
  4809  001192  0E01               	movlw	1
  4810  001194  D001               	goto	u2710
  4811  001196                     u2700:
  4812  001196  0E00               	movlw	0
  4813  001198                     u2710:
  4814  001198  6E12               	movwf	_atoi$1646,c
  4815  00119A  6A13               	clrf	_atoi$1646+1,c
  4816  00119C  5012               	movf	_atoi$1646,w,c
  4817  00119E  1013               	iorwf	_atoi$1646+1,w,c
  4818  0011A0  A4D8               	btfss	status,2,c
  4819  0011A2  D7C7               	goto	l3753
  4820  0011A4  500E               	movf	atoi@neg,w,c
  4821  0011A6  100F               	iorwf	atoi@neg+1,w,c
  4822  0011A8  A4D8               	btfss	status,2,c
  4823  0011AA  D00D               	goto	l1329
  4824  0011AC  C015  F00A         	movff	atoi@n,??_atoi
  4825  0011B0  C016  F00B         	movff	atoi@n+1,??_atoi+1
  4826  0011B4  1E0A               	comf	??_atoi,f,c
  4827  0011B6  1E0B               	comf	??_atoi+1,f,c
  4828  0011B8  4A0A               	infsnz	??_atoi,f,c
  4829  0011BA  2A0B               	incf	??_atoi+1,f,c
  4830  0011BC  C00A  F008         	movff	??_atoi,?_atoi
  4831  0011C0  C00B  F009         	movff	??_atoi+1,?_atoi+1
  4832  0011C4  0012               	return	
  4833  0011C6                     l1329:
  4834  0011C6  C015  F008         	movff	atoi@n,?_atoi
  4835  0011CA  C016  F009         	movff	atoi@n+1,?_atoi+1
  4836  0011CE  0012               	return		;funcret
  4837  0011D0                     __end_of_atoi:
  4838                           	opt callstack 0
  4839                           
  4840 ;; *************** function _isspace *****************
  4841 ;; Defined at:
  4842 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  c               2    0[COMRAM] int 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  2    0[COMRAM] int 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1
  4856 ;;      Params:         2       0       0
  4857 ;;      Locals:         1       0       0
  4858 ;;      Temps:          4       0       0
  4859 ;;      Totals:         7       0       0
  4860 ;;Total ram usage:        7 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_atoi
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text24
  4871  001708                     __ptext24:
  4872                           	opt callstack 0
  4873  001708                     _isspace:
  4874                           	opt callstack 24
  4875                           
  4876                           ;incstack = 0
  4877  001708  0E01               	movlw	1
  4878  00170A  6E07               	movwf	_isspace$1671,c
  4879  00170C  0E20               	movlw	32
  4880  00170E  1801               	xorwf	isspace@c,w,c
  4881  001710  1002               	iorwf	isspace@c+1,w,c
  4882  001712  B4D8               	btfsc	status,2,c
  4883  001714  D014               	goto	l3659
  4884  001716  0EF7               	movlw	247
  4885  001718  6E03               	movwf	??_isspace& (0+255),c
  4886  00171A  0EFF               	movlw	255
  4887  00171C  6E04               	movwf	(??_isspace+1)& (0+255),c
  4888  00171E  C001  F005         	movff	isspace@c,??_isspace+2
  4889  001722  C002  F006         	movff	isspace@c+1,??_isspace+3
  4890  001726  5003               	movf	??_isspace,w,c
  4891  001728  2605               	addwf	??_isspace+2,f,c
  4892  00172A  5004               	movf	??_isspace+1,w,c
  4893  00172C  2206               	addwfc	??_isspace+3,f,c
  4894  00172E  5006               	movf	??_isspace+3,w,c
  4895  001730  E104               	bnz	u2490
  4896  001732  0E05               	movlw	5
  4897  001734  5C05               	subwf	??_isspace+2,w,c
  4898  001736  A0D8               	btfss	status,0,c
  4899  001738  D002               	goto	l3659
  4900  00173A                     u2490:
  4901  00173A  0E00               	movlw	0
  4902  00173C  6E07               	movwf	_isspace$1671,c
  4903  00173E                     l3659:
  4904  00173E  C007  F001         	movff	_isspace$1671,?_isspace
  4905  001742  6A02               	clrf	?_isspace+1,c
  4906  001744  0012               	return		;funcret
  4907  001746                     __end_of_isspace:
  4908                           	opt callstack 0
  4909                           
  4910 ;; *************** function _isdigit *****************
  4911 ;; Defined at:
  4912 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  c               2    0[COMRAM] int 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  2    0[COMRAM] int 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1
  4926 ;;      Params:         2       0       0
  4927 ;;      Locals:         0       0       0
  4928 ;;      Temps:          4       0       0
  4929 ;;      Totals:         6       0       0
  4930 ;;Total ram usage:        6 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    1
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_vfpfcnvrt
  4937 ;;		_atoi
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text25
  4942  001882                     __ptext25:
  4943                           	opt callstack 0
  4944  001882                     _isdigit:
  4945                           	opt callstack 25
  4946                           
  4947                           ;incstack = 0
  4948  001882  0ED0               	movlw	208
  4949  001884  6E03               	movwf	??_isdigit& (0+255),c
  4950  001886  0EFF               	movlw	255
  4951  001888  6E04               	movwf	(??_isdigit+1)& (0+255),c
  4952  00188A  C001  F005         	movff	isdigit@c,??_isdigit+2
  4953  00188E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  4954  001892  5003               	movf	??_isdigit,w,c
  4955  001894  2605               	addwf	??_isdigit+2,f,c
  4956  001896  5004               	movf	??_isdigit+1,w,c
  4957  001898  2206               	addwfc	??_isdigit+3,f,c
  4958  00189A  5006               	movf	??_isdigit+3,w,c
  4959  00189C  E106               	bnz	u2460
  4960  00189E  0E0A               	movlw	10
  4961  0018A0  5C05               	subwf	??_isdigit+2,w,c
  4962  0018A2  B0D8               	btfsc	status,0,c
  4963  0018A4  D002               	goto	u2460
  4964  0018A6  0E01               	movlw	1
  4965  0018A8  D001               	goto	u2470
  4966  0018AA                     u2460:
  4967  0018AA  0E00               	movlw	0
  4968  0018AC                     u2470:
  4969  0018AC  6E01               	movwf	?_isdigit,c
  4970  0018AE  6A02               	clrf	?_isdigit+1,c
  4971  0018B0  0012               	return		;funcret
  4972  0018B2                     __end_of_isdigit:
  4973                           	opt callstack 0
  4974                           
  4975 ;; *************** function ___wmul *****************
  4976 ;; Defined at:
  4977 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  multiplier      2    0[COMRAM] unsigned int 
  4980 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  product         2    4[COMRAM] unsigned int 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  2    0[COMRAM] unsigned int 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0, prodl, prodh
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1
  4992 ;;      Params:         4       0       0
  4993 ;;      Locals:         2       0       0
  4994 ;;      Temps:          0       0       0
  4995 ;;      Totals:         6       0       0
  4996 ;;Total ram usage:        6 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:    1
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_atoi
  5003 ;;		_LCD_PageSet
  5004 ;;		_LCD_PageClear
  5005 ;;		_LCD_PageSetCursor
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text26
  5010  00195E                     __ptext26:
  5011                           	opt callstack 0
  5012  00195E                     ___wmul:
  5013                           	opt callstack 24
  5014                           
  5015                           ;incstack = 0
  5016  00195E  5001               	movf	___wmul@multiplier,w,c
  5017  001960  0203               	mulwf	___wmul@multiplicand,c
  5018  001962  CFF3 F005          	movff	prodl,___wmul@product
  5019  001966  CFF4 F006          	movff	prodh,___wmul@product+1
  5020  00196A  5001               	movf	___wmul@multiplier,w,c
  5021  00196C  0204               	mulwf	___wmul@multiplicand+1,c
  5022  00196E  50F3               	movf	prodl,w,c
  5023  001970  2606               	addwf	___wmul@product+1,f,c
  5024  001972  5002               	movf	___wmul@multiplier+1,w,c
  5025  001974  0203               	mulwf	___wmul@multiplicand,c
  5026  001976  50F3               	movf	prodl,w,c
  5027  001978  2606               	addwf	___wmul@product+1,f,c
  5028  00197A  C005  F001         	movff	___wmul@product,?___wmul
  5029  00197E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5030  001982  0012               	return		;funcret
  5031  001984                     __end_of___wmul:
  5032                           	opt callstack 0
  5033                           
  5034 ;; *************** function _LCD_SetCursor *****************
  5035 ;; Defined at:
  5036 ;;		line 96 in file "skI2CLCDlib.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  col             2   10[COMRAM] int 
  5039 ;;  row             2   12[COMRAM] int 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  row_offsets     4   14[COMRAM] int [2]
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1
  5051 ;;      Params:         4       0       0
  5052 ;;      Locals:         4       0       0
  5053 ;;      Temps:          0       0       0
  5054 ;;      Totals:         8       0       0
  5055 ;;Total ram usage:        8 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    4
  5058 ;; This function calls:
  5059 ;;		_LCD_Command
  5060 ;; This function is called by:
  5061 ;;		_main
  5062 ;;		_Color_Read
  5063 ;;		_Color
  5064 ;;		_LCD_PageClear
  5065 ;;		_LCD_PageSetCursor
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text27
  5070  0018B2                     __ptext27:
  5071                           	opt callstack 0
  5072  0018B2                     _LCD_SetCursor:
  5073                           	opt callstack 26
  5074                           
  5075                           ;skI2CLCDlib.c: 96: void LCD_SetCursor(int col, int row);skI2CLCDlib.c: 97: {;skI2CLCDli
      +                          b.c: 98:      int row_offsets[] = { 0x00, 0x40 } ;
  5076                           
  5077                           ;incstack = 0
  5078  0018B2  C0D6  F00F         	movff	LCD_SetCursor@F2916,LCD_SetCursor@row_offsets
  5079  0018B6  C0D7  F010         	movff	LCD_SetCursor@F2916+1,LCD_SetCursor@row_offsets+1
  5080  0018BA  C0D8  F011         	movff	LCD_SetCursor@F2916+2,LCD_SetCursor@row_offsets+2
  5081  0018BE  C0D9  F012         	movff	LCD_SetCursor@F2916+3,LCD_SetCursor@row_offsets+3
  5082                           
  5083                           ;skI2CLCDlib.c: 100:      LCD_Command(0x80 | (col + row_offsets[row])) ;
  5084  0018C2  90D8               	bcf	status,0,c
  5085  0018C4  340D               	rlcf	LCD_SetCursor@row,w,c
  5086  0018C6  6ED9               	movwf	fsr2l,c
  5087  0018C8  340E               	rlcf	LCD_SetCursor@row+1,w,c
  5088  0018CA  6EDA               	movwf	fsr2h,c
  5089  0018CC  0E0F               	movlw	low LCD_SetCursor@row_offsets
  5090  0018CE  26D9               	addwf	fsr2l,f,c
  5091  0018D0  0E00               	movlw	high LCD_SetCursor@row_offsets
  5092  0018D2  22DA               	addwfc	fsr2h,f,c
  5093  0018D4  50DF               	movf	indf2,w,c
  5094  0018D6  240B               	addwf	LCD_SetCursor@col,w,c
  5095  0018D8  0980               	iorlw	128
  5096  0018DA  ECA3  F00B         	call	_LCD_Command
  5097  0018DE  0012               	return		;funcret
  5098  0018E0                     __end_of_LCD_SetCursor:
  5099                           	opt callstack 0
  5100                           
  5101 ;; *************** function _LCD_Puts *****************
  5102 ;; Defined at:
  5103 ;;		line 128 in file "skI2CLCDlib.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5106 ;;		 -> Color@buf(16), Color_Read@buf(16), moji2(9), moji(17), 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  ans             2   10[COMRAM] int 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1
  5118 ;;      Params:         2       0       0
  5119 ;;      Locals:         2       0       0
  5120 ;;      Temps:          1       0       0
  5121 ;;      Totals:         5       0       0
  5122 ;;Total ram usage:        5 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    3
  5125 ;; This function calls:
  5126 ;;		_I2C_Send
  5127 ;;		_I2C_Start
  5128 ;;		_I2C_Stop
  5129 ;; This function is called by:
  5130 ;;		_main
  5131 ;;		_Color_Read
  5132 ;;		_Color
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text28
  5137  0014D2                     __ptext28:
  5138                           	opt callstack 0
  5139  0014D2                     _LCD_Puts:
  5140                           	opt callstack 27
  5141                           
  5142                           ;skI2CLCDlib.c: 128: void LCD_Puts(const char * s);skI2CLCDlib.c: 129: {;skI2CLCDlib.c: 
      +                          130:      int ans ;;skI2CLCDlib.c: 132:      ans = I2C_Start(0x3E,0);
  5143                           
  5144                           ;incstack = 0
  5145  0014D2  0E00               	movlw	0
  5146  0014D4  6E04               	movwf	I2C_Start@adrs+1,c
  5147  0014D6  0E3E               	movlw	62
  5148  0014D8  6E03               	movwf	I2C_Start@adrs,c
  5149  0014DA  0E00               	movlw	0
  5150  0014DC  6E06               	movwf	I2C_Start@rw+1,c
  5151  0014DE  0E00               	movlw	0
  5152  0014E0  6E05               	movwf	I2C_Start@rw,c
  5153  0014E2  ECF8  F009         	call	_I2C_Start	;wreg free
  5154  0014E6  C003  F00B         	movff	?_I2C_Start,LCD_Puts@ans
  5155  0014EA  C004  F00C         	movff	?_I2C_Start+1,LCD_Puts@ans+1
  5156                           
  5157                           ;skI2CLCDlib.c: 133:      if (ans == 0) {
  5158  0014EE  500B               	movf	LCD_Puts@ans,w,c
  5159  0014F0  100C               	iorwf	LCD_Puts@ans+1,w,c
  5160  0014F2  A4D8               	btfss	status,2,c
  5161  0014F4  D01B               	goto	u1820
  5162                           
  5163                           ;skI2CLCDlib.c: 134:           I2C_Send(0b01000000) ;
  5164  0014F6  0E40               	movlw	64
  5165  0014F8  EC17  F00B         	call	_I2C_Send
  5166                           
  5167                           ;skI2CLCDlib.c: 135:           while(*s) {
  5168  0014FC  D010               	goto	l2947
  5169  0014FE                     l2941:
  5170                           
  5171                           ;skI2CLCDlib.c: 136:                I2C_Send(*s++) ;
  5172  0014FE  C008  FFD9         	movff	LCD_Puts@s,fsr2l
  5173  001502  C009  FFDA         	movff	LCD_Puts@s+1,fsr2h
  5174  001506  50DF               	movf	indf2,w,c
  5175  001508  EC17  F00B         	call	_I2C_Send
  5176  00150C  4A08               	infsnz	LCD_Puts@s,f,c
  5177  00150E  2A09               	incf	LCD_Puts@s+1,f,c
  5178                           
  5179                           ;skI2CLCDlib.c: 137:                _delay((unsigned long)((10)*(16000000/4000.0)));
  5180  001510  0E34               	movlw	52
  5181  001512  6E0A               	movwf	??_LCD_Puts& (0+255),c
  5182  001514  0EF2               	movlw	242
  5183  001516                     u3237:
  5184  001516  2EE8               	decfsz	wreg,f,c
  5185  001518  D7FE               	bra	u3237
  5186  00151A  2E0A               	decfsz	??_LCD_Puts& (0+255),f,c
  5187  00151C  D7FC               	bra	u3237
  5188  00151E                     l2947:
  5189                           
  5190                           ;skI2CLCDlib.c: 135:           while(*s) {
  5191  00151E  C008  FFD9         	movff	LCD_Puts@s,fsr2l
  5192  001522  C009  FFDA         	movff	LCD_Puts@s+1,fsr2h
  5193  001526  50DF               	movf	indf2,w,c
  5194  001528  A4D8               	btfss	status,2,c
  5195  00152A  D7E9               	goto	l2941
  5196  00152C                     u1820:
  5197                           
  5198                           ;skI2CLCDlib.c: 140:      I2C_Stop() ;
  5199  00152C  ECEB  F00C         	call	_I2C_Stop	;wreg free
  5200  001530  0012               	return		;funcret
  5201  001532                     __end_of_LCD_Puts:
  5202                           	opt callstack 0
  5203                           
  5204 ;; *************** function _LCD_Clear *****************
  5205 ;; Defined at:
  5206 ;;		line 79 in file "skI2CLCDlib.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1
  5220 ;;      Params:         0       0       0
  5221 ;;      Locals:         0       0       0
  5222 ;;      Temps:          1       0       0
  5223 ;;      Totals:         1       0       0
  5224 ;;Total ram usage:        1 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    4
  5227 ;; This function calls:
  5228 ;;		_LCD_Command
  5229 ;; This function is called by:
  5230 ;;		_main
  5231 ;;		_Color_Read
  5232 ;;		_Color
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text29
  5237  0017EE                     __ptext29:
  5238                           	opt callstack 0
  5239  0017EE                     _LCD_Clear:
  5240                           	opt callstack 26
  5241                           
  5242                           ;skI2CLCDlib.c: 81:      LCD_Command(0x01) ;
  5243                           
  5244                           ;incstack = 0
  5245  0017EE  0E01               	movlw	1
  5246  0017F0  ECA3  F00B         	call	_LCD_Command
  5247                           
  5248                           ;skI2CLCDlib.c: 82:      _delay((unsigned long)((1100)*(16000000/4000000.0))) ;
  5249  0017F4  0E06               	movlw	6
  5250  0017F6  6E0B               	movwf	??_LCD_Clear& (0+255),c
  5251  0017F8  0EB6               	movlw	182
  5252  0017FA                     u3247:
  5253  0017FA  2EE8               	decfsz	wreg,f,c
  5254  0017FC  D7FE               	bra	u3247
  5255  0017FE  2E0B               	decfsz	??_LCD_Clear& (0+255),f,c
  5256  001800  D7FC               	bra	u3247
  5257                           
  5258                           ;skI2CLCDlib.c: 83:      LCD_Command(0x02) ;
  5259  001802  0E02               	movlw	2
  5260  001804  ECA3  F00B         	call	_LCD_Command
  5261                           
  5262                           ;skI2CLCDlib.c: 84:      _delay((unsigned long)((1100)*(16000000/4000000.0))) ;
  5263  001808  0E06               	movlw	6
  5264  00180A  6E0B               	movwf	??_LCD_Clear& (0+255),c
  5265  00180C  0EB6               	movlw	182
  5266  00180E                     u3257:
  5267  00180E  2EE8               	decfsz	wreg,f,c
  5268  001810  D7FE               	bra	u3257
  5269  001812  2E0B               	decfsz	??_LCD_Clear& (0+255),f,c
  5270  001814  D7FC               	bra	u3257
  5271                           
  5272                           ;skI2CLCDlib.c: 85:      LCD_NowPage = 0 ;
  5273  001816  0E00               	movlw	0
  5274  001818  0100               	movlb	0	; () banked
  5275  00181A  6F7D               	movwf	(_LCD_NowPage+1)& (0+255),b
  5276  00181C  0E00               	movlw	0
  5277  00181E  6F7C               	movwf	_LCD_NowPage& (0+255),b
  5278                           
  5279                           ; BSR set to: 0
  5280  001820  0012               	return		;funcret
  5281  001822                     __end_of_LCD_Clear:
  5282                           	opt callstack 0
  5283                           
  5284 ;; *************** function _LCD_Command *****************
  5285 ;; Defined at:
  5286 ;;		line 60 in file "skI2CLCDlib.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  c               1    wreg     unsigned char 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  c               1    9[COMRAM] unsigned char 
  5291 ;;  ans             2    7[COMRAM] int 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      void 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1
  5301 ;;      Params:         0       0       0
  5302 ;;      Locals:         3       0       0
  5303 ;;      Temps:          0       0       0
  5304 ;;      Totals:         3       0       0
  5305 ;;Total ram usage:        3 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    3
  5308 ;; This function calls:
  5309 ;;		_I2C_Send
  5310 ;;		_I2C_Start
  5311 ;;		_I2C_Stop
  5312 ;;		_Wait27us
  5313 ;; This function is called by:
  5314 ;;		_main
  5315 ;;		_LCD_Clear
  5316 ;;		_LCD_SetCursor
  5317 ;;		_LCD_Init_ST7032i
  5318 ;;		_LCD_IconClear
  5319 ;;		_LCD_IconOnOff
  5320 ;;		_LCD_PageSet
  5321 ;;		_LCD_Contrast
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text30
  5326  001746                     __ptext30:
  5327                           	opt callstack 0
  5328  001746                     _LCD_Command:
  5329                           	opt callstack 26
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;incstack = 0
  5333                           ;LCD_Command@c stored from wreg
  5334  001746  6E0A               	movwf	LCD_Command@c,c
  5335                           
  5336                           ;skI2CLCDlib.c: 60: void LCD_Command(unsigned char c);skI2CLCDlib.c: 61: {;skI2CLCDlib.c
      +                          : 62:      int ans ;;skI2CLCDlib.c: 64:      ans = I2C_Start(0x3E,0);
  5337  001748  0E00               	movlw	0
  5338  00174A  6E04               	movwf	I2C_Start@adrs+1,c
  5339  00174C  0E3E               	movlw	62
  5340  00174E  6E03               	movwf	I2C_Start@adrs,c
  5341  001750  0E00               	movlw	0
  5342  001752  6E06               	movwf	I2C_Start@rw+1,c
  5343  001754  0E00               	movlw	0
  5344  001756  6E05               	movwf	I2C_Start@rw,c
  5345  001758  ECF8  F009         	call	_I2C_Start	;wreg free
  5346  00175C  C003  F008         	movff	?_I2C_Start,LCD_Command@ans
  5347  001760  C004  F009         	movff	?_I2C_Start+1,LCD_Command@ans+1
  5348                           
  5349                           ;skI2CLCDlib.c: 65:      if (ans == 0) {
  5350  001764  5008               	movf	LCD_Command@ans,w,c
  5351  001766  1009               	iorwf	LCD_Command@ans+1,w,c
  5352  001768  A4D8               	btfss	status,2,c
  5353  00176A  D006               	goto	l323
  5354                           
  5355                           ;skI2CLCDlib.c: 67:           I2C_Send(0b10000000) ;
  5356  00176C  0E80               	movlw	128
  5357  00176E  EC17  F00B         	call	_I2C_Send
  5358                           
  5359                           ;skI2CLCDlib.c: 68:           I2C_Send(c) ;
  5360  001772  500A               	movf	LCD_Command@c,w,c
  5361  001774  EC17  F00B         	call	_I2C_Send
  5362  001778                     l323:
  5363                           
  5364                           ;skI2CLCDlib.c: 70:      I2C_Stop() ;
  5365  001778  ECEB  F00C         	call	_I2C_Stop	;wreg free
  5366                           
  5367                           ;skI2CLCDlib.c: 71:      Wait27us() ;
  5368  00177C  EC02  F00D         	call	_Wait27us	;wreg free
  5369  001780  0012               	return		;funcret
  5370  001782                     __end_of_LCD_Command:
  5371                           	opt callstack 0
  5372                           
  5373 ;; *************** function _Wait27us *****************
  5374 ;; Defined at:
  5375 ;;		line 55 in file "skI2CLCDlib.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1
  5389 ;;      Params:         0       0       0
  5390 ;;      Locals:         0       0       0
  5391 ;;      Temps:          0       0       0
  5392 ;;      Totals:         0       0       0
  5393 ;;Total ram usage:        0 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_LCD_Command
  5400 ;;		_LCD_Putc
  5401 ;;		_LCD_CreateChar
  5402 ;;		_LCD_IconClear
  5403 ;;		_LCD_IconOnOff
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text31
  5408  001A04                     __ptext31:
  5409                           	opt callstack 0
  5410  001A04                     _Wait27us:
  5411                           	opt callstack 27
  5412                           
  5413                           ;skI2CLCDlib.c: 57:      _delay((unsigned long)((26)*(16000000/4000000.0))) ;
  5414                           
  5415                           ;incstack = 0
  5416  001A04  0E22               	movlw	34
  5417  001A06                     u3267:
  5418  001A06  2EE8               	decfsz	wreg,f,c
  5419  001A08  D7FE               	bra	u3267
  5420  001A0A  D000               	nop2	
  5421  001A0C  0012               	return		;funcret
  5422  001A0E                     __end_of_Wait27us:
  5423                           	opt callstack 0
  5424                           
  5425 ;; *************** function _I2C_Stop *****************
  5426 ;; Defined at:
  5427 ;;		line 154 in file "skI2Clib.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  2  300[None  ] int 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1
  5441 ;;      Params:         0       0       0
  5442 ;;      Locals:         0       0       0
  5443 ;;      Temps:          0       0       0
  5444 ;;      Totals:         0       0       0
  5445 ;;Total ram usage:        0 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    2
  5448 ;; This function calls:
  5449 ;;		_I2C_IdleCheck
  5450 ;; This function is called by:
  5451 ;;		_LCD_Command
  5452 ;;		_LCD_Puts
  5453 ;;		_Color_Read
  5454 ;;		_Color
  5455 ;;		_LCD_Putc
  5456 ;;		_LCD_CreateChar
  5457 ;;		_LCD_IconClear
  5458 ;;		_LCD_IconOnOff
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text32
  5463  0019D6                     __ptext32:
  5464                           	opt callstack 0
  5465  0019D6                     _I2C_Stop:
  5466                           	opt callstack 26
  5467                           
  5468                           ;skI2Clib.c: 156:      CollisionCheck = 0 ;
  5469                           
  5470                           ;incstack = 0
  5471  0019D6  0E00               	movlw	0
  5472  0019D8  6E5D               	movwf	_CollisionCheck+1,c
  5473  0019DA  0E00               	movlw	0
  5474  0019DC  6E5C               	movwf	_CollisionCheck,c
  5475                           
  5476                           ;skI2Clib.c: 158:      I2C_IdleCheck(0x5) ;
  5477  0019DE  0E05               	movlw	5
  5478  0019E0  ECE0  F00C         	call	_I2C_IdleCheck
  5479                           
  5480                           ;skI2Clib.c: 159:      SSPCON2bits.PEN = 1 ;
  5481  0019E4  84C5               	bsf	4037,2,c	;volatile
  5482  0019E6  0012               	return		;funcret
  5483  0019E8                     __end_of_I2C_Stop:
  5484                           	opt callstack 0
  5485                           
  5486 ;; *************** function _I2C_Start *****************
  5487 ;; Defined at:
  5488 ;;		line 106 in file "skI2Clib.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  adrs            2    2[COMRAM] int 
  5491 ;;  rw              2    4[COMRAM] int 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  2    2[COMRAM] int 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1
  5503 ;;      Params:         4       0       0
  5504 ;;      Locals:         0       0       0
  5505 ;;      Temps:          1       0       0
  5506 ;;      Totals:         5       0       0
  5507 ;;Total ram usage:        5 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    2
  5510 ;; This function calls:
  5511 ;;		_I2C_IdleCheck
  5512 ;; This function is called by:
  5513 ;;		_LCD_Command
  5514 ;;		_LCD_Puts
  5515 ;;		_Color_Read
  5516 ;;		_Color
  5517 ;;		_LCD_Putc
  5518 ;;		_LCD_CreateChar
  5519 ;;		_LCD_IconClear
  5520 ;;		_LCD_IconOnOff
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text33
  5525  0013F0                     __ptext33:
  5526                           	opt callstack 0
  5527  0013F0                     _I2C_Start:
  5528                           	opt callstack 26
  5529                           
  5530                           ;skI2Clib.c: 106: int I2C_Start(int adrs,int rw);skI2Clib.c: 107: {;skI2Clib.c: 108:    
      +                            CollisionCheck = 0 ;
  5531                           
  5532                           ;incstack = 0
  5533  0013F0  0E00               	movlw	0
  5534  0013F2  6E5D               	movwf	_CollisionCheck+1,c
  5535  0013F4  0E00               	movlw	0
  5536  0013F6  6E5C               	movwf	_CollisionCheck,c
  5537                           
  5538                           ;skI2Clib.c: 110:      I2C_IdleCheck(0x5) ;
  5539  0013F8  0E05               	movlw	5
  5540  0013FA  ECE0  F00C         	call	_I2C_IdleCheck
  5541                           
  5542                           ;skI2Clib.c: 111:      SSPCON2bits.SEN = 1 ;
  5543  0013FE  80C5               	bsf	4037,0,c	;volatile
  5544                           
  5545                           ;skI2Clib.c: 113:      I2C_IdleCheck(0x5) ;
  5546  001400  0E05               	movlw	5
  5547  001402  ECE0  F00C         	call	_I2C_IdleCheck
  5548                           
  5549                           ;skI2Clib.c: 114:      if (CollisionCheck == 1) return -1 ;
  5550  001406  045C               	decf	_CollisionCheck,w,c
  5551  001408  105D               	iorwf	_CollisionCheck+1,w,c
  5552  00140A  A4D8               	btfss	status,2,c
  5553  00140C  D003               	goto	l2741
  5554  00140E                     u1610:
  5555  00140E  6803               	setf	?_I2C_Start,c
  5556  001410  6804               	setf	?_I2C_Start+1,c
  5557  001412  0012               	return	
  5558  001414                     l2741:
  5559                           
  5560                           ;skI2Clib.c: 115:      AckCheck = 1 ;
  5561  001414  0E00               	movlw	0
  5562  001416  0100               	movlb	0	; () banked
  5563  001418  6F7F               	movwf	(_AckCheck+1)& (0+255),b
  5564  00141A  0E01               	movlw	1
  5565  00141C  6F7E               	movwf	_AckCheck& (0+255),b
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;skI2Clib.c: 116:      SSPIF = 0 ;
  5569  00141E  969E               	bcf	3998,3,c	;volatile
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;skI2Clib.c: 117:      SSPBUF = (char)((adrs<<1)+rw) ;
  5573  001420  5003               	movf	I2C_Start@adrs,w,c
  5574  001422  0D02               	mullw	2
  5575  001424  50F3               	movf	prodl,w,c
  5576  001426  2405               	addwf	I2C_Start@rw,w,c
  5577  001428  6EC9               	movwf	4041,c	;volatile
  5578                           
  5579                           ;skI2Clib.c: 118:      while (AckCheck)_delay((unsigned long)((1)*(16000000/4000.0)));
  5580  00142A  D008               	goto	l2749
  5581  00142C                     l2747:
  5582                           
  5583                           ; BSR set to: 0
  5584  00142C  0E06               	movlw	6
  5585  00142E  6E07               	movwf	??_I2C_Start& (0+255),c
  5586  001430  0E30               	movlw	48
  5587  001432                     u3277:
  5588  001432  2EE8               	decfsz	wreg,f,c
  5589  001434  D7FE               	bra	u3277
  5590  001436  2E07               	decfsz	??_I2C_Start& (0+255),f,c
  5591  001438  D7FC               	bra	u3277
  5592  00143A  D000               	nop2	
  5593  00143C                     l2749:
  5594  00143C  0100               	movlb	0	; () banked
  5595  00143E  517E               	movf	_AckCheck& (0+255),w,b
  5596  001440  117F               	iorwf	(_AckCheck+1)& (0+255),w,b
  5597  001442  A4D8               	btfss	status,2,c
  5598  001444  D7F3               	goto	l2747
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;skI2Clib.c: 119:      if (CollisionCheck == 1) return -1 ;
  5602  001446  045C               	decf	_CollisionCheck,w,c
  5603  001448  105D               	iorwf	_CollisionCheck+1,w,c
  5604  00144A  B4D8               	btfsc	status,2,c
  5605  00144C  D7E0               	goto	u1610
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;skI2Clib.c: 120:      return SSPCON2bits.ACKSTAT ;
  5609  00144E  ACC5               	btfss	4037,6,c	;volatile
  5610  001450  D003               	goto	u1640
  5611  001452  6A07               	clrf	??_I2C_Start& (0+255),c
  5612  001454  2A07               	incf	??_I2C_Start& (0+255),f,c
  5613  001456  D001               	goto	u1648
  5614  001458                     u1640:
  5615  001458  6A07               	clrf	??_I2C_Start& (0+255),c
  5616  00145A                     u1648:
  5617  00145A  5007               	movf	??_I2C_Start,w,c
  5618  00145C  6E03               	movwf	?_I2C_Start,c
  5619  00145E  6A04               	clrf	?_I2C_Start+1,c
  5620  001460  0012               	return		;funcret
  5621  001462                     __end_of_I2C_Start:
  5622                           	opt callstack 0
  5623                           
  5624 ;; *************** function _I2C_Send *****************
  5625 ;; Defined at:
  5626 ;;		line 172 in file "skI2Clib.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  dt              1    wreg     unsigned char 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  dt              1    3[COMRAM] unsigned char 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  2  298[None  ] int 
  5633 ;; Registers used:
  5634 ;;		wreg, status,2, status,0, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1
  5640 ;;      Params:         0       0       0
  5641 ;;      Locals:         1       0       0
  5642 ;;      Temps:          1       0       0
  5643 ;;      Totals:         2       0       0
  5644 ;;Total ram usage:        2 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:    2
  5647 ;; This function calls:
  5648 ;;		_I2C_IdleCheck
  5649 ;; This function is called by:
  5650 ;;		_LCD_Command
  5651 ;;		_LCD_Puts
  5652 ;;		_Color_Read
  5653 ;;		_Color
  5654 ;;		_LCD_Putc
  5655 ;;		_LCD_CreateChar
  5656 ;;		_LCD_IconClear
  5657 ;;		_LCD_IconOnOff
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text34
  5662  00162E                     __ptext34:
  5663                           	opt callstack 0
  5664  00162E                     _I2C_Send:
  5665                           	opt callstack 26
  5666                           
  5667                           ;incstack = 0
  5668                           ;I2C_Send@dt stored from wreg
  5669  00162E  6E04               	movwf	I2C_Send@dt,c
  5670                           
  5671                           ;skI2Clib.c: 172: int I2C_Send(char dt);skI2Clib.c: 173: {;skI2Clib.c: 174:      Collisi
      +                          onCheck = 0 ;
  5672  001630  0E00               	movlw	0
  5673  001632  6E5D               	movwf	_CollisionCheck+1,c
  5674  001634  0E00               	movlw	0
  5675  001636  6E5C               	movwf	_CollisionCheck,c
  5676                           
  5677                           ;skI2Clib.c: 175:      I2C_IdleCheck(0x5) ;
  5678  001638  0E05               	movlw	5
  5679  00163A  ECE0  F00C         	call	_I2C_IdleCheck
  5680                           
  5681                           ;skI2Clib.c: 176:      if (CollisionCheck == 1) return -1 ;
  5682  00163E  045C               	decf	_CollisionCheck,w,c
  5683  001640  105D               	iorwf	_CollisionCheck+1,w,c
  5684  001642  B4D8               	btfsc	status,2,c
  5685  001644  0012               	return	
  5686                           
  5687                           ;skI2Clib.c: 177:      AckCheck = 1 ;
  5688  001646  0E00               	movlw	0
  5689  001648  0100               	movlb	0	; () banked
  5690  00164A  6F7F               	movwf	(_AckCheck+1)& (0+255),b
  5691  00164C  0E01               	movlw	1
  5692  00164E  6F7E               	movwf	_AckCheck& (0+255),b
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;skI2Clib.c: 178:      SSPBUF = dt ;
  5696  001650  C004  FFC9         	movff	I2C_Send@dt,4041	;volatile
  5697                           
  5698                           ;skI2Clib.c: 179:      while (AckCheck) _delay((unsigned long)((1)*(16000000/4000.0)));
  5699  001654  D008               	goto	l2773
  5700  001656                     l2771:
  5701                           
  5702                           ; BSR set to: 0
  5703  001656  0E06               	movlw	6
  5704  001658  6E03               	movwf	??_I2C_Send& (0+255),c
  5705  00165A  0E30               	movlw	48
  5706  00165C                     u3287:
  5707  00165C  2EE8               	decfsz	wreg,f,c
  5708  00165E  D7FE               	bra	u3287
  5709  001660  2E03               	decfsz	??_I2C_Send& (0+255),f,c
  5710  001662  D7FC               	bra	u3287
  5711  001664  D000               	nop2	
  5712  001666                     l2773:
  5713  001666  0100               	movlb	0	; () banked
  5714  001668  517E               	movf	_AckCheck& (0+255),w,b
  5715  00166A  117F               	iorwf	(_AckCheck+1)& (0+255),w,b
  5716  00166C  A4D8               	btfss	status,2,c
  5717  00166E  D7F3               	goto	l2771
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;skI2Clib.c: 180:      if (CollisionCheck == 1) return -1 ;
  5721  001670  045C               	decf	_CollisionCheck,w,c
  5722  001672  105D               	iorwf	_CollisionCheck+1,w,c
  5723  001674  B4D8               	btfsc	status,2,c
  5724  001676  0012               	return	
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;skI2Clib.c: 181:      return SSPCON2bits.ACKSTAT ;;	Return value of _I2C_Send is never 
      +                          used
  5728  001678  50C5               	movf	4037,w,c	;volatile
  5729  00167A  0012               	return		;funcret
  5730  00167C                     __end_of_I2C_Send:
  5731                           	opt callstack 0
  5732                           
  5733 ;; *************** function _I2C_rStart *****************
  5734 ;; Defined at:
  5735 ;;		line 133 in file "skI2Clib.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  adrs            2    2[COMRAM] int 
  5738 ;;  rw              2    4[COMRAM] int 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  2    2[COMRAM] int 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1
  5750 ;;      Params:         4       0       0
  5751 ;;      Locals:         0       0       0
  5752 ;;      Temps:          1       0       0
  5753 ;;      Totals:         5       0       0
  5754 ;;Total ram usage:        5 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    2
  5757 ;; This function calls:
  5758 ;;		_I2C_IdleCheck
  5759 ;; This function is called by:
  5760 ;;		_Color_Read
  5761 ;;		_Color
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           	psect	text35
  5766  001462                     __ptext35:
  5767                           	opt callstack 0
  5768  001462                     _I2C_rStart:
  5769                           	opt callstack 27
  5770                           
  5771                           ;skI2Clib.c: 133: int I2C_rStart(int adrs,int rw);skI2Clib.c: 134: {;skI2Clib.c: 135:   
      +                             CollisionCheck = 0 ;
  5772                           
  5773                           ;incstack = 0
  5774  001462  0E00               	movlw	0
  5775  001464  6E5D               	movwf	_CollisionCheck+1,c
  5776  001466  0E00               	movlw	0
  5777  001468  6E5C               	movwf	_CollisionCheck,c
  5778                           
  5779                           ;skI2Clib.c: 137:      I2C_IdleCheck(0x5) ;
  5780  00146A  0E05               	movlw	5
  5781  00146C  ECE0  F00C         	call	_I2C_IdleCheck
  5782                           
  5783                           ;skI2Clib.c: 138:      SSPCON2bits.RSEN = 1 ;
  5784  001470  82C5               	bsf	4037,1,c	;volatile
  5785                           
  5786                           ;skI2Clib.c: 140:      I2C_IdleCheck(0x5) ;
  5787  001472  0E05               	movlw	5
  5788  001474  ECE0  F00C         	call	_I2C_IdleCheck
  5789                           
  5790                           ;skI2Clib.c: 141:      if (CollisionCheck == 1) return -1 ;
  5791  001478  045C               	decf	_CollisionCheck,w,c
  5792  00147A  105D               	iorwf	_CollisionCheck+1,w,c
  5793  00147C  A4D8               	btfss	status,2,c
  5794  00147E  D003               	goto	l2967
  5795  001480                     u1840:
  5796  001480  6803               	setf	?_I2C_rStart,c
  5797  001482  6804               	setf	?_I2C_rStart+1,c
  5798  001484  0012               	return	
  5799  001486                     l2967:
  5800                           
  5801                           ;skI2Clib.c: 142:      AckCheck = 1 ;
  5802  001486  0E00               	movlw	0
  5803  001488  0100               	movlb	0	; () banked
  5804  00148A  6F7F               	movwf	(_AckCheck+1)& (0+255),b
  5805  00148C  0E01               	movlw	1
  5806  00148E  6F7E               	movwf	_AckCheck& (0+255),b
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;skI2Clib.c: 143:      SSPBUF = (char)((adrs<<1)+rw) ;
  5810  001490  5003               	movf	I2C_rStart@adrs,w,c
  5811  001492  0D02               	mullw	2
  5812  001494  50F3               	movf	prodl,w,c
  5813  001496  2405               	addwf	I2C_rStart@rw,w,c
  5814  001498  6EC9               	movwf	4041,c	;volatile
  5815                           
  5816                           ;skI2Clib.c: 144:      while (AckCheck)_delay((unsigned long)((1)*(16000000/4000.0))) ;
  5817  00149A  D008               	goto	l2973
  5818  00149C                     l2971:
  5819                           
  5820                           ; BSR set to: 0
  5821  00149C  0E06               	movlw	6
  5822  00149E  6E07               	movwf	??_I2C_rStart& (0+255),c
  5823  0014A0  0E30               	movlw	48
  5824  0014A2                     u3297:
  5825  0014A2  2EE8               	decfsz	wreg,f,c
  5826  0014A4  D7FE               	bra	u3297
  5827  0014A6  2E07               	decfsz	??_I2C_rStart& (0+255),f,c
  5828  0014A8  D7FC               	bra	u3297
  5829  0014AA  D000               	nop2	
  5830  0014AC                     l2973:
  5831  0014AC  0100               	movlb	0	; () banked
  5832  0014AE  517E               	movf	_AckCheck& (0+255),w,b
  5833  0014B0  117F               	iorwf	(_AckCheck+1)& (0+255),w,b
  5834  0014B2  A4D8               	btfss	status,2,c
  5835  0014B4  D7F3               	goto	l2971
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;skI2Clib.c: 145:      if (CollisionCheck == 1) return -1 ;
  5839  0014B6  045C               	decf	_CollisionCheck,w,c
  5840  0014B8  105D               	iorwf	_CollisionCheck+1,w,c
  5841  0014BA  B4D8               	btfsc	status,2,c
  5842  0014BC  D7E1               	goto	u1840
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;skI2Clib.c: 146:      return SSPCON2bits.ACKSTAT ;
  5846  0014BE  ACC5               	btfss	4037,6,c	;volatile
  5847  0014C0  D003               	goto	u1870
  5848  0014C2  6A07               	clrf	??_I2C_rStart& (0+255),c
  5849  0014C4  2A07               	incf	??_I2C_rStart& (0+255),f,c
  5850  0014C6  D001               	goto	u1878
  5851  0014C8                     u1870:
  5852  0014C8  6A07               	clrf	??_I2C_rStart& (0+255),c
  5853  0014CA                     u1878:
  5854  0014CA  5007               	movf	??_I2C_rStart,w,c
  5855  0014CC  6E03               	movwf	?_I2C_rStart,c
  5856  0014CE  6A04               	clrf	?_I2C_rStart+1,c
  5857  0014D0  0012               	return		;funcret
  5858  0014D2                     __end_of_I2C_rStart:
  5859                           	opt callstack 0
  5860                           
  5861 ;; *************** function _I2C_Receive *****************
  5862 ;; Defined at:
  5863 ;;		line 192 in file "skI2Clib.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  ack             2    2[COMRAM] int 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  dt              2    4[COMRAM] int 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  2    2[COMRAM] int 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1
  5877 ;;      Params:         2       0       0
  5878 ;;      Locals:         2       0       0
  5879 ;;      Temps:          0       0       0
  5880 ;;      Totals:         4       0       0
  5881 ;;Total ram usage:        4 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    2
  5884 ;; This function calls:
  5885 ;;		_I2C_IdleCheck
  5886 ;; This function is called by:
  5887 ;;		_Color_Read
  5888 ;;		_Color
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text36
  5893  001588                     __ptext36:
  5894                           	opt callstack 0
  5895  001588                     _I2C_Receive:
  5896                           	opt callstack 27
  5897                           
  5898                           ;skI2Clib.c: 192: int I2C_Receive(int ack);skI2Clib.c: 193: {;skI2Clib.c: 194:      int 
      +                          dt ;;skI2Clib.c: 196:      CollisionCheck = 0 ;
  5899                           
  5900                           ;incstack = 0
  5901  001588  0E00               	movlw	0
  5902  00158A  6E5D               	movwf	_CollisionCheck+1,c
  5903  00158C  0E00               	movlw	0
  5904  00158E  6E5C               	movwf	_CollisionCheck,c
  5905                           
  5906                           ;skI2Clib.c: 197:      I2C_IdleCheck(0x5) ;
  5907  001590  0E05               	movlw	5
  5908  001592  ECE0  F00C         	call	_I2C_IdleCheck
  5909                           
  5910                           ;skI2Clib.c: 198:      SSPCON2bits.RCEN = 1 ;
  5911  001596  86C5               	bsf	4037,3,c	;volatile
  5912                           
  5913                           ;skI2Clib.c: 199:      I2C_IdleCheck(0x4) ;
  5914  001598  0E04               	movlw	4
  5915  00159A  ECE0  F00C         	call	_I2C_IdleCheck
  5916                           
  5917                           ;skI2Clib.c: 200:      if (CollisionCheck == 1) return -1 ;
  5918  00159E  045C               	decf	_CollisionCheck,w,c
  5919  0015A0  105D               	iorwf	_CollisionCheck+1,w,c
  5920  0015A2  A4D8               	btfss	status,2,c
  5921  0015A4  D003               	goto	l479
  5922  0015A6  6803               	setf	?_I2C_Receive,c
  5923  0015A8  6804               	setf	?_I2C_Receive+1,c
  5924  0015AA  0012               	return	
  5925  0015AC                     l479:
  5926                           
  5927                           ;skI2Clib.c: 201:      dt = SSPBUF ;
  5928  0015AC  CFC9 F005          	movff	4041,I2C_Receive@dt	;volatile
  5929  0015B0  6A06               	clrf	I2C_Receive@dt+1,c
  5930                           
  5931                           ;skI2Clib.c: 202:      I2C_IdleCheck(0x5) ;
  5932  0015B2  0E05               	movlw	5
  5933  0015B4  ECE0  F00C         	call	_I2C_IdleCheck
  5934                           
  5935                           ;skI2Clib.c: 203:      if (CollisionCheck == 1) return -1 ;
  5936  0015B8  045C               	decf	_CollisionCheck,w,c
  5937  0015BA  105D               	iorwf	_CollisionCheck+1,w,c
  5938  0015BC  A4D8               	btfss	status,2,c
  5939  0015BE  D003               	goto	l481
  5940  0015C0  6803               	setf	?_I2C_Receive,c
  5941  0015C2  6804               	setf	?_I2C_Receive+1,c
  5942  0015C4  0012               	return	
  5943  0015C6                     l481:
  5944                           
  5945                           ;skI2Clib.c: 204:      SSPCON2bits.ACKDT = ack ;
  5946  0015C6  B003               	btfsc	I2C_Receive@ack,0,c
  5947  0015C8  D002               	bra	u1905
  5948  0015CA  9AC5               	bcf	4037,5,c	;volatile
  5949  0015CC  D001               	bra	u1906
  5950  0015CE                     u1905:
  5951  0015CE  8AC5               	bsf	4037,5,c	;volatile
  5952  0015D0                     u1906:
  5953                           
  5954                           ;skI2Clib.c: 205:      SSPCON2bits.ACKEN = 1 ;
  5955  0015D0  88C5               	bsf	4037,4,c	;volatile
  5956                           
  5957                           ;skI2Clib.c: 206:      return dt ;
  5958  0015D2  C005  F003         	movff	I2C_Receive@dt,?_I2C_Receive
  5959  0015D6  C006  F004         	movff	I2C_Receive@dt+1,?_I2C_Receive+1
  5960  0015DA  0012               	return		;funcret
  5961  0015DC                     __end_of_I2C_Receive:
  5962                           	opt callstack 0
  5963                           
  5964 ;; *************** function _I2C_IdleCheck *****************
  5965 ;; Defined at:
  5966 ;;		line 43 in file "skI2Clib.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  mask            1    wreg     unsigned char 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  mask            1    1[COMRAM] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      void 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1
  5980 ;;      Params:         0       0       0
  5981 ;;      Locals:         1       0       0
  5982 ;;      Temps:          1       0       0
  5983 ;;      Totals:         2       0       0
  5984 ;;Total ram usage:        2 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_I2C_Start
  5991 ;;		_I2C_rStart
  5992 ;;		_I2C_Stop
  5993 ;;		_I2C_Send
  5994 ;;		_I2C_Receive
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text37
  5999  0019C0                     __ptext37:
  6000                           	opt callstack 0
  6001  0019C0                     _I2C_IdleCheck:
  6002                           	opt callstack 26
  6003                           
  6004                           ;incstack = 0
  6005                           ;I2C_IdleCheck@mask stored from wreg
  6006  0019C0  6E02               	movwf	I2C_IdleCheck@mask,c
  6007  0019C2                     
  6008                           ;skI2Clib.c: 43: void I2C_IdleCheck(char mask);skI2Clib.c: 44: {;skI2Clib.c: 45:      wh
      +                          ile (( SSPCON2 & 0x1F ) | (SSPSTAT & mask)) ;
  6009  0019C2  50C7               	movf	4039,w,c	;volatile
  6010  0019C4  1402               	andwf	I2C_IdleCheck@mask,w,c
  6011  0019C6  6E01               	movwf	??_I2C_IdleCheck& (0+255),c
  6012  0019C8  50C5               	movf	4037,w,c	;volatile
  6013  0019CA  0B1F               	andlw	31
  6014  0019CC  1001               	iorwf	??_I2C_IdleCheck,w,c
  6015  0019CE  0900               	iorlw	0
  6016  0019D0  B4D8               	btfsc	status,2,c
  6017  0019D2  0012               	return	
  6018  0019D4  D7F6               	goto	l2615
  6019  0019D6                     __end_of_I2C_IdleCheck:
  6020                           	opt callstack 0
  6021                           
  6022 ;; *************** function _INTERRUPT_InterruptManager *****************
  6023 ;; Defined at:
  6024 ;;		line 61 in file "mcc_generated_files/interrupt_manager.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;		None
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;		None
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      void 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1
  6038 ;;      Params:         0       0       0
  6039 ;;      Locals:         0       0       0
  6040 ;;      Temps:          0       0       0
  6041 ;;      Totals:         0       0       0
  6042 ;;Total ram usage:        0 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; This function calls:
  6045 ;;		Nothing
  6046 ;; This function is called by:
  6047 ;;		Interrupt level 2
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	intcode
  6052  000008                     __pintcode:
  6053                           	opt callstack 0
  6054  000008                     _INTERRUPT_InterruptManager:
  6055                           	opt callstack 21
  6056                           
  6057                           ;incstack = 0
  6058  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6059                           
  6060                           ;mcc_generated_files/interrupt_manager.c: 64:     if(INTCONbits.PEIE == 1)
  6061  00000A  ACF2               	btfss	4082,6,c	;volatile
  6062  00000C  D013               	goto	i2l229
  6063                           
  6064                           ;mcc_generated_files/interrupt_manager.c: 65:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 66:          if (SSPIF == 1) {
  6065  00000E  A69E               	btfss	3998,3,c	;volatile
  6066  000010  D00A               	goto	i2l3277
  6067                           
  6068                           ;mcc_generated_files/interrupt_manager.c: 67:               if (AckCheck == 1) AckCheck 
      +                          = 0 ;
  6069  000012  0100               	movlb	0	; () banked
  6070  000014  057E               	decf	_AckCheck& (0+255),w,b
  6071  000016  117F               	iorwf	(_AckCheck+1)& (0+255),w,b
  6072  000018  A4D8               	btfss	status,2,c
  6073  00001A  D004               	goto	i2l3275
  6074                           
  6075                           ; BSR set to: 0
  6076  00001C  0E00               	movlw	0
  6077  00001E  6F7F               	movwf	(_AckCheck+1)& (0+255),b
  6078  000020  0E00               	movlw	0
  6079  000022  6F7E               	movwf	_AckCheck& (0+255),b
  6080  000024                     i2l3275:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;mcc_generated_files/interrupt_manager.c: 68:               SSPIF = 0 ;
  6084  000024  969E               	bcf	3998,3,c	;volatile
  6085  000026                     i2l3277:
  6086                           
  6087                           ;mcc_generated_files/interrupt_manager.c: 70:          if (BCLIF == 1) {
  6088  000026  A6A1               	btfss	4001,3,c	;volatile
  6089  000028  D005               	goto	i2l229
  6090                           
  6091                           ;mcc_generated_files/interrupt_manager.c: 71:               CollisionCheck = 1 ;
  6092  00002A  0E00               	movlw	0
  6093  00002C  6E5D               	movwf	_CollisionCheck+1,c
  6094  00002E  0E01               	movlw	1
  6095  000030  6E5C               	movwf	_CollisionCheck,c
  6096                           
  6097                           ;mcc_generated_files/interrupt_manager.c: 72:               BCLIF = 0 ;
  6098  000032  96A1               	bcf	4001,3,c	;volatile
  6099  000034                     i2l229:
  6100  000034  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6101  000036  0011               	retfie		f
  6102  000038                     __end_of_INTERRUPT_InterruptManager:
  6103                           	opt callstack 0
  6104                           
  6105                           	psect	rparam
  6106  0000                     
  6107                           	psect	temp
  6108  00005E                     btemp:
  6109                           	opt callstack 0
  6110  00005E                     	ds	1
  6111  0000                     int$flags	set	btemp
  6112  0000                     wtemp8	set	btemp+1
  6113  0000                     ttemp5	set	btemp+1
  6114  0000                     ttemp6	set	btemp+4
  6115  0000                     ttemp7	set	btemp+8
  6116                           tosu	equ	0xFFF
  6117                           tosh	equ	0xFFE
  6118                           tosl	equ	0xFFD
  6119                           stkptr	equ	0xFFC
  6120                           pclatu	equ	0xFFB
  6121                           pclath	equ	0xFFA
  6122                           pcl	equ	0xFF9
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           indf0	equ	0xFEF
  6130                           postinc0	equ	0xFEE
  6131                           postdec0	equ	0xFED
  6132                           preinc0	equ	0xFEC
  6133                           plusw0	equ	0xFEB
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           indf1	equ	0xFE7
  6138                           postinc1	equ	0xFE6
  6139                           postdec1	equ	0xFE5
  6140                           preinc1	equ	0xFE4
  6141                           plusw1	equ	0xFE3
  6142                           fsr1h	equ	0xFE2
  6143                           fsr1l	equ	0xFE1
  6144                           bsr	equ	0xFE0
  6145                           indf2	equ	0xFDF
  6146                           postinc2	equ	0xFDE
  6147                           postdec2	equ	0xFDD
  6148                           preinc2	equ	0xFDC
  6149                           plusw2	equ	0xFDB
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8


Data Sizes:
    Strings     36
    Constant    0
    Data        30
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      93
    BANK0           160     50     148
    BANK1           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> Color@buf(BANK0[16]), Color_Read@buf(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Color@buf(BANK0[16]), Color_Read@buf(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1684_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Color@buf(BANK0[16]), Color_Read@buf(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> Color@buf(BANK0[16]), Color_Read@buf(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 17
		 -> Color@buf(BANK0[16]), Color_Read@buf(BANK0[16]), moji2(BANK0[9]), moji(BANK0[17]), 

    i2c_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _LCD_Init_ST7032i->_LCD_Command
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _LCD_SetCursor->_LCD_Command
    _LCD_Puts->_I2C_Start
    _LCD_Clear->_LCD_Command
    _LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Color
    _main->_Color_Read
    _Color_Read->_sprintf
    _Color->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   58484
                                             48 BANK0      2     2      0
                              _Color
                         _Color_Read
                     _InitI2C_Master
                          _LCD_Clear
                        _LCD_Command
                   _LCD_Init_ST7032i
                           _LCD_Puts
                      _LCD_SetCursor
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_ST7032i                                    13     5      8    2225
                                             10 COMRAM    13     5      8
                        _LCD_Command
                           _Wait10ms
 ---------------------------------------------------------------------------------
 (2) _Wait10ms                                             3     1      2     174
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitI2C_Master                                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Color_Read                                          24    24      0   23923
                                             24 BANK0     24    24      0
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
                          _LCD_Clear
                           _LCD_Puts
                      _LCD_SetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Color                                               24    24      0   23991
                                             24 BANK0     24    24      0
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
                          _LCD_Clear
                           _LCD_Puts
                      _LCD_SetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   12845
                                              8 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11093
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   10560
                                             66 COMRAM    23    17      6
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5447
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2515
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1412
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_SetCursor                                        8     4      4    2829
                                             10 COMRAM     8     4      4
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Puts                                             5     3      2    2328
                                              7 COMRAM     5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0    1545
                                             10 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0    1545
                                              7 COMRAM     3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                           _Wait27us
 ---------------------------------------------------------------------------------
 (3) _Wait27us                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0      22
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            5     1      4    1434
                                              2 COMRAM     5     1      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _I2C_Send                                             2     2      0      44
                                              2 COMRAM     2     2      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           5     1      4     522
                                              2 COMRAM     5     1      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          4     2      2    1283
                                              2 COMRAM     4     2      2
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_IdleCheck                                        2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
     _LCD_Clear
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
         _Wait27us
     _LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _LCD_SetCursor
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
         _Wait27us
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _fputc
             _putch
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _Color_Read
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
     _LCD_Clear
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
         _Wait27us
     _LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _LCD_SetCursor
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
         _Wait27us
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _fputc
             _putch
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _InitI2C_Master
   _LCD_Clear
     _LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
       _Wait27us
   _LCD_Command
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _Wait27us
   _LCD_Init_ST7032i
     _LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
       _Wait27us
     _Wait10ms
   _LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _LCD_SetCursor
     _LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
       _Wait27us
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     32      94       4       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1       7        0.0%
DATA                 0      0      F1       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul 13 16:24:46 2019

                                  _a 006C                                    _b 0068  
                                  _c 0060                   __size_of_I2C_Start 0072  
                       ?_LCD_Command 0001                          _SSPSTATbits 000FC7  
                ___wmul@multiplicand 0003                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                        _LCD_SetCursor 18B2  
                                l323 1778                                  l284 108A  
                                l286 108C                                  l519 029C  
                                l481 15C6                                  l395 126E  
                                l556 1386                                  l566 0D22  
                                l479 15AC                                  l568 0D2A  
                                _GIE 007F97                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  _pad 1356  
                       __CFG_BORV$19 000000                  __size_of_I2C_rStart 0070  
               __size_of_I2C_Receive 0054                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                                 l1329 11C6  
                               l3025 1920                                 l3029 1926  
                               l4113 107C                                 l3067 1280  
                               l4109 106A                                 l2615 19C2  
                               l1399 16BC                                 l3611 1390  
                               l2741 1414                                 l3605 1370  
                               l3701 0E1C                                 l3615 13A8  
                               l3609 137E                                 l3801 0A78  
                               l2771 1656                                 l2747 142C  
                               l3731 10A2                                 l3571 12CE  
                               l3619 13D6                                 l2773 1666  
                               l2749 143C                                 l2941 14FE  
                               l3741 10EC                                 l3733 10A6  
                               l3581 178C                                 l3725 0F0A  
                               l3709 0E92                                 l3821 0B50  
                               l3805 0A82                                 ?_pad 0011  
                               l3751 110A                                 l3591 1942  
                               l3823 0B5E                                 l3807 0AC4  
                               l3753 1132                                 l3585 17A2  
                               l3673 0D3E                                 l2971 149C  
                               l2947 151E                                 l3659 173E  
                               l3747 10FC                                 l3843 0C72  
                               l3819 0B32                                 l3915 02E6  
                               l2973 14AC                                 l3757 1166  
                               l3749 1104                                 l3589 193E  
                               l3853 0CB8                                 l3781 0A4C  
                               l2967 1486                                 l3687 0D8E  
                               l3679 0D6C                                 l3783 0A50  
                               l3849 0CAE                                 l3793 0A6C  
                               l3785 0A60                                 l3859 0CD0  
                               l3797 0A72                                 l3789 0A66  
                               l3877 1546                                 l3879 156C  
                               l3899 0258                                 l3995 0698  
                               STR_1 021C                                 STR_2 020A  
                               STR_3 0201                                 STR_4 0213  
                               STR_5 021C                                 STR_6 020A  
                               STR_7 0201                                 STR_8 0213  
                               u2300 130E                                 _LATA 000F89  
                               _LATB 000F8A                                 u3007 0F9E  
                               _LATC 000F8B                                 u2400 187C  
                               u3017 0FCA                                 u1610 140E  
                               u2410 17E6                                 u2330 184A  
                               u3107 08DC                                 u3027 0FEE  
                               u2420 17E8                                 u2340 184C  
                               u3117 092E                                 u3037 1018  
                               u2430 16A4                                 u2510 0D18  
                               u3207 05A8                                 u3127 095A  
                               u3047 103A                                 u1640 1458  
                               u2280 12C6                                 u2440 16A6  
                               u2600 0E6E                                 u3217 05F6  
                               u3137 09A8                                 u3057 105A  
                               u2610 0EA2                                 u2530 0D8A  
                               u3227 0648                                 u3147 09FA  
                               u3067 11DA                                 u1820 152C  
                               u2460 18AA                                 u2700 1196  
                               u2540 0DC0                                 u3237 1516  
                               u2605 0E5C                                 u3157 0260  
                               u3077 19A8                                 u2470 18AC  
                               u2710 1198                                 u2390 187A  
                               u2630 0EC4                                 u2550 0DC2  
                               u3247 17FA                                 u2631 0EC2  
                               u3167 02AC                                 u3087 0660  
                               u1840 1480                                 u1648 145A  
                               u2640 0ED2                                 u2800 0B98  
                               u1905 15CE                                 u3257 180E  
                               u3177 04E6                                 u3097 0898  
                               u1906 15D0                                 u2490 173A  
                               u2650 0ED8                                 u2570 0DFA  
                               u2810 0BA4                                 u3267 1A06  
                               u3187 052A                                 u2580 0DFC  
                               u2900 0F78                                 u3277 1432  
                               u3197 057C                                 u1925 1240  
                               u1870 14C8                                 u2830 0BD8  
                               u3287 165C                                 u2680 10E8  
                               u3297 14A2                                 u2906 0F7A  
                               _PEIE 007F96                                 u1878 14CA  
                               u2790 0B96                                 _WPUA 000F77  
                               _WPUB 000F78                                 _dbuf 0084  
                               _atoi 1090                                 _main 0F34  
                               _moji 00DA                   __size_of_LCD_Clear 0034  
                               _prec 0074                                 _nout 0070  
                               pad@i 0018                                 pad@p 0015  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr1l 000FE1  
                               pad@w 001A                                 fsr2l 000FD9  
                   __end_of_I2C_Send 167C                                 btemp 005E  
                               _xtoa 0D04                     __end_of_I2C_Stop 19E8  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0038                        __CFG_IESO$OFF 000000  
                      __CFG_FOSC$IRC 000000                         ___param_bank 000000  
             __size_of_I2C_IdleCheck 0016                                ??_pad 0017  
                   __end_of_LCD_Puts 1532                       ?_LCD_SetCursor 000B  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 1A04  
                              ?_atoi 0008                                ?_main 0001  
                              _BCLIE 007D03                                _BCLIF 007D0B  
                              _ANSEL 000F7E                                ?_xtoa 001C  
                     __CFG_DEBUG$OFF 000000                                i2l229 0034  
                     __CFG_BBSIZ$OFF 000000                          LCD_Puts@ans 000B  
                       vfpfcnvrt@fmt 0045                         vfpfcnvrt@llu 004D  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _SSPIE 007CEB  
                              _SSPIF 007CF3                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                                _Color 0226  
                         _ContSet_DT 0078                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                         _Color_Read 0654                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                _flags 0076  
                              _moji2 00EB                                _fputc 12B6  
                    __end_of_isalpha 17EE                                _fputs 1782  
                    __end_of_isdigit 18B2                                atoi@n 0015  
                              pad@fp 0011                                atoi@s 0008  
                              _width 0072                                _putch 1A12  
                    __end_of_islower 1852                      __end_of_isspace 1746  
                  __end_of_I2C_Start 1462                         LCD_Command@c 000A  
                    __end_of_isupper 1882                                tablat 000FF5  
         _i2c_driver_busCollisionISR 0082                                ttemp5 005F  
                              ttemp6 0062                                ttemp7 0066  
                              status 000FD8                                wtemp8 005F  
                    __end_of_sprintf 162E                                xtoa@c 0041  
                              xtoa@d 001E                                xtoa@i 003F  
                              xtoa@n 0037                                xtoa@p 0033  
                              xtoa@w 0035                                xtoa@x 0026  
                     __CFG_HFOFST$ON 000000                    LCD_Init_ST7032i@d 0016  
                    __end_of_toupper 16C6                     ??_InitI2C_Master 0003  
                         _FuncSet_DT 007A                         _toupper$1747 000D  
                     __CFG_MCLRE$OFF 000000                      __initialization 16C6  
                       __end_of_atoi 11D0                         __end_of_main 1090  
                       __end_of_xtoa 0F34                       __CFG_PCLKEN$ON 000000  
        ?_INTERRUPT_InterruptManager 0001                     __end_of_Wait10ms 19C0  
                             ??_atoi 000A                               ??_main 00D4  
                   __end_of_Wait27us 1A0E                               ??_xtoa 0027  
                  __end_of_LCD_Clear 1822                        __activetblptr 000002  
                     __CFG_PLLEN$OFF 000000                               ?_Color 0001  
                      _I2C_IdleCheck 19C0                               ?_fputc 0001  
                             ?_fputs 000A                               ?_putch 0001  
                             _ANSELH 000F7F                       __CFG_WDTEN$OFF 000000  
                             i2l3275 0024                               i2l3277 0026  
                             _OSCCON 000FD3                        vfpfcnvrt@done 0056  
           __end_of_LCD_Init_ST7032i 12B6                               Color@i 00D2  
                             _SSPADD 000FC8                               _SSPBUF 000FC9  
                             _SSPMSK 000F6F                         ??_I2C_rStart 0007  
                     __CFG_XINST$OFF 000000                         vfprintf@cfmt 00AA  
                             ___wmul 195E                       __CFG_STVREN$ON 000000  
                    ??_LCD_SetCursor 000F                               clear_0 16EC  
                             pad@buf 0013                 __size_of_LCD_Command 003C  
                             _strlen 1934                               fputc@c 0001  
                             fputs@c 000E                               fputs@i 000F  
                             fputs@s 000A                            ??_isalpha 0003  
                          ??_isdigit 0003                            ?_I2C_Send 0001  
                          ?_I2C_Stop 0001                            ??_islower 0003  
                       __mediumconst 0000                            ??_isspace 0003  
                 __end_of_I2C_rStart 14D2                          Wait10ms@num 0001  
                             tblptrh 000FF7                            ??_isupper 0003  
                             tblptrl 000FF6                               tblptru 000FF8  
                        ?_Color_Read 0001                       ?_I2C_IdleCheck 0001  
                             putch@c 0001                     __end_of_vfprintf 1588  
                          ??_sprintf 005A                               xtoa@fp 001C  
                          ??_toupper 0009        __size_of_INTERRUPT_Initialize 0004  
                  _SYSTEM_Initialize 19E8                           __accesstop 0060  
            __end_of__initialization 16FA                            ?_LCD_Puts 0008  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
                      __end_of_Color 0654                       __pcstackCOMRAM 0001  
                       __pidataBANK0 1984                  ??_SYSTEM_Initialize 0001  
                          LCD_Puts@s 0008                  InitI2C_Master@speed 0001  
                      __end_of_fputc 1356                        __end_of_fputs 17BA  
                      __end_of_putch 1A14                           ??_I2C_Send 0003  
                         ??_I2C_Stop 0003                              ??_Color 00BC  
                            ??_fputc 0005            __end_of_SYSTEM_Initialize 19F6  
                            ??_fputs 000E                              ??_putch 0001  
                         __pbssBANK0 0060                           ??_LCD_Puts 000A  
                          ?_Wait10ms 0001                            ?_Wait27us 0001  
                __size_of_Color_Read 03B2                           I2C_Send@dt 0004  
                            ?___wmul 0001                        ??_I2C_Receive 0005  
                            ?_strlen 0001                      ??_I2C_IdleCheck 0001  
                            _OSCCON2 000FD2                   __size_of_vfpfcnvrt 02FE  
                            _OSCTUNE 000F9B                              _SSPCON1 000FC6  
                            _SSPCON2 000FC5                              _SSPSTAT 000FC7  
                          _I2C_Start 13F0                           ??_Wait10ms 0003  
                         ??_Wait27us 0001                       I2C_Receive@ack 0003  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                      __size_of___wmul 0026  
                          ?_vfprintf 00A4                         __psmallconst 0200  
           LCD_SetCursor@row_offsets 000F                              __pcinit 16C6  
                            __ramtop 0200                              __ptext0 0F34  
                            __ptext1 19E8                              __ptext2 18E0  
                            __ptext3 19F6                              __ptext4 1A0E  
                            __ptext5 11D0                              __ptext6 19A2  
                            __ptext7 190A                              __ptext8 0654  
                            __ptext9 0226                      __size_of_strlen 002A  
              _OSCILLATOR_Initialize 19F6                         __size_of_pad 009A  
                            _isalpha 17BA                              _isdigit 1882  
                            _islower 1822             ??_PIN_MANAGER_Initialize 0001  
                            _isspace 1708                              _isupper 1852  
                          _LCD_Clear 17EE                  __end_of_I2C_Receive 15DC  
                            atoi@neg 000E           __size_of_SYSTEM_Initialize 000E  
                            _sprintf 15DC                              _toupper 167C  
               end_of_initialization 16FA                     LCD_SetCursor@col 000B  
                   LCD_SetCursor@row 000D                              fputc@fp 0003  
                     LCD_Command@ans 0008                        __Lmediumconst 0000  
                            fputs@fp 000C                    ?_LCD_Init_ST7032i 000B  
                         ?_I2C_Start 0003                   ??_LCD_Init_ST7032i 0013  
                       I2C_rStart@rw 0005                    __end_of_vfpfcnvrt 0D04  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                           ??_vfprintf 005A  
                            strlen@a 0003                              strlen@s 0001  
                LCD_Init_ST7032i@bon 000F                         _LCD_ColumnSu 005A  
                       ??_Color_Read 00BC                           ?_LCD_Clear 0001  
                  __size_of_I2C_Send 004E                    __size_of_I2C_Stop 0012  
                  __size_of_LCD_Puts 0060         __end_of_INTERRUPT_Initialize 1A12  
                 __end_of_Color_Read 0A06                        ??_LCD_Command 0008  
                        vfpfcnvrt@ap 0047                          vfpfcnvrt@fp 0043  
                     __end_of___wmul 1984                __end_of_LCD_SetCursor 18E0  
            __size_of_InitI2C_Master 002A               ?_OSCILLATOR_Initialize 0001  
                        _I2C_Receive 1588                       __end_of_strlen 195E  
                start_initialization 16C6      __size_of_PIN_MANAGER_Initialize 002A  
                        __end_of_pad 13F0                          ??_I2C_Start 0007  
                        vfprintf@fmt 00A6                    __size_of_Wait10ms 001E  
                  __size_of_Wait27us 000A                             ??___wmul 0005  
                        __pdataBANK0 00D6                             ??_strlen 0003  
                     _CollisionCheck 005C                    _i2c_driver_i2cISR 0080  
                __end_of_LCD_Command 1782                          __pbssCOMRAM 005A  
                      __pcstackBANK0 00A4                          ??_LCD_Clear 000B  
                          _atoi$1644 0010                            _atoi$1645 0014  
                          _atoi$1646 0012               _PIN_MANAGER_Initialize 18E0  
                          __pintcode 0008         ??_INTERRUPT_InterruptManager 0001  
                  __size_of_vfprintf 0056                          __smallconst 0200  
                           ?_isalpha 0001                          I2C_Start@rw 0005  
                           ?_isdigit 0001                             _I2C_Send 162E  
                           _I2C_Stop 19D6                        I2C_Receive@dt 0005  
                           ?_islower 0001                             ?_isspace 0001  
                     __size_of_Color 042E                             ?_isupper 0001  
              __end_of_I2C_IdleCheck 19D6                             ?_sprintf 00AC  
                     __size_of_fputc 00A0                       __size_of_fputs 0038  
                           ?_toupper 0007                       __size_of_putch 0002  
               _INTERRUPT_Initialize 1A0E             LCD_Init_ST7032i@contrast 000D  
                     ___wmul@product 0005                             _LCD_Puts 14D2  
                           _LATBbits 000F8A                             _LATCbits 000F8B  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0030  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                           Color@ans 00D0                             Color@buf 00C0  
                        _LCD_Command 1746                             _AckCheck 007E  
                          _vfpfcnvrt 0A06                            _xtoa$1173 002F  
                          _xtoa$1174 0031                       _InitI2C_Master 190A  
          __size_of_LCD_Init_ST7032i 00E6                    ___wmul@multiplier 0001  
                        _LCD_NowPage 007C                         _isspace$1671 0007  
                      I2C_Start@adrs 0003                           vfpfcnvrt@c 0055  
                        _INTCON2bits 000FF1                            copy_data0 16DA  
              ?_INTERRUPT_Initialize 0001                   LCD_SetCursor@F2916 00D6  
                         _I2C_rStart 1462                             _Wait10ms 19A2  
                           _Wait27us 1A04                             __Hrparam 0000  
                         vfprintf@ap 00A8                             __Lrparam 0000  
                         vfprintf@fp 00A4                   __CFG_BOREN$SBORDIS 000000  
             __end_of_InitI2C_Master 1934              ??_OSCILLATOR_Initialize 0001  
                  I2C_IdleCheck@mask 0002                           ?_vfpfcnvrt 0043  
                       ?_I2C_Receive 0003                           sprintf@fmt 00AE  
                   __size_of_isalpha 0034                     __size_of_isdigit 0030  
                   __size_of_islower 0030                     __size_of_isspace 003E  
                           __ptext10 15DC                             __ptext11 1532  
                           __ptext20 1A12                             __ptext12 0A06  
                           __ptext21 1852                             __ptext13 0D04  
                           __ptext30 1746                             __ptext22 17BA  
                           __ptext14 167C                             __ptext31 1A04  
                           __ptext23 1090                             __ptext15 1822  
                           __ptext32 19D6                             __ptext24 1708  
                           __ptext16 1356                             __ptext33 13F0  
                           __ptext25 1882                             __ptext17 1934  
                           __ptext34 162E                             __ptext26 195E  
                           __ptext18 1782                             __ptext35 1462  
                           __ptext27 18B2                             __ptext19 12B6  
                           __ptext36 1588                             __ptext28 14D2  
                           __ptext37 19C0                             __ptext29 17EE  
                   __size_of_isupper 0030                     __size_of_sprintf 0052  
                   __size_of_toupper 004A                       I2C_rStart@adrs 0003  
                      __size_of_atoi 0140                        __size_of_main 015C  
                      __size_of_xtoa 0230                        Color_Read@ans 00D0  
                      Color_Read@buf 00C0                             int$flags 005E  
                    ?_InitI2C_Master 0001                             _vfprintf 1532  
 __end_of_INTERRUPT_InterruptManager 0038           _INTERRUPT_InterruptManager 0008  
                     _vfpfcnvrt$1189 0058                           _INTCONbits 000FF2  
                           isalpha@c 0001                             isdigit@c 0001  
             ??_INTERRUPT_Initialize 0001                             intlevel2 0000  
                          sprintf@ap 00B4                             islower@c 0001  
                           isspace@c 0001               __size_of_LCD_SetCursor 002E  
            ?_PIN_MANAGER_Initialize 0001                          ?_I2C_rStart 0003  
                           isupper@c 0001                          ??_vfpfcnvrt 0049  
                   _LCD_Init_ST7032i 11D0                             sprintf@f 00B6  
                           sprintf@s 00AC                LCD_Init_ST7032i@colsu 0011  
                           toupper@c 0007                          Color_Read@i 00D2  
                        _SSPCON1bits 000FC6                          _SSPCON2bits 000FC5  
     __end_of_PIN_MANAGER_Initialize 190A                 LCD_Init_ST7032i@icon 000B  
